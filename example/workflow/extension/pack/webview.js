/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./lib/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/css/diagram.css":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/css/diagram.css ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../css-loader/dist/cjs.js!./diagram.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/css/diagram.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/di.config.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/di.config.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! ../css/diagram.css */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/css/diagram.css");
__webpack_require__(/*! balloon-css/balloon.min.css */ "../../../node_modules/balloon-css/balloon.min.css");
__webpack_require__(/*! sprotty/css/edit-label.css */ "../../../node_modules/sprotty/css/edit-label.css");
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var di_config_1 = __webpack_require__(/*! ./direct-task-editing/di.config */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/direct-task-editing/di.config.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model.js");
var workflow_views_1 = __webpack_require__(/*! ./workflow-views */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/workflow-views.js");
var workflowDiagramModule = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    rebind(client_1.TYPES.ILogger).to(client_1.ConsoleLogger).inSingletonScope();
    rebind(client_1.TYPES.LogLevel).toConstantValue(client_1.LogLevel.warn);
    bind(client_1.GLSP_TYPES.IMovementRestrictor).to(client_1.NoOverlapMovmentRestrictor).inSingletonScope();
    bind(client_1.TYPES.ISnapper).to(client_1.GridSnapper);
    bind(client_1.TYPES.ICommandPaletteActionProvider).to(client_1.RevealNamedElementActionProvider);
    bind(client_1.TYPES.IContextMenuItemProvider).to(client_1.DeleteElementContextMenuItemProvider);
    var context = { bind: bind, unbind: unbind, isBound: isBound, rebind: rebind };
    client_1.configureModelElement(context, 'graph', client_1.GLSPGraph, client_1.SGraphView);
    client_1.configureModelElement(context, 'task:automated', model_1.TaskNode, workflow_views_1.TaskNodeView);
    client_1.configureModelElement(context, 'task:manual', model_1.TaskNode, workflow_views_1.TaskNodeView);
    client_1.configureModelElement(context, 'label:heading', client_1.SLabel, client_1.SLabelView, { enable: [client_1.editLabelFeature] });
    client_1.configureModelElement(context, 'comp:comp', client_1.SCompartment, client_1.SCompartmentView);
    client_1.configureModelElement(context, 'comp:header', client_1.SCompartment, client_1.SCompartmentView);
    client_1.configureModelElement(context, 'label:icon', client_1.SLabel, client_1.SLabelView);
    client_1.configureModelElement(context, 'html', client_1.HtmlRoot, client_1.HtmlRootView);
    client_1.configureModelElement(context, 'pre-rendered', client_1.PreRenderedElement, client_1.PreRenderedView);
    client_1.configureModelElement(context, 'button:expand', client_1.SButton, client_1.ExpandButtonView);
    client_1.configureModelElement(context, 'routing-point', client_1.SRoutingHandle, client_1.SRoutingHandleView);
    client_1.configureModelElement(context, 'volatile-routing-point', client_1.SRoutingHandle, client_1.SRoutingHandleView);
    client_1.configureModelElement(context, 'edge', client_1.SEdge, workflow_views_1.WorkflowEdgeView);
    client_1.configureModelElement(context, 'edge:weighted', model_1.WeightedEdge, workflow_views_1.WeightedEdgeView);
    client_1.configureModelElement(context, 'icon', model_1.Icon, workflow_views_1.IconView);
    client_1.configureModelElement(context, 'activityNode:merge', model_1.ActivityNode, client_1.DiamondNodeView);
    client_1.configureModelElement(context, 'activityNode:decision', model_1.ActivityNode, client_1.DiamondNodeView);
    client_1.configureModelElement(context, 'activityNode:fork', model_1.ActivityNode, workflow_views_1.ForkOrJoinNodeView);
    client_1.configureModelElement(context, 'activityNode:join', model_1.ActivityNode, workflow_views_1.ForkOrJoinNodeView);
});
function createContainer(widgetId) {
    var container = new inversify_1.Container();
    container.load(client_1.validationModule, client_1.defaultModule, client_1.glspMouseToolModule, client_1.defaultGLSPModule, client_1.glspSelectModule, client_1.boundsModule, client_1.viewportModule, client_1.toolsModule, client_1.glspHoverModule, client_1.fadeModule, client_1.exportModule, client_1.expandModule, client_1.openModule, client_1.buttonModule, client_1.modelSourceModule, client_1.labelEditUiModule, client_1.glspEditLabelModule, workflowDiagramModule, client_1.executeCommandModule, client_1.toolFeedbackModule, client_1.modelHintsModule, client_1.glspContextMenuModule, client_1.glspServerCopyPasteModule, client_1.glspCommandPaletteModule, client_1.paletteModule, client_1.routingModule, client_1.glspDecorationModule, client_1.edgeLayoutModule, client_1.zorderModule, client_1.layoutCommandsModule, di_config_1.directTaskEditor, client_1.navigationModule, client_1.markerNavigatorModule);
    client_1.overrideViewerOptions(container, {
        baseDiv: widgetId,
        hiddenDiv: widgetId + "_hidden",
        needsClientLayout: true
    });
    return container;
}
exports.default = createContainer;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/direct-task-editing/di.config.js":
/*!**********************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/direct-task-editing/di.config.js ***!
  \**********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var direct_task_editor_1 = __webpack_require__(/*! ./direct-task-editor */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/direct-task-editing/direct-task-editor.js");
exports.directTaskEditor = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(direct_task_editor_1.TaskEditor).toSelf().inSingletonScope();
    bind(sprotty_1.TYPES.IUIExtension).toService(direct_task_editor_1.TaskEditor);
});


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/direct-task-editing/direct-task-editor.js":
/*!*******************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/direct-task-editing/direct-task-editor.js ***!
  \*******************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var dom_helper_1 = __webpack_require__(/*! sprotty/lib/base/views/dom-helper */ "../../../node_modules/sprotty/lib/base/views/dom-helper.js");
var model_1 = __webpack_require__(/*! ../model */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model.js");
var ApplyTaskEditOperation = /** @class */ (function () {
    function ApplyTaskEditOperation(taskId, expression) {
        this.taskId = taskId;
        this.expression = expression;
        this.kind = ApplyTaskEditOperation.KIND;
    }
    ApplyTaskEditOperation.KIND = 'applyTaskEdit';
    return ApplyTaskEditOperation;
}());
exports.ApplyTaskEditOperation = ApplyTaskEditOperation;
var TaskEditor = /** @class */ (function (_super) {
    __extends(TaskEditor, _super);
    function TaskEditor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.autoSuggestionSettings = {
            noSuggestionsMessage: 'No suggestions available',
            suggestionsClass: 'command-palette-suggestions',
            debounceWaitMs: 50,
            showOnFocus: true
        };
        return _this;
    }
    TaskEditor_1 = TaskEditor;
    TaskEditor.prototype.id = function () { return TaskEditor_1.ID; };
    TaskEditor.prototype.containerClass = function () { return 'command-palette'; };
    TaskEditor.prototype.initializeContents = function (containerElement) {
        var _this = this;
        this.autoSuggestion = new client_1.AutoCompleteWidget(this.autoSuggestionSettings, { provideSuggestions: function (input) { return _this.retrieveSuggestions(input); } }, { executeFromSuggestion: function (input) { return _this.executeFromSuggestion(input); } }, function () { return _this.hide(); }, this.logger);
        this.autoSuggestion.configureValidation({ validate: function (input) { return _this.validateInput(input); } }, new client_1.ValidationDecorator(containerElement));
        this.autoSuggestion.configureTextSubmitHandler({ executeFromTextOnlyInput: function (input) { return _this.executeFromTextOnlyInput(input); } });
        this.autoSuggestion.initialize(containerElement);
    };
    TaskEditor.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        _super.prototype.show.apply(this, __spread([root], contextElementIds));
        this.autoSuggestion.open(root);
    };
    TaskEditor.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        this.task = getTask(contextElementIds, root)[0];
        this.autoSuggestion.inputField.value = '';
        this.setPosition(containerElement);
    };
    TaskEditor.prototype.setPosition = function (containerElement) {
        var x = 0;
        var y = 0;
        if (this.task) {
            var bounds = client_1.getAbsoluteClientBounds(this.task, this.domHelper, this.viewerOptions);
            x = bounds.x + 5;
            y = bounds.y + 5;
        }
        containerElement.style.left = x + "px";
        containerElement.style.top = y + "px";
        containerElement.style.width = '200px';
    };
    TaskEditor.prototype.retrieveSuggestions = function (input) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, response;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(new client_1.RequestContextActions(TaskEditor_1.ID, this.editorContextService.get((_a = {}, _a['text'] = input, _a))))];
                    case 1:
                        response = _b.sent();
                        if (client_1.isSetContextActionsAction(response)) {
                            return [2 /*return*/, response.actions];
                        }
                        return [2 /*return*/, Promise.reject()];
                }
            });
        });
    };
    TaskEditor.prototype.validateInput = function (input) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(new client_1.RequestEditValidationAction(TaskEditor_1.ID, this.task.id, input))];
                    case 1:
                        response = _a.sent();
                        if (client_1.isSetEditValidationResultAction(response)) {
                            return [2 /*return*/, response.status];
                        }
                        return [2 /*return*/, Promise.reject()];
                }
            });
        });
    };
    TaskEditor.prototype.executeFromSuggestion = function (input) {
        this.actionDispatcher.dispatchAll(client_1.toActionArray(input));
    };
    TaskEditor.prototype.executeFromTextOnlyInput = function (input) {
        var action = new ApplyTaskEditOperation(this.task.id, input);
        this.actionDispatcher.dispatch(action);
    };
    TaskEditor.prototype.hide = function () {
        this.autoSuggestion.dispose();
        _super.prototype.hide.call(this);
    };
    var TaskEditor_1;
    TaskEditor.ID = 'task-editor';
    __decorate([
        inversify_1.inject(lib_1.TYPES.IActionDispatcher),
        __metadata("design:type", client_1.GLSPActionDispatcher)
    ], TaskEditor.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(client_1.EditorContextService),
        __metadata("design:type", client_1.EditorContextService)
    ], TaskEditor.prototype, "editorContextService", void 0);
    __decorate([
        inversify_1.inject(lib_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], TaskEditor.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.inject(lib_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], TaskEditor.prototype, "domHelper", void 0);
    __decorate([
        inversify_1.inject(lib_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], TaskEditor.prototype, "logger", void 0);
    TaskEditor = TaskEditor_1 = __decorate([
        inversify_1.injectable()
    ], TaskEditor);
    return TaskEditor;
}(client_1.AbstractUIExtension));
exports.TaskEditor = TaskEditor;
function getTask(ids, element) {
    return ids.map(function (id) { return element.index.getById(id); }).filter(model_1.isTaskNode);
}


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/index.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/index.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var di_config_1 = __webpack_require__(/*! ./di.config */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/di.config.js");
exports.createWorkflowDiagramContainer = di_config_1.default;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model-schema.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model-schema.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ActivityNodeSchema;
(function (ActivityNodeSchema) {
    var Type;
    (function (Type) {
        Type.INITIAL = 'initalNode';
        Type.FINAL = 'finalNode';
        Type.DECISION = 'decisionNode';
        Type.MERGE = 'mergeNode';
        Type.JOIN = 'joinNode';
        Type.FORK = 'forkNode';
        Type.UNDEFINED = "undefined";
    })(Type = ActivityNodeSchema.Type || (ActivityNodeSchema.Type = {}));
})(ActivityNodeSchema = exports.ActivityNodeSchema || (exports.ActivityNodeSchema = {}));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var model_schema_1 = __webpack_require__(/*! ./model-schema */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/model-schema.js");
var TaskNode = /** @class */ (function (_super) {
    __extends(TaskNode, _super);
    function TaskNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "";
        return _this;
    }
    Object.defineProperty(TaskNode.prototype, "editableLabel", {
        get: function () {
            var headerComp = this.children.find(function (element) { return element.type === 'comp:header'; });
            if (headerComp) {
                var label = headerComp.children.find(function (element) { return element.type === 'label:heading'; });
                if (label && client_1.isEditableLabel(label)) {
                    return label;
                }
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    TaskNode.DEFAULT_FEATURES = [client_1.connectableFeature, client_1.deletableFeature, client_1.selectFeature, client_1.boundsFeature,
        client_1.moveFeature, client_1.layoutContainerFeature, client_1.fadeFeature, client_1.hoverFeedbackFeature, client_1.popupFeature, client_1.nameFeature, client_1.withEditLabelFeature];
    return TaskNode;
}(client_1.RectangularNode));
exports.TaskNode = TaskNode;
function isTaskNode(element) {
    return element instanceof TaskNode || false;
}
exports.isTaskNode = isTaskNode;
var WeightedEdge = /** @class */ (function (_super) {
    __extends(WeightedEdge, _super);
    function WeightedEdge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return WeightedEdge;
}(client_1.SEdge));
exports.WeightedEdge = WeightedEdge;
var ActivityNode = /** @class */ (function (_super) {
    __extends(ActivityNode, _super);
    function ActivityNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.nodeType = model_schema_1.ActivityNodeSchema.Type.UNDEFINED;
        _this.size = {
            width: 32,
            height: 32
        };
        _this.strokeWidth = 1;
        return _this;
    }
    return ActivityNode;
}(client_1.DiamondNode));
exports.ActivityNode = ActivityNode;
var Icon = /** @class */ (function (_super) {
    __extends(Icon, _super);
    function Icon() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.size = {
            width: 32,
            height: 32
        };
        return _this;
    }
    Icon.DEFAULT_FEATURES = [client_1.boundsFeature, client_1.layoutContainerFeature, client_1.layoutableChildFeature, client_1.fadeFeature, client_1.executeCommandFeature];
    return Icon;
}(client_1.SShapeElement));
exports.Icon = Icon;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/workflow-views.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/workflow-views.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var snabbdom = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var JSX = { createElement: snabbdom.svg };
var TaskNodeView = /** @class */ (function (_super) {
    __extends(TaskNodeView, _super);
    function TaskNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TaskNodeView.prototype.render = function (node, context) {
        var rcr = this.getRoundedCornerRadius(node);
        var graph = JSX.createElement("g", null,
            JSX.createElement("rect", { "class-sprotty-node": true, "class-task": true, "class-automated": node.taskType === 'automated', "class-manual": node.taskType === 'manual', "class-mouseover": node.hoverFeedback, "class-selected": node.selected, x: 0, y: 0, rx: rcr, ry: rcr, width: Math.max(0, node.bounds.width), height: Math.max(0, node.bounds.height) }),
            context.renderChildren(node));
        return graph;
    };
    TaskNodeView.prototype.getRoundedCornerRadius = function (node) {
        return 5;
    };
    TaskNodeView = __decorate([
        inversify_1.injectable()
    ], TaskNodeView);
    return TaskNodeView;
}(client_1.RectangularNodeView));
exports.TaskNodeView = TaskNodeView;
var ForkOrJoinNodeView = /** @class */ (function (_super) {
    __extends(ForkOrJoinNodeView, _super);
    function ForkOrJoinNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ForkOrJoinNodeView.prototype.render = function (node, context) {
        var graph = JSX.createElement("g", null,
            JSX.createElement("rect", { "class-sprotty-node": true, "class-forkOrJoin": true, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, width: 10, height: Math.max(50, node.bounds.height) }));
        return graph;
    };
    ForkOrJoinNodeView = __decorate([
        inversify_1.injectable()
    ], ForkOrJoinNodeView);
    return ForkOrJoinNodeView;
}(client_1.RectangularNodeView));
exports.ForkOrJoinNodeView = ForkOrJoinNodeView;
var WorkflowEdgeView = /** @class */ (function (_super) {
    __extends(WorkflowEdgeView, _super);
    function WorkflowEdgeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WorkflowEdgeView.prototype.renderAdditionals = function (edge, segments, context) {
        var p1 = segments[segments.length - 2];
        var p2 = segments[segments.length - 1];
        return [
            JSX.createElement("path", { "class-sprotty-edge": true, "class-arrow": true, d: "M 1.5,0 L 10,-4 L 10,4 Z", transform: "rotate(" + client_1.toDegrees(client_1.angleOfPoint({ x: p1.x - p2.x, y: p1.y - p2.y })) + " " + p2.x + " " + p2.y + ") translate(" + p2.x + " " + p2.y + ")" })
        ];
    };
    WorkflowEdgeView = __decorate([
        inversify_1.injectable()
    ], WorkflowEdgeView);
    return WorkflowEdgeView;
}(client_1.PolylineEdgeView));
exports.WorkflowEdgeView = WorkflowEdgeView;
var WeightedEdgeView = /** @class */ (function (_super) {
    __extends(WeightedEdgeView, _super);
    function WeightedEdgeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WeightedEdgeView.prototype.render = function (edge, context) {
        var router = this.edgeRouterRegistry.get(edge.routerKind);
        var route = router.route(edge);
        if (route.length === 0)
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        return JSX.createElement("g", { "class-sprotty-edge": true, "class-weighted": true, "class-low": edge.probability === 'low', "class-medium": edge.probability === 'medium', "class-high": edge.probability === 'high', "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route: route }));
    };
    WeightedEdgeView = __decorate([
        inversify_1.injectable()
    ], WeightedEdgeView);
    return WeightedEdgeView;
}(WorkflowEdgeView));
exports.WeightedEdgeView = WeightedEdgeView;
var IconView = /** @class */ (function () {
    function IconView() {
    }
    IconView.prototype.render = function (element, context) {
        var radius = this.getRadius();
        return JSX.createElement("g", null,
            JSX.createElement("circle", { "class-sprotty-icon": true, r: radius, cx: radius, cy: radius }),
            context.renderChildren(element));
    };
    IconView.prototype.getRadius = function () {
        return 16;
    };
    IconView = __decorate([
        inversify_1.injectable()
    ], IconView);
    return IconView;
}());
exports.IconView = IconView;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/css/command-palette.css":
/*!**************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/command-palette.css ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../css-loader/dist/cjs.js!./command-palette.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/command-palette.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/css/decoration.css":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/decoration.css ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../css-loader/dist/cjs.js!./decoration.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/decoration.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/glsp-sprotty.css ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../css-loader/dist/cjs.js!./glsp-sprotty.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/css/tool-palette.css":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/tool-palette.css ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../css-loader/dist/cjs.js!./tool-palette.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/tool-palette.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js":
/*!********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var model_initialization_constraint_1 = __webpack_require__(/*! ./model-initialization-constraint */ "../../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js");
var GLSPActionDispatcher = /** @class */ (function (_super) {
    __extends(GLSPActionDispatcher, _super);
    function GLSPActionDispatcher() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeouts = new Map();
        _this.onModelInitialized = Promise.resolve();
        return _this;
    }
    GLSPActionDispatcher.prototype.initialize = function () {
        var _this = this;
        return _super.prototype.initialize.call(this).then(function () { return _this.startModelInitialization(); });
    };
    GLSPActionDispatcher.prototype.startModelInitialization = function () {
        var _this = this;
        this.logger.log(this, 'Starting model initialization mode');
        this.onModelInitialized = this.initiailizationConstraint.onInitialized();
        this.onModelInitialized.then(function () { return _this.logger.log(_this, 'Model initialization completed'); });
    };
    GLSPActionDispatcher.prototype.onceModelInitialized = function () {
        return this.onModelInitialized;
    };
    GLSPActionDispatcher.prototype.dispatch = function (action) {
        var result = _super.prototype.dispatch.call(this, action);
        this.initiailizationConstraint.notifyDispatched(action);
        return result;
    };
    GLSPActionDispatcher.prototype.handleAction = function (action) {
        if (sprotty_1.isResponseAction(action)) {
            // clear timeout
            var timeout = this.timeouts.get(action.responseId);
            if (timeout !== undefined) {
                clearTimeout(timeout);
                this.timeouts.delete(action.responseId);
            }
            // we might have reached a timeout, so we simply drop the response
            var deferred = this.requests.get(action.responseId);
            if (deferred === undefined) {
                this.logger.log(this, 'No matching request for response', action);
                return Promise.resolve();
            }
        }
        return _super.prototype.handleAction.call(this, action);
    };
    /**
     * Dispatch a request and waits for a response until the timeout given in `timeoutMs` has
     * been reached. The returned promise is resolved when a response with matching identifier
     * is dispatched or when the timeout has been reached. That response is _not_ passed to the
     * registered action handlers. Instead, it is the responsibility of the caller of this method
     * to handle the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     * If `rejectOnTimeout` is set to false (default) the returned promise will be resolved with
     * no value, otherwise it will be rejected.
     */
    GLSPActionDispatcher.prototype.requestUntil = function (action, timeoutMs, rejectOnTimeout) {
        var _this = this;
        if (timeoutMs === void 0) { timeoutMs = 2000; }
        if (rejectOnTimeout === void 0) { rejectOnTimeout = false; }
        if (!action.requestId) {
            return Promise.reject(new Error('Request without requestId'));
        }
        var requestId = action.requestId;
        var timeout = setTimeout(function () {
            var deferred = _this.requests.get(requestId);
            if (deferred !== undefined) {
                // cleanup
                clearTimeout(timeout);
                _this.requests.delete(requestId);
                var notification = 'Request ' + requestId + ' (' + action + ') time out after ' + timeoutMs + 'ms.';
                if (rejectOnTimeout) {
                    deferred.reject(notification);
                }
                else {
                    _this.logger.info(_this, notification);
                    deferred.resolve();
                }
            }
        }, timeoutMs);
        this.timeouts.set(requestId, timeout);
        return _super.prototype.request.call(this, action);
    };
    __decorate([
        inversify_1.inject(model_initialization_constraint_1.ModelInitializationConstraint),
        __metadata("design:type", model_initialization_constraint_1.ModelInitializationConstraint)
    ], GLSPActionDispatcher.prototype, "initiailizationConstraint", void 0);
    return GLSPActionDispatcher;
}(sprotty_1.ActionDispatcher));
exports.GLSPActionDispatcher = GLSPActionDispatcher;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var RequestContextActions = /** @class */ (function () {
    function RequestContextActions(contextId, editorContext, requestId) {
        if (requestId === void 0) { requestId = sprotty_1.generateRequestId(); }
        this.contextId = contextId;
        this.editorContext = editorContext;
        this.requestId = requestId;
        this.kind = RequestContextActions.KIND;
    }
    RequestContextActions.KIND = "requestContextActions";
    return RequestContextActions;
}());
exports.RequestContextActions = RequestContextActions;
var SetContextActions = /** @class */ (function () {
    function SetContextActions(actions, responseId, args) {
        if (responseId === void 0) { responseId = ''; }
        this.actions = actions;
        this.responseId = responseId;
        this.args = args;
        this.kind = SetContextActions.KIND;
    }
    SetContextActions.KIND = "setContextActions";
    return SetContextActions;
}());
exports.SetContextActions = SetContextActions;
function isSetContextActionsAction(action) {
    return action !== undefined && (action.kind === SetContextActions.KIND)
        && action.actions !== undefined;
}
exports.isSetContextActionsAction = isSetContextActionsAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var SetEditModeAction = /** @class */ (function () {
    function SetEditModeAction(editMode) {
        if (editMode === void 0) { editMode = EditMode.EDITABLE; }
        this.editMode = editMode;
        this.kind = SetEditModeAction_1.KIND;
    }
    SetEditModeAction_1 = SetEditModeAction;
    var SetEditModeAction_1;
    SetEditModeAction.KIND = "setEditMode";
    SetEditModeAction = SetEditModeAction_1 = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [String])
    ], SetEditModeAction);
    return SetEditModeAction;
}());
exports.SetEditModeAction = SetEditModeAction;
function isSetEditModeAction(action) {
    return action !== undefined && (action.kind === SetEditModeAction.KIND)
        && "editMode" in action && typeof action["editMode"] === "string";
}
exports.isSetEditModeAction = isSetEditModeAction;
var EditMode;
(function (EditMode) {
    EditMode.READONLY = "readonly";
    EditMode.EDITABLE = "editable";
})(EditMode = exports.EditMode || (exports.EditMode = {}));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-validation-actions.js":
/*!**********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/actions/edit-validation-actions.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var RequestEditValidationAction = /** @class */ (function () {
    function RequestEditValidationAction(contextId, modelElementId, text, requestId) {
        if (requestId === void 0) { requestId = sprotty_1.generateRequestId(); }
        this.contextId = contextId;
        this.modelElementId = modelElementId;
        this.text = text;
        this.requestId = requestId;
        this.kind = RequestEditValidationAction.KIND;
    }
    RequestEditValidationAction.KIND = "requestEditValidation";
    return RequestEditValidationAction;
}());
exports.RequestEditValidationAction = RequestEditValidationAction;
var SetEditValidationResultAction = /** @class */ (function () {
    function SetEditValidationResultAction(status, responseId, args) {
        if (responseId === void 0) { responseId = ''; }
        this.status = status;
        this.responseId = responseId;
        this.args = args;
        this.kind = SetEditValidationResultAction.KIND;
    }
    SetEditValidationResultAction.KIND = "setEditValidationResult";
    return SetEditValidationResultAction;
}());
exports.SetEditValidationResultAction = SetEditValidationResultAction;
function isSetEditValidationResultAction(action) {
    return action !== undefined && (action.kind === SetEditValidationResultAction.KIND)
        && action.status !== undefined;
}
exports.isSetEditValidationResultAction = isSetEditValidationResultAction;
var ValidationStatus;
(function (ValidationStatus) {
    var Severity;
    (function (Severity) {
        Severity[Severity["FATAL"] = 0] = "FATAL";
        Severity[Severity["ERROR"] = 1] = "ERROR";
        Severity[Severity["WARNING"] = 2] = "WARNING";
        Severity[Severity["INFO"] = 3] = "INFO";
        Severity[Severity["OK"] = 4] = "OK";
        Severity[Severity["NONE"] = 5] = "NONE";
    })(Severity = ValidationStatus.Severity || (ValidationStatus.Severity = {}));
    ValidationStatus.NONE = {
        severity: Severity.NONE, message: '', error: { code: -1, message: '', data: {} }
    };
    function isOk(validationStatus) {
        return validationStatus.severity === Severity.OK
            || validationStatus.severity === Severity.INFO
            || validationStatus.severity === Severity.NONE;
    }
    ValidationStatus.isOk = isOk;
    function isWarning(validationStatus) {
        return validationStatus.severity === Severity.WARNING;
    }
    ValidationStatus.isWarning = isWarning;
    function isError(validationStatus) {
        return validationStatus.severity === Severity.ERROR
            || validationStatus.severity === Severity.FATAL;
    }
    ValidationStatus.isError = isError;
})(ValidationStatus = exports.ValidationStatus || (exports.ValidationStatus = {}));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js":
/*!**************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function isSetAutoCompleteValueAction(action) {
    return action !== undefined && action.text !== undefined;
}
exports.isSetAutoCompleteValueAction = isSetAutoCompleteValueAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js":
/*!*************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var iterable_1 = __webpack_require__(/*! sprotty/lib/utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var auto_complete_actions_1 = __webpack_require__(/*! ./auto-complete-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js");
var validation_decorator_1 = __webpack_require__(/*! ./validation-decorator */ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js");
var configureAutocomplete = __webpack_require__(/*! autocompleter */ "../../../node_modules/autocompleter/autocomplete.js");
var AutoCompleteWidget = /** @class */ (function () {
    function AutoCompleteWidget(autoSuggestionSettings, suggestionProvider, suggestionSubmitHandler, notifyClose, logger) {
        if (notifyClose === void 0) { notifyClose = function () { }; }
        this.autoSuggestionSettings = autoSuggestionSettings;
        this.suggestionProvider = suggestionProvider;
        this.suggestionSubmitHandler = suggestionSubmitHandler;
        this.notifyClose = notifyClose;
        this.logger = logger;
        this.loadingIndicatorClasses = ['loading', 'fa', 'fa-spinner', 'fa-pulse', 'fa-3x', 'fa-fw'];
        this.validationDecorator = validation_decorator_1.IValidationDecorator.NO_DECORATION;
    }
    AutoCompleteWidget.prototype.configureValidation = function (inputValidator, validationDecorator) {
        if (validationDecorator === void 0) { validationDecorator = validation_decorator_1.IValidationDecorator.NO_DECORATION; }
        this.inputValidator = inputValidator;
        this.validationDecorator = validationDecorator;
    };
    AutoCompleteWidget.prototype.configureTextSubmitHandler = function (textSubmitHandler) {
        this.textSubmitHandler = textSubmitHandler;
    };
    AutoCompleteWidget.prototype.initialize = function (containerElement) {
        var _this = this;
        this.containerElement = containerElement;
        this.inputElement = document.createElement('input');
        this.inputElement.style.position = 'absolute';
        this.inputElement.spellcheck = false;
        this.inputElement.autocapitalize = 'false';
        this.inputElement.autocomplete = 'false';
        this.inputElement.style.width = '100%';
        this.inputElement.addEventListener('keydown', function (event) { return _this.handleKeyDown(event); });
        this.inputElement.addEventListener('blur', function () { return window.setTimeout(function () { return _this.notifyClose(); }, 200); });
        this.containerElement.appendChild(this.inputElement);
        this.containerElement.style.position = 'absolute';
    };
    AutoCompleteWidget.prototype.handleKeyDown = function (event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            this.notifyClose();
            return;
        }
        if (keyboard_1.matchesKeystroke(event, 'Enter') && !this.isInputElementChanged() && this.isSuggestionAvailable()) {
            return;
        }
        if (this.isInputElementChanged()) {
            this.invalidateValidationResultAndContextActions();
        }
        if (!keyboard_1.matchesKeystroke(event, 'Enter') || this.isSuggestionAvailable()) {
            return;
        }
        if (!this.validationDecorator.isValidatedOk()) {
            event.stopImmediatePropagation();
            return;
        }
        if (this.textSubmitHandler) {
            this.executeFromTextOnlyInput();
            this.notifyClose();
        }
    };
    AutoCompleteWidget.prototype.isInputElementChanged = function () {
        return this.inputElement.value !== this.previousContent;
    };
    AutoCompleteWidget.prototype.invalidateValidationResultAndContextActions = function () {
        this.contextActions = undefined;
        this.validationDecorator.invalidate();
    };
    AutoCompleteWidget.prototype.open = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        this.contextActions = undefined;
        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));
        this.previousContent = this.inputElement.value;
        this.inputElement.setSelectionRange(0, this.inputElement.value.length);
        this.inputElement.focus();
    };
    AutoCompleteWidget.prototype.autocompleteSettings = function (root) {
        var _this = this;
        return {
            input: this.inputElement,
            emptyMsg: this.autoSuggestionSettings.noSuggestionsMessage,
            className: this.autoSuggestionSettings.suggestionsClass,
            showOnFocus: this.autoSuggestionSettings.showOnFocus,
            debounceWaitMs: this.autoSuggestionSettings.debounceWaitMs,
            minLength: -1,
            fetch: function (text, update) {
                return _this.updateSuggestions(update, text, root);
            },
            onSelect: function (item) { return _this.onSelect(item); },
            render: function (item, currentValue) {
                return _this.renderSuggestions(item, currentValue);
            },
            customize: function (input, inputRect, container, maxHeight) {
                _this.customizeInputElement(input, inputRect, container, maxHeight);
            }
        };
    };
    AutoCompleteWidget.prototype.customizeInputElement = function (input, inputRect, container, maxHeight) {
        // move container into our UIExtension container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
        }
    };
    AutoCompleteWidget.prototype.updateSuggestions = function (update, text, root) {
        var _this = this;
        var contextElementIds = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            contextElementIds[_i - 3] = arguments[_i];
        }
        this.onLoading();
        this.doUpdateSuggestions(text, root)
            .then(function (actions) {
            _this.contextActions = _this.filterActions(text, actions);
            update(_this.contextActions);
            _this.onLoaded('success');
        })
            .catch(function (reason) {
            if (_this.logger) {
                _this.logger.error(_this, 'Failed to obtain suggestions', reason);
            }
            _this.onLoaded('error');
        });
    };
    AutoCompleteWidget.prototype.onLoading = function () {
        var _a;
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        (_a = this.loadingIndicator.classList).add.apply(_a, __spread(this.loadingIndicatorClasses));
        this.containerElement.appendChild(this.loadingIndicator);
    };
    AutoCompleteWidget.prototype.doUpdateSuggestions = function (text, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        return this.suggestionProvider.provideSuggestions(text);
    };
    AutoCompleteWidget.prototype.onLoaded = function (success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
        this.validationDecorator.invalidate();
        this.validateInputIfNoContextActions();
        this.previousContent = this.inputElement.value;
    };
    AutoCompleteWidget.prototype.renderSuggestions = function (item, value) {
        var itemElement = document.createElement('div');
        var wordMatcher = this.espaceForRegExp(value).split(' ').join('|');
        var regex = new RegExp(wordMatcher, 'gi');
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        itemElement.innerHTML += item.label.replace(regex, function (match) { return '<em>' + match + '</em>'; });
        return itemElement;
    };
    AutoCompleteWidget.prototype.espaceForRegExp = function (value) {
        return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
    };
    AutoCompleteWidget.prototype.renderIcon = function (itemElement, icon) {
        itemElement.innerHTML += "<span class=\"icon " + icon + "\"></span>";
    };
    AutoCompleteWidget.prototype.filterActions = function (filterText, actions) {
        return iterable_1.toArray(actions.filter(function (action) {
            var label = action.label.toLowerCase();
            var searchWords = filterText.split(' ');
            return searchWords.every(function (word) { return label.indexOf(word.toLowerCase()) !== -1; });
        }));
    };
    AutoCompleteWidget.prototype.onSelect = function (item) {
        var _this = this;
        if (auto_complete_actions_1.isSetAutoCompleteValueAction(item)) {
            this.inputElement.value = item.text;
            // trigger update of suggestions with an keyup event
            window.setTimeout(function () { return _this.inputElement.dispatchEvent(new Event('keyup')); });
        }
        else {
            this.executeFromSuggestion(item);
            this.notifyClose();
        }
    };
    AutoCompleteWidget.prototype.validateInputIfNoContextActions = function () {
        if (this.isNoOrExactlyOneMatchingContextAction()) {
            this.validateInput();
        }
        else {
            this.validationDecorator.dispose();
        }
    };
    AutoCompleteWidget.prototype.isNoOrExactlyOneMatchingContextAction = function () {
        return !this.isSuggestionAvailable()
            || (this.contextActions
                && this.contextActions.length === 1
                && this.inputElement.value.endsWith(this.contextActions[0].label));
    };
    AutoCompleteWidget.prototype.isSuggestionAvailable = function () {
        return this.contextActions && this.contextActions.length > 0;
    };
    AutoCompleteWidget.prototype.validateInput = function () {
        var _this = this;
        if (this.inputValidator) {
            this.inputValidator.validate(this.inputElement.value)
                .then(function (result) { return _this.validationDecorator.decorateValidationResult(result); })
                .catch(function (error) { return _this.handleErrorDuringValidation(error); });
        }
    };
    AutoCompleteWidget.prototype.handleErrorDuringValidation = function (error) {
        if (this.logger) {
            this.logger.error(this, 'Failed to validate input', error);
        }
        this.validationDecorator.dispose();
    };
    AutoCompleteWidget.prototype.executeFromSuggestion = function (input) {
        this.suggestionSubmitHandler.executeFromSuggestion(input);
    };
    AutoCompleteWidget.prototype.executeFromTextOnlyInput = function () {
        if (this.textSubmitHandler) {
            this.textSubmitHandler.executeFromTextOnlyInput(this.inputElement.value);
        }
    };
    Object.defineProperty(AutoCompleteWidget.prototype, "inputField", {
        get: function () {
            return this.inputElement;
        },
        enumerable: true,
        configurable: true
    });
    AutoCompleteWidget.prototype.dispose = function () {
        this.validationDecorator.dispose();
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    };
    return AutoCompleteWidget;
}());
exports.AutoCompleteWidget = AutoCompleteWidget;
function toActionArray(input) {
    if (lib_1.isLabeledAction(input)) {
        return input.actions;
    }
    else if (lib_1.isAction(input)) {
        return [input];
    }
    return [];
}
exports.toActionArray = toActionArray;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js":
/*!*************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js ***!
  \*************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var edit_validation_actions_1 = __webpack_require__(/*! ../actions/edit-validation-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-validation-actions.js");
var IValidationDecorator;
(function (IValidationDecorator) {
    IValidationDecorator.NO_DECORATION = {
        decorateValidationResult: function (status) { },
        isValidatedOk: function () { return false; },
        invalidate: function () { },
        dispose: function () { }
    };
})(IValidationDecorator = exports.IValidationDecorator || (exports.IValidationDecorator = {}));
var ValidationDecorator = /** @class */ (function () {
    function ValidationDecorator(containerElement) {
        this.containerElement = containerElement;
        this.warningClasses = ['warning'];
        this.warningIconClasses = ['fa', 'fa-question-circle'];
        this.errorClasses = ['error'];
        this.errorIconClasses = ['fa', 'fa-exclamation-circle'];
        this.isValidated = false;
        this.hasValidationError = false;
    }
    ValidationDecorator.prototype.decorateValidationResult = function (status) {
        if (edit_validation_actions_1.ValidationStatus.isError(status)) {
            this.hasValidationError = true;
            this.decorateError(status.message ? status.message : 'Error');
        }
        else if (edit_validation_actions_1.ValidationStatus.isWarning(status)) {
            this.hasValidationError = false;
            this.decorateWarning(status.message ? status.message : 'Warning');
        }
        else {
            this.hasValidationError = false;
            this.dispose();
        }
        this.isValidated = true;
    };
    ValidationDecorator.prototype.decorateError = function (message) {
        this.switchCssClasses(this.containerElement, this.errorClasses);
        var div = this.createDecorationDiv();
        this.switchCssClasses(div, this.errorClasses);
        div.innerHTML = "<span class=\"" + this.errorIconClasses.join(' ') + "\"></span> " + message;
        this.adjustPosition();
    };
    ValidationDecorator.prototype.decorateWarning = function (message) {
        this.switchCssClasses(this.containerElement, this.warningClasses);
        var div = this.createDecorationDiv();
        this.switchCssClasses(div, this.warningClasses);
        div.innerHTML = "<span class=\"" + this.warningIconClasses.join(' ') + "\"></span> " + message;
        this.adjustPosition();
    };
    ValidationDecorator.prototype.switchCssClasses = function (element, cssClasses) {
        var _a, _b;
        (_a = element.classList).remove.apply(_a, __spread(this.errorClasses, this.warningClasses));
        (_b = element.classList).add.apply(_b, __spread(cssClasses));
    };
    ValidationDecorator.prototype.createDecorationDiv = function () {
        if (!this.decorationDiv) {
            this.containerElement.classList.add('validation');
            this.decorationDiv = document.createElement('div');
            this.decorationDiv.style.width = this.decorationContainerWidth() + "px";
            this.decorationDiv.classList.add('validation-decorator');
            this.containerElement.appendChild(this.decorationDiv);
        }
        return this.decorationDiv;
    };
    ValidationDecorator.prototype.decorationContainerWidth = function () {
        return this.containerElement.clientWidth - 22;
    };
    ValidationDecorator.prototype.adjustPosition = function () {
        if (this.decorationDiv) {
            var height = this.decorationDiv.clientHeight + 2;
            this.decorationDiv.style.top = "-" + height + "px";
        }
    };
    ValidationDecorator.prototype.isValidatedOk = function () {
        return this.isValidated && !this.hasValidationError;
    };
    ValidationDecorator.prototype.invalidate = function () {
        this.isValidated = false;
    };
    ValidationDecorator.prototype.dispose = function () {
        this.hasValidationError = false;
        this.isValidated = false;
        if (this.decorationDiv && this.containerElement && this.containerElement.contains(this.decorationDiv)) {
            this.containerElement.removeChild(this.decorationDiv);
            this.switchCssClasses(this.containerElement, []);
            this.decorationDiv = undefined;
        }
    };
    return ValidationDecorator;
}());
exports.ValidationDecorator = ValidationDecorator;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/command-stack.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var model_1 = __webpack_require__(/*! ../features/undo-redo/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/undo-redo/model.js");
var GLSPCommandStack = /** @class */ (function (_super) {
    __extends(GLSPCommandStack, _super);
    function GLSPCommandStack() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GLSPCommandStack.prototype.undo = function () {
        this.actionDispatcher().then(function (dispatcher) { return dispatcher.dispatch(new model_1.GlspUndoAction()); });
        return this.thenUpdate();
    };
    GLSPCommandStack.prototype.redo = function () {
        this.actionDispatcher().then(function (dispatcher) { return dispatcher.dispatch(new model_1.GlspRedoAction()); });
        return this.thenUpdate();
    };
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], GLSPCommandStack.prototype, "actionDispatcher", void 0);
    GLSPCommandStack = __decorate([
        inversify_1.injectable()
    ], GLSPCommandStack);
    return GLSPCommandStack;
}(sprotty_1.CommandStack));
exports.GLSPCommandStack = GLSPCommandStack;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/di.config.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/di.config.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! ../../css/glsp-sprotty.css */ "../../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var action_dispatcher_1 = __webpack_require__(/*! ./action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var edit_mode_action_1 = __webpack_require__(/*! ./actions/edit-mode-action */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js");
var command_stack_1 = __webpack_require__(/*! ./command-stack */ "../../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js");
var editor_context_1 = __webpack_require__(/*! ./editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var model_initialization_constraint_1 = __webpack_require__(/*! ./model-initialization-constraint */ "../../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js");
var update_model_command_1 = __webpack_require__(/*! ./model/update-model-command */ "../../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js");
var selection_clearing_mouse_listener_1 = __webpack_require__(/*! ./selection-clearing-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js");
var glsp_tool_manager_1 = __webpack_require__(/*! ./tool-manager/glsp-tool-manager */ "../../../node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js");
var types_1 = __webpack_require__(/*! ./types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var defaultGLSPModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound, rebind) {
    var context = { bind: bind, _unbind: _unbind, isBound: isBound, rebind: rebind };
    bind(editor_context_1.EditorContextService).toSelf().inSingletonScope();
    bind(types_1.GLSP_TYPES.IEditorContextServiceProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve, reject) {
                if (ctx.container.isBound(editor_context_1.EditorContextService)) {
                    resolve(ctx.container.get(editor_context_1.EditorContextService));
                }
                else {
                    reject();
                }
            });
        };
    });
    sprotty_1.configureActionHandler(context, edit_mode_action_1.SetEditModeAction.KIND, editor_context_1.EditorContextService);
    // Model update initialization ------------------------------------
    sprotty_1.configureCommand(context, update_model_command_1.FeedbackAwareUpdateModelCommand);
    sprotty_1.configureActionHandler(context, sprotty_1.SetModelCommand.KIND, update_model_command_1.SetModelActionHandler);
    bind(sprotty_1.TYPES.MouseListener).to(selection_clearing_mouse_listener_1.SelectionClearingMouseListener);
    rebind(sprotty_1.TYPES.ICommandStack).to(command_stack_1.GLSPCommandStack);
    bind(glsp_tool_manager_1.GLSPToolManager).toSelf().inSingletonScope();
    bind(types_1.GLSP_TYPES.IGLSPToolManager).toService(glsp_tool_manager_1.GLSPToolManager);
    rebind(sprotty_1.TYPES.IToolManager).toService(glsp_tool_manager_1.GLSPToolManager);
    bind(action_dispatcher_1.GLSPActionDispatcher).toSelf().inSingletonScope();
    rebind(sprotty_1.TYPES.IActionDispatcher).toService(action_dispatcher_1.GLSPActionDispatcher);
    bind(model_initialization_constraint_1.ModelInitializationConstraint).to(model_initialization_constraint_1.DefaultModelInitializationConstraint).inSingletonScope();
});
exports.default = defaultGLSPModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js":
/*!*****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/editor-context.js ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var source_uri_aware_1 = __webpack_require__(/*! ../base/source-uri-aware */ "../../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js");
var selection_service_1 = __webpack_require__(/*! ../features/select/selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var array_utils_1 = __webpack_require__(/*! ../utils/array-utils */ "../../../node_modules/@eclipse-glsp/client/lib/utils/array-utils.js");
var edit_mode_action_1 = __webpack_require__(/*! ./actions/edit-mode-action */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js");
var types_1 = __webpack_require__(/*! ./types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var EditorContextService = /** @class */ (function () {
    function EditorContextService(editModeListeners) {
        if (editModeListeners === void 0) { editModeListeners = []; }
        this.editModeListeners = editModeListeners;
    }
    EditorContextService.prototype.register = function (editModeListener) {
        array_utils_1.distinctAdd(this.editModeListeners, editModeListener);
    };
    EditorContextService.prototype.deregister = function (editModeListener) {
        array_utils_1.remove(this.editModeListeners, editModeListener);
    };
    EditorContextService.prototype.get = function (args) {
        return {
            selectedElementIds: Array.from(this.selectionService.getSelectedElementIDs()),
            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,
            args: args
        };
    };
    EditorContextService.prototype.getWithSelection = function (selectedElementIds, args) {
        return {
            selectedElementIds: selectedElementIds,
            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,
            args: args
        };
    };
    EditorContextService.prototype.handle = function (action) {
        if (edit_mode_action_1.isSetEditModeAction(action)) {
            var oldValue = this.editMode;
            this.editMode = action.editMode;
            this.notifiyEditModeListeners(oldValue);
        }
    };
    EditorContextService.prototype.notifiyEditModeListeners = function (oldValue) {
        var _this = this;
        this.editModeListeners.forEach(function (listener) { return listener.editModeChanged(oldValue, _this.editMode); });
    };
    EditorContextService.prototype.getSourceUri = function () {
        return __awaiter(this, void 0, void 0, function () {
            var modelSource;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.modelSource()];
                    case 1:
                        modelSource = _a.sent();
                        if (source_uri_aware_1.isSourceUriAware(modelSource)) {
                            return [2 /*return*/, modelSource.getSourceURI()];
                        }
                        return [2 /*return*/, undefined];
                }
            });
        });
    };
    Object.defineProperty(EditorContextService.prototype, "modelRoot", {
        get: function () {
            return this.selectionService.getModelRoot();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditorContextService.prototype, "selectedElements", {
        get: function () {
            return this.selectionService.getSelectedElements();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EditorContextService.prototype, "isReadonly", {
        get: function () {
            return this.editMode === edit_mode_action_1.EditMode.READONLY;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.SelectionService),
        __metadata("design:type", selection_service_1.SelectionService)
    ], EditorContextService.prototype, "selectionService", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.MousePositionTracker),
        __metadata("design:type", sprotty_1.MousePositionTracker)
    ], EditorContextService.prototype, "mousePositionTracker", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ModelSourceProvider),
        __metadata("design:type", Function)
    ], EditorContextService.prototype, "modelSource", void 0);
    EditorContextService = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.GLSP_TYPES.IEditModeListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], EditorContextService);
    return EditorContextService;
}());
exports.EditorContextService = EditorContextService;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js":
/*!**********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var async_1 = __webpack_require__(/*! sprotty/lib/utils/async */ "../../../node_modules/sprotty/lib/utils/async.js");
/**
 * The constraint defining when the initialization of the GLSP model is completed.
 *
 * Many actions, such as the `CenterAction`, can only be successfully processed if
 * the GLSP model initialization is completed, that is, the model has been set,
 * its bounds have been computed, the canvas bounds are available, etc.
 *
 * An injectable implementation of this constraint will be used by the
 * `GLSPActionDispatcher` to determine when the initialization is completed.
 * The action dispatcher therefore provides a promise via `onceInitialized()`
 * to trigger clients that want to dispatch an action, once the initialization
 * is done.
 *
 * For most of the cases `DefaultInitializationConstraint` can be used. In fact,
 * it is bound by default. However, custom implementations can rebind other
 * implementations of this constraint to, for instance, delay further before the
 * `onceInitialized()` promise is fulfilled by the `GLSPActionDispatcher`.
 */
var ModelInitializationConstraint = /** @class */ (function () {
    function ModelInitializationConstraint() {
        this.completion = new async_1.Deferred();
        this.completed = false;
    }
    Object.defineProperty(ModelInitializationConstraint.prototype, "isCompleted", {
        get: function () {
            return this.completed;
        },
        enumerable: true,
        configurable: true
    });
    ModelInitializationConstraint.prototype.setCompleted = function (isCompleted) {
        this.completed = isCompleted;
        if (isCompleted) {
            this.completion.resolve();
        }
    };
    ModelInitializationConstraint.prototype.onInitialized = function () {
        return this.completion.promise;
    };
    ModelInitializationConstraint.prototype.notifyDispatched = function (action) {
        if (this.isCompleted) {
            return;
        }
        if (this.isInitializedAfter(action)) {
            this.setCompleted(true);
        }
    };
    ModelInitializationConstraint = __decorate([
        inversify_1.injectable()
    ], ModelInitializationConstraint);
    return ModelInitializationConstraint;
}());
exports.ModelInitializationConstraint = ModelInitializationConstraint;
/**
 * Default initialization constraint triggers after a non-empty `UpdateModelAction`
 * and a subsequent `InitializeCanvasBoundsAction`.
 */
var DefaultModelInitializationConstraint = /** @class */ (function (_super) {
    __extends(DefaultModelInitializationConstraint, _super);
    function DefaultModelInitializationConstraint() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.seenNonEmptyUpdateModel = false;
        return _this;
    }
    DefaultModelInitializationConstraint.prototype.isInitializedAfter = function (action) {
        if (this.isNonEmptyUpdateModel(action)) {
            this.seenNonEmptyUpdateModel = true;
        }
        else if (this.seenNonEmptyUpdateModel && action.kind === sprotty_1.InitializeCanvasBoundsAction.KIND) {
            return true;
        }
        return false;
    };
    DefaultModelInitializationConstraint.prototype.isNonEmptyUpdateModel = function (action) {
        if (action && action.kind === sprotty_1.UpdateModelAction.KIND) {
            var updateModelAction = action;
            return updateModelAction.newRoot !== undefined && updateModelAction.newRoot.type !== 'NONE';
        }
        return false;
    };
    DefaultModelInitializationConstraint = __decorate([
        inversify_1.injectable()
    ], DefaultModelInitializationConstraint);
    return DefaultModelInitializationConstraint;
}(ModelInitializationConstraint));
exports.DefaultModelInitializationConstraint = DefaultModelInitializationConstraint;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var update_model_1 = __webpack_require__(/*! sprotty/lib/features/update/update-model */ "../../../node_modules/sprotty/lib/features/update/update-model.js");
var model_1 = __webpack_require__(/*! ../../features/tool-feedback/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
/* ActionHandler that transforms a SetModelAction into an (feedback-aware) UpdateModelAction. This can be done because in sprotty
*  UpdateModel behaves the same as SetModel if no model is present yet.*/
var SetModelActionHandler = /** @class */ (function () {
    function SetModelActionHandler() {
    }
    SetModelActionHandler.prototype.handle = function (action) {
        if (isSetModelAction(action)) {
            return new update_model_1.UpdateModelAction(action.newRoot, false);
        }
    };
    SetModelActionHandler = __decorate([
        inversify_1.injectable()
    ], SetModelActionHandler);
    return SetModelActionHandler;
}());
exports.SetModelActionHandler = SetModelActionHandler;
function isSetModelAction(action) {
    return action !== undefined && (action.kind === sprotty_1.SetModelCommand.KIND)
        && action.newRoot !== undefined;
}
exports.isSetModelAction = isSetModelAction;
/**
 * A special`UpdateModelCommand` that retrieves all registered `actions` from the `IFeedbackActionDispatcher` (if present) and applies their feedback
 * to the `newRoot` before performing the update
 */
var FeedbackAwareUpdateModelCommand = /** @class */ (function (_super) {
    __extends(FeedbackAwareUpdateModelCommand, _super);
    function FeedbackAwareUpdateModelCommand(action, logger, feedbackActionDispatcher, actionHandlerRegistryProvider, modelRootListeners) {
        if (modelRootListeners === void 0) { modelRootListeners = []; }
        var _this = _super.call(this, action) || this;
        _this.logger = logger;
        _this.feedbackActionDispatcher = feedbackActionDispatcher;
        _this.modelRootListeners = modelRootListeners;
        actionHandlerRegistryProvider().then(function (registry) { return _this.actionHandlerRegistry = registry; });
        return _this;
    }
    FeedbackAwareUpdateModelCommand.prototype.performUpdate = function (oldRoot, newRoot, context) {
        if (this.feedbackActionDispatcher && this.actionHandlerRegistry) {
            // Create a temporary context wich defines the `newRoot` as `root`
            // This way we do not corrupt the redo/undo behavior of the super class
            var tempContext_1 = {
                root: newRoot,
                duration: context.duration,
                logger: context.logger,
                modelChanged: context.modelChanged,
                modelFactory: context.modelFactory,
                syncer: context.syncer
            };
            var feedbackCommands = this.getFeedbackCommands(this.actionHandlerRegistry);
            feedbackCommands.forEach(function (command) { return command.execute(tempContext_1); });
        }
        this.modelRootListeners.forEach(function (listener) { return listener.modelRootChanged(newRoot); });
        return _super.prototype.performUpdate.call(this, oldRoot, newRoot, context);
    };
    FeedbackAwareUpdateModelCommand.prototype.getFeedbackCommands = function (registry) {
        var result = [];
        this.feedbackActionDispatcher.getRegisteredFeedback().forEach(function (action) {
            var handler = registry.get(action.kind).find(function (h) { return h instanceof sprotty_1.CommandActionHandler; });
            if (handler instanceof sprotty_1.CommandActionHandler) {
                result.push(handler.handle(action));
            }
        });
        // sort commands descanding by priority
        return result.sort(function (a, b) { return getPriority(b) - getPriority(a); });
    };
    FeedbackAwareUpdateModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __param(1, inversify_1.inject(sprotty_1.TYPES.ILogger)),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher)), __param(2, inversify_1.optional()),
        __param(3, inversify_1.inject(sprotty_1.TYPES.ActionHandlerRegistryProvider)),
        __param(4, inversify_1.multiInject(types_1.GLSP_TYPES.SModelRootListener)), __param(4, inversify_1.optional()),
        __metadata("design:paramtypes", [update_model_1.UpdateModelAction, Object, Object, Function, Array])
    ], FeedbackAwareUpdateModelCommand);
    return FeedbackAwareUpdateModelCommand;
}(update_model_1.UpdateModelCommand));
exports.FeedbackAwareUpdateModelCommand = FeedbackAwareUpdateModelCommand;
function getPriority(command) {
    if (command instanceof model_1.FeedbackCommand) {
        return command.priority;
    }
    return 0;
}


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/operations/operation.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
function isCreateOperation(object) {
    return sprotty_1.isAction(object) && "elementTypeId" in object;
}
exports.isCreateOperation = isCreateOperation;
var CreateNodeOperation = /** @class */ (function () {
    function CreateNodeOperation(elementTypeId, location, containerId, args) {
        this.elementTypeId = elementTypeId;
        this.location = location;
        this.containerId = containerId;
        this.args = args;
        this.kind = CreateNodeOperation.KIND;
    }
    CreateNodeOperation.KIND = "createNode";
    return CreateNodeOperation;
}());
exports.CreateNodeOperation = CreateNodeOperation;
function isCreateNodeOperation(object) {
    return isCreateOperation() && object.kind === CreateNodeOperation.KIND;
}
exports.isCreateNodeOperation = isCreateNodeOperation;
var CreateEdgeOperation = /** @class */ (function () {
    function CreateEdgeOperation(elementTypeId, sourceElementId, targetElementId, args) {
        this.elementTypeId = elementTypeId;
        this.sourceElementId = sourceElementId;
        this.targetElementId = targetElementId;
        this.args = args;
        this.kind = CreateEdgeOperation.KIND;
    }
    CreateEdgeOperation.KIND = "createEdge";
    return CreateEdgeOperation;
}());
exports.CreateEdgeOperation = CreateEdgeOperation;
function isCreateConnectionOperation(object) {
    return isCreateOperation() && object.kind === CreateEdgeOperation.KIND;
}
exports.isCreateConnectionOperation = isCreateConnectionOperation;
var DeleteElementOperation = /** @class */ (function () {
    function DeleteElementOperation(elementIds) {
        this.elementIds = elementIds;
        this.kind = DeleteElementOperation.KIND;
    }
    DeleteElementOperation.KIND = "deleteElement";
    return DeleteElementOperation;
}());
exports.DeleteElementOperation = DeleteElementOperation;
var ChangeBoundsOperation = /** @class */ (function () {
    function ChangeBoundsOperation(newBounds) {
        this.newBounds = newBounds;
        this.kind = ChangeBoundsOperation.KIND;
    }
    ChangeBoundsOperation.KIND = "changeBounds";
    return ChangeBoundsOperation;
}());
exports.ChangeBoundsOperation = ChangeBoundsOperation;
var ChangeContainerOperation = /** @class */ (function () {
    function ChangeContainerOperation(elementId, targetContainerId, location) {
        this.elementId = elementId;
        this.targetContainerId = targetContainerId;
        this.location = location;
        this.kind = ChangeContainerOperation.KIND;
    }
    ChangeContainerOperation.KIND = "changeContainer";
    return ChangeContainerOperation;
}());
exports.ChangeContainerOperation = ChangeContainerOperation;
var ReconnectEdgeOperation = /** @class */ (function () {
    function ReconnectEdgeOperation(connectionElementId, sourceElementId, targetElementId) {
        this.connectionElementId = connectionElementId;
        this.sourceElementId = sourceElementId;
        this.targetElementId = targetElementId;
        this.kind = ReconnectEdgeOperation.KIND;
    }
    ReconnectEdgeOperation.KIND = "reconnectEdge";
    return ReconnectEdgeOperation;
}());
exports.ReconnectEdgeOperation = ReconnectEdgeOperation;
var ChangeRoutingPointsOperation = /** @class */ (function () {
    function ChangeRoutingPointsOperation(newRoutingPoints) {
        this.newRoutingPoints = newRoutingPoints;
        this.kind = ChangeRoutingPointsOperation.KIND;
    }
    ChangeRoutingPointsOperation.KIND = "changeRoutingPoints";
    return ChangeRoutingPointsOperation;
}());
exports.ChangeRoutingPointsOperation = ChangeRoutingPointsOperation;
var CompoundOperation = /** @class */ (function () {
    function CompoundOperation(operationList) {
        this.operationList = operationList;
        this.kind = CompoundOperation.KIND;
    }
    CompoundOperation.KIND = "compound";
    return CompoundOperation;
}());
exports.CompoundOperation = CompoundOperation;
var TriggerElementCreationAction = /** @class */ (function () {
    function TriggerElementCreationAction(elementTypeId, args) {
        this.elementTypeId = elementTypeId;
        this.args = args;
    }
    return TriggerElementCreationAction;
}());
exports.TriggerElementCreationAction = TriggerElementCreationAction;
var TriggerNodeCreationAction = /** @class */ (function (_super) {
    __extends(TriggerNodeCreationAction, _super);
    function TriggerNodeCreationAction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.kind = TriggerNodeCreationAction.KIND;
        return _this;
    }
    TriggerNodeCreationAction.KIND = "triggerNodeCreation";
    return TriggerNodeCreationAction;
}(TriggerElementCreationAction));
exports.TriggerNodeCreationAction = TriggerNodeCreationAction;
var TriggerEdgeCreationAction = /** @class */ (function (_super) {
    __extends(TriggerEdgeCreationAction, _super);
    function TriggerEdgeCreationAction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.kind = TriggerEdgeCreationAction.KIND;
        return _this;
    }
    TriggerEdgeCreationAction.KIND = "triggerEdgeCreation";
    return TriggerEdgeCreationAction;
}(TriggerElementCreationAction));
exports.TriggerEdgeCreationAction = TriggerEdgeCreationAction;
function isTriggerElementTypeCreationAction(object) {
    return sprotty_1.isAction(object) && "elementTypeId" in object;
}
exports.isTriggerElementTypeCreationAction = isTriggerElementTypeCreationAction;
function isTriggerNodeCreationAction(object) {
    return isTriggerElementTypeCreationAction(object) && object.kind === TriggerNodeCreationAction.KIND;
}
exports.isTriggerNodeCreationAction = isTriggerNodeCreationAction;
function isTriggerEdgeCreationAction(object) {
    return isTriggerElementTypeCreationAction(object) && object.kind === TriggerEdgeCreationAction.KIND;
}
exports.isTriggerEdgeCreationAction = isTriggerEdgeCreationAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js":
/*!************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
/**
 * A mouse listener that clears the document selection on click
 *
 * Clicking on SVG elements doesn't update the document selection. In the context of diagramming
 * with GLSP, this is unnatural, as the user would expect that clicking in the diagram (e.g. to
 * select a diagram element) would clear any other selection state in the DOM. From a technical
 * point of view, an active selection in the document after clicking into the diagram may also
 * lead to bogus target elements in certain browser events, such as clipboard events, etc.
 *
 * This listener helps to overcome this problem by actively clearing any existing selection in
 * the document, if the user clicks into the diagram.
 */
var SelectionClearingMouseListener = /** @class */ (function (_super) {
    __extends(SelectionClearingMouseListener, _super);
    function SelectionClearingMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectionClearingMouseListener.prototype.mouseDown = function (target, event) {
        var selection = document.getSelection();
        if (selection === null) {
            return [];
        }
        selection.removeAllRanges();
        selection.addRange(document.createRange());
        return [];
    };
    SelectionClearingMouseListener = __decorate([
        inversify_1.injectable()
    ], SelectionClearingMouseListener);
    return SelectionClearingMouseListener;
}(sprotty_1.MouseListener));
exports.SelectionClearingMouseListener = SelectionClearingMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var SourceUriAware = /** @class */ (function () {
    function SourceUriAware() {
    }
    return SourceUriAware;
}());
exports.SourceUriAware = SourceUriAware;
function isSourceUriAware(obj) {
    return obj !== undefined && typeof obj.getSourceURI === 'function';
}
exports.isSourceUriAware = isSourceUriAware;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js":
/*!*********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var array_utils_1 = __webpack_require__(/*! ../../utils/array-utils */ "../../../node_modules/@eclipse-glsp/client/lib/utils/array-utils.js");
var edit_mode_action_1 = __webpack_require__(/*! ../actions/edit-mode-action */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js");
var GLSPToolManager = /** @class */ (function (_super) {
    __extends(GLSPToolManager, _super);
    function GLSPToolManager(tools, defaultTools, contextServiceProvider) {
        var _this = _super.call(this) || this;
        _this.registerTools.apply(_this, __spread(tools));
        _this.registerDefaultTools.apply(_this, __spread(defaultTools));
        _this.enableDefaultTools();
        contextServiceProvider().then(function (editorContext) {
            editorContext.register(_this);
            _this.editorContext = editorContext;
        });
        return _this;
    }
    GLSPToolManager.prototype.registerDefaultTools = function () {
        var e_1, _a;
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        try {
            for (var tools_1 = __values(tools), tools_1_1 = tools_1.next(); !tools_1_1.done; tools_1_1 = tools_1.next()) {
                var tool = tools_1_1.value;
                array_utils_1.distinctAdd(this.defaultTools, tool);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (tools_1_1 && !tools_1_1.done && (_a = tools_1.return)) _a.call(tools_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    GLSPToolManager.prototype.registerTools = function () {
        var e_2, _a;
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        try {
            for (var tools_2 = __values(tools), tools_2_1 = tools_2.next(); !tools_2_1.done; tools_2_1 = tools_2.next()) {
                var tool = tools_2_1.value;
                array_utils_1.distinctAdd(this.tools, tool);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (tools_2_1 && !tools_2_1.done && (_a = tools_2.return)) _a.call(tools_2);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    GLSPToolManager.prototype.enable = function (toolIds) {
        var _this = this;
        this.disableActiveTools();
        var tools = toolIds.map(function (id) { return _this.tool(id); });
        if (this.editorContext && this.editorContext.isReadonly) {
            tools = tools.filter(function (tool) { return tool && (!isGLSPTool(tool) || tool.isEditTool === false); });
        }
        tools.forEach(function (tool) {
            if (tool !== undefined) {
                tool.enable();
                _this.actives.push(tool);
            }
        });
    };
    GLSPToolManager.prototype.disableEditTools = function () {
        this.disableActiveTools();
        this.enable(this.defaultTools.filter(function (tool) { return !isGLSPTool(tool) || tool.isEditTool === false; }).map(function (tool) { return tool.id; }));
    };
    GLSPToolManager.prototype.editModeChanged = function (oldValue, newValue) {
        if (oldValue === newValue) {
            return;
        }
        if (newValue === edit_mode_action_1.EditMode.READONLY) {
            this.disableEditTools();
        }
        else if (newValue === edit_mode_action_1.EditMode.EDITABLE) {
            this.enableDefaultTools();
        }
    };
    GLSPToolManager = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.GLSP_TYPES.ITool)), __param(0, inversify_1.optional()),
        __param(1, inversify_1.multiInject(types_1.GLSP_TYPES.IDefaultTool)), __param(1, inversify_1.optional()),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.IEditorContextServiceProvider)),
        __metadata("design:paramtypes", [Array, Array, Function])
    ], GLSPToolManager);
    return GLSPToolManager;
}(sprotty_1.ToolManager));
exports.GLSPToolManager = GLSPToolManager;
function isGLSPTool(tool) {
    return "isEditTool" in tool && typeof tool["isEditTool"] === "boolean";
}
exports.isGLSPTool = isGLSPTool;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/base/types.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
exports.GLSP_TYPES = {
    IAsyncClipboardService: Symbol.for("IAsyncClipboardService"),
    ICommandPaletteActionProviderRegistry: Symbol.for("ICommandPaletteActionProviderRegistry"),
    IEditorContextServiceProvider: Symbol.for("IEditorContextProvider"),
    IFeedbackActionDispatcher: Symbol.for("IFeedbackActionDispatcher"),
    IToolFactory: Symbol.for("Factory<Tool>"),
    ITypeHintProvider: Symbol.for("ITypeHintProvider"),
    IMovementRestrictor: Symbol.for("IMovmementRestrictor"),
    SelectionService: Symbol.for("SelectionService"),
    SelectionListener: Symbol.for("SelectionListener"),
    SModelRootListener: Symbol.for("SModelRootListener"),
    MouseTool: Symbol.for("MouseTool"),
    IContextMenuService: Symbol.for("IContextMenuService"),
    IContextMenuServiceProvider: Symbol.for("IContextMenuServiceProvider"),
    IContextMenuProviderRegistry: Symbol.for("IContextMenuProviderRegistry"),
    IContextMenuProvider: Symbol.for("IContextMenuProvider"),
    ICopyPasteHandler: Symbol.for("ICopyPasteHandler"),
    IGLSPToolManager: Symbol.for("IGLSPToolManager"),
    ITool: Symbol.for("ITool"),
    IDefaultTool: Symbol.for("IDefaultTool"),
    IEditModeListener: Symbol.for("IEditModeListener")
};


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
exports.resizeFeature = Symbol("resizeFeature");
function isResizable(element) {
    return sprotty_1.isBoundsAware(element) && sprotty_1.isSelectable(element) && element instanceof sprotty_1.SParentElement && element.hasFeature(exports.resizeFeature);
}
exports.isResizable = isResizable;
var ResizeHandleLocation;
(function (ResizeHandleLocation) {
    ResizeHandleLocation["TopLeft"] = "top-left";
    ResizeHandleLocation["TopRight"] = "top-right";
    ResizeHandleLocation["BottomLeft"] = "bottom-left";
    ResizeHandleLocation["BottomRight"] = "bottom-right";
})(ResizeHandleLocation = exports.ResizeHandleLocation || (exports.ResizeHandleLocation = {}));
function isBoundsAwareMoveable(element) {
    return sprotty_1.isMoveable(element) && sprotty_1.isBoundsAware(element);
}
exports.isBoundsAwareMoveable = isBoundsAwareMoveable;
var SResizeHandle = /** @class */ (function (_super) {
    __extends(SResizeHandle, _super);
    function SResizeHandle(location) {
        var _this = _super.call(this) || this;
        _this.type = SResizeHandle.TYPE;
        _this.hoverFeedback = false;
        _this.location = location;
        return _this;
    }
    SResizeHandle.prototype.hasFeature = function (feature) {
        return feature === sprotty_1.hoverFeedbackFeature;
    };
    SResizeHandle.TYPE = 'resize-handle';
    return SResizeHandle;
}(sprotty_1.SChildElement));
exports.SResizeHandle = SResizeHandle;
function addResizeHandles(element) {
    removeResizeHandles(element);
    element.add(new SResizeHandle(ResizeHandleLocation.TopLeft));
    element.add(new SResizeHandle(ResizeHandleLocation.TopRight));
    element.add(new SResizeHandle(ResizeHandleLocation.BottomLeft));
    element.add(new SResizeHandle(ResizeHandleLocation.BottomRight));
}
exports.addResizeHandles = addResizeHandles;
function removeResizeHandles(element) {
    element.removeAll(function (child) { return child instanceof SResizeHandle; });
}
exports.removeResizeHandles = removeResizeHandles;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js":
/*!****************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js ***!
  \****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
var css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
function createMovementRestrictionFeedback(element, movementRestrictor) {
    var elements = [element];
    if (element instanceof sprotty_1.SParentElement) {
        element.children.filter(function (child) { return child instanceof model_1.SResizeHandle; }).forEach(function (e) { return elements.push(e); });
    }
    return new css_feedback_1.ModifyCSSFeedbackAction(elements, movementRestrictor.cssClasses);
}
exports.createMovementRestrictionFeedback = createMovementRestrictionFeedback;
function removeMovementRestrictionFeedback(element, movementRestrictor) {
    var elements = [element];
    if (element instanceof sprotty_1.SParentElement) {
        element.children.filter(function (child) { return child instanceof model_1.SResizeHandle; }).forEach(function (e) { return elements.push(e); });
    }
    return new css_feedback_1.ModifyCSSFeedbackAction(elements, undefined, movementRestrictor.cssClasses);
}
exports.removeMovementRestrictionFeedback = removeMovementRestrictionFeedback;
var NoOverlapMovmentRestrictor = /** @class */ (function () {
    function NoOverlapMovmentRestrictor() {
        this.cssClasses = ["movement-not-allowed"];
    }
    NoOverlapMovmentRestrictor.prototype.validate = function (newLocation, element) {
        if (!model_1.isBoundsAwareMoveable(element)) {
            return false;
        }
        // Create ghost element at the newLocation
        var ghostElement = Object.create(element);
        ghostElement.bounds = {
            x: newLocation.x,
            y: newLocation.y,
            width: element.bounds.width,
            height: element.bounds.height
        };
        ghostElement.type = "Ghost";
        ghostElement.id = element.id;
        return !Array.from(element.root.index.all().filter(function (e) { return e.id !== ghostElement.id && e !== ghostElement.root && (e instanceof sprotty_1.SNode); })
            .map(function (e) { return e; })).some(function (e) { return areOverlapping(e, ghostElement); });
    };
    NoOverlapMovmentRestrictor = __decorate([
        inversify_1.injectable()
    ], NoOverlapMovmentRestrictor);
    return NoOverlapMovmentRestrictor;
}());
exports.NoOverlapMovmentRestrictor = NoOverlapMovmentRestrictor;
function areOverlapping(element1, element2) {
    var b1 = viewpoint_util_1.toAbsoluteBounds(element1);
    var b2 = viewpoint_util_1.toAbsoluteBounds(element2);
    var r1TopLeft = b1;
    var r1BottomRight = { x: b1.x + b1.width, y: b1.y + b1.height };
    var r2TopLeft = b2;
    var r2BottomRight = { x: b2.x + b2.width, y: b2.y + b2.height };
    // If one rectangle is on left side of other
    if (r1TopLeft.x > r2BottomRight.x || r2TopLeft.x > r1BottomRight.x)
        return false;
    // If one rectangle is above other
    if (r1BottomRight.y < r2TopLeft.y || r2BottomRight.y < r1TopLeft.y)
        return false;
    return true;
}
exports.areOverlapping = areOverlapping;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var GridSnapper = /** @class */ (function () {
    function GridSnapper() {
    }
    Object.defineProperty(GridSnapper.prototype, "gridX", {
        get: function () {
            return 10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridSnapper.prototype, "gridY", {
        get: function () {
            return 10;
        },
        enumerable: true,
        configurable: true
    });
    GridSnapper.prototype.snap = function (position, element) {
        return {
            x: Math.round(position.x / this.gridX) * this.gridX,
            y: Math.round(position.y / this.gridY) * this.gridY
        };
    };
    GridSnapper = __decorate([
        inversify_1.injectable()
    ], GridSnapper);
    return GridSnapper;
}());
exports.GridSnapper = GridSnapper;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js":
/*!*******************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js ***!
  \*******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var CommandPaletteTool = /** @class */ (function () {
    function CommandPaletteTool() {
    }
    CommandPaletteTool_1 = CommandPaletteTool;
    CommandPaletteTool.prototype.postConstruct = function () {
        this.commandPaletteKeyListener = this.createCommandPaleteKeyListener();
    };
    Object.defineProperty(CommandPaletteTool.prototype, "id", {
        get: function () {
            return CommandPaletteTool_1.ID;
        },
        enumerable: true,
        configurable: true
    });
    CommandPaletteTool.prototype.enable = function () {
        this.keyTool.register(this.commandPaletteKeyListener);
    };
    CommandPaletteTool.prototype.disable = function () {
        this.keyTool.deregister(this.commandPaletteKeyListener);
    };
    CommandPaletteTool.prototype.createCommandPaleteKeyListener = function () {
        return new sprotty_1.CommandPaletteKeyListener();
    };
    var CommandPaletteTool_1;
    CommandPaletteTool.ID = "glsp.command-palette-tool";
    __decorate([
        inversify_1.inject(sprotty_1.KeyTool),
        __metadata("design:type", sprotty_1.KeyTool)
    ], CommandPaletteTool.prototype, "keyTool", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], CommandPaletteTool.prototype, "postConstruct", null);
    CommandPaletteTool = CommandPaletteTool_1 = __decorate([
        inversify_1.injectable()
    ], CommandPaletteTool);
    return CommandPaletteTool;
}());
exports.CommandPaletteTool = CommandPaletteTool;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! ../../../css/command-palette.css */ "../../../node_modules/@eclipse-glsp/client/css/command-palette.css");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var command_palette_tool_1 = __webpack_require__(/*! ./command-palette-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js");
var server_command_palette_provider_1 = __webpack_require__(/*! ./server-command-palette-provider */ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js");
var glspCommandPaletteModule = new inversify_1.ContainerModule(function (bind) {
    bind(sprotty_1.CommandPalette).toSelf().inSingletonScope();
    bind(sprotty_1.TYPES.IUIExtension).toService(sprotty_1.CommandPalette);
    bind(sprotty_1.CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();
    bind(sprotty_1.TYPES.ICommandPaletteActionProviderRegistry).toService(sprotty_1.CommandPaletteActionProviderRegistry);
    bind(sprotty_1.TYPES.ICommandPaletteActionProvider).to(server_command_palette_provider_1.ServerCommandPaletteActionProvider);
    bind(types_1.GLSP_TYPES.IDefaultTool).to(command_palette_tool_1.CommandPaletteTool);
});
exports.default = glspCommandPaletteModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js":
/*!******************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js ***!
  \******************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var context_actions_1 = __webpack_require__(/*! ../../base/actions/context-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js");
var editor_context_1 = __webpack_require__(/*! ../../base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var ServerCommandPalette;
(function (ServerCommandPalette) {
    ServerCommandPalette.CONTEXT_ID = "command-palette";
    ServerCommandPalette.TEXT = "text";
    ServerCommandPalette.INDEX = "index";
})(ServerCommandPalette = exports.ServerCommandPalette || (exports.ServerCommandPalette = {}));
var ServerCommandPaletteActionProvider = /** @class */ (function () {
    function ServerCommandPaletteActionProvider() {
    }
    ServerCommandPaletteActionProvider.prototype.getActions = function (root, text, lastMousePosition, index) {
        var _a;
        var _this = this;
        var requestAction = new context_actions_1.RequestContextActions(ServerCommandPalette.CONTEXT_ID, this.editorContext.get((_a = {},
            _a[ServerCommandPalette.TEXT] = text,
            _a[ServerCommandPalette.INDEX] = index ? index : 0,
            _a)));
        return this.actionDispatcher.requestUntil(requestAction).then(function (response) { return _this.getPaletteActionsFromResponse(response); });
    };
    ServerCommandPaletteActionProvider.prototype.getPaletteActionsFromResponse = function (action) {
        if (context_actions_1.isSetContextActionsAction(action)) {
            return action.actions;
        }
        return [];
    };
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
    ], ServerCommandPaletteActionProvider.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(editor_context_1.EditorContextService),
        __metadata("design:type", editor_context_1.EditorContextService)
    ], ServerCommandPaletteActionProvider.prototype, "editorContext", void 0);
    ServerCommandPaletteActionProvider = __decorate([
        inversify_1.injectable()
    ], ServerCommandPaletteActionProvider);
    return ServerCommandPaletteActionProvider;
}());
exports.ServerCommandPaletteActionProvider = ServerCommandPaletteActionProvider;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js":
/*!***********************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js ***!
  \***********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var DeleteElementContextMenuItemProvider = /** @class */ (function () {
    function DeleteElementContextMenuItemProvider() {
    }
    DeleteElementContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        return __awaiter(this, void 0, void 0, function () {
            var editorContextService;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.editorContextServiceProvider()];
                    case 1:
                        editorContextService = _a.sent();
                        return [2 /*return*/, [
                                {
                                    id: "delete",
                                    label: "Delete",
                                    sortString: "d",
                                    group: "edit",
                                    actions: [new operation_1.DeleteElementOperation(editorContextService.selectedElements.map(function (e) { return e.id; }))],
                                    isEnabled: function () { return !editorContextService.isReadonly && editorContextService.selectedElements.length > 0; }
                                }
                            ]];
                }
            });
        });
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IEditorContextServiceProvider),
        __metadata("design:type", Function)
    ], DeleteElementContextMenuItemProvider.prototype, "editorContextServiceProvider", void 0);
    DeleteElementContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], DeleteElementContextMenuItemProvider);
    return DeleteElementContextMenuItemProvider;
}());
exports.DeleteElementContextMenuItemProvider = DeleteElementContextMenuItemProvider;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var selection_service_aware_context_menu_mouse_listener_1 = __webpack_require__(/*! ./selection-service-aware-context-menu-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js");
var server_context_menu_provider_1 = __webpack_require__(/*! ./server-context-menu-provider */ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js");
var glspContextMenuModule = new inversify_1.ContainerModule(function (bind) {
    bind(sprotty_1.TYPES.IContextMenuServiceProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve, reject) {
                if (ctx.container.isBound(sprotty_1.TYPES.IContextMenuService)) {
                    resolve(ctx.container.get(sprotty_1.TYPES.IContextMenuService));
                }
                else {
                    reject();
                }
            });
        };
    });
    bind(sprotty_1.TYPES.MouseListener).to(selection_service_aware_context_menu_mouse_listener_1.SelectionServiceAwareContextMenuMouseListener);
    bind(sprotty_1.TYPES.IContextMenuProviderRegistry).to(sprotty_1.ContextMenuProviderRegistry);
    bind(sprotty_1.TYPES.IContextMenuItemProvider).to(server_context_menu_provider_1.ServerContextMenuItemProvider);
});
exports.default = glspContextMenuModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js ***!
  \***********************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var SelectionServiceAwareContextMenuMouseListener = /** @class */ (function (_super) {
    __extends(SelectionServiceAwareContextMenuMouseListener, _super);
    function SelectionServiceAwareContextMenuMouseListener(contextMenuService, menuProvider, selectionService) {
        var _this = _super.call(this) || this;
        _this.contextMenuService = contextMenuService;
        _this.menuProvider = menuProvider;
        _this.selectionService = selectionService;
        return _this;
    }
    SelectionServiceAwareContextMenuMouseListener.prototype.mouseDown = function (target, event) {
        if (event.button === 2 && this.contextMenuService && this.menuProvider) {
            var mousePosition_1 = { x: event.x, y: event.y };
            var selectableTarget = sprotty_1.findParentByFeature(target, sprotty_1.isSelectable);
            if (selectableTarget) {
                selectableTarget.selected = true;
                this.selectionService.updateSelection(target.root, [selectableTarget.id], []);
            }
            Promise.all([this.contextMenuService(), this.menuProvider.getItems(target.root, mousePosition_1)])
                .then(function (_a) {
                var _b = __read(_a, 2), menuService = _b[0], menuItems = _b[1];
                return menuService.show(menuItems, mousePosition_1);
            });
        }
        return [];
    };
    SelectionServiceAwareContextMenuMouseListener = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.IContextMenuServiceProvider)), __param(0, inversify_1.optional()),
        __param(1, inversify_1.inject(sprotty_1.TYPES.IContextMenuProviderRegistry)), __param(1, inversify_1.optional()),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __metadata("design:paramtypes", [Function, sprotty_1.ContextMenuProviderRegistry,
            selection_service_1.SelectionService])
    ], SelectionServiceAwareContextMenuMouseListener);
    return SelectionServiceAwareContextMenuMouseListener;
}(sprotty_1.MouseListener));
exports.SelectionServiceAwareContextMenuMouseListener = SelectionServiceAwareContextMenuMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js":
/*!************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js ***!
  \************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var context_actions_1 = __webpack_require__(/*! ../../base/actions/context-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js");
var editor_context_1 = __webpack_require__(/*! ../../base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var ServerContextMenu;
(function (ServerContextMenu) {
    ServerContextMenu.CONTEXT_ID = "context-menu";
})(ServerContextMenu = exports.ServerContextMenu || (exports.ServerContextMenu = {}));
var ServerContextMenuItemProvider = /** @class */ (function () {
    function ServerContextMenuItemProvider() {
    }
    ServerContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var _this = this;
        var selectedElementIds = Array.from(root.index.all().filter(sprotty_1.isSelected).map(function (e) { return e.id; }));
        var context = this.editorContext.getWithSelection(selectedElementIds);
        var requestAction = new context_actions_1.RequestContextActions(ServerContextMenu.CONTEXT_ID, context);
        return this.actionDispatcher.requestUntil(requestAction).then(function (response) { return _this.getContextActionsFromResponse(response); });
    };
    ServerContextMenuItemProvider.prototype.getContextActionsFromResponse = function (action) {
        if (context_actions_1.isSetContextActionsAction(action)) {
            return action.actions;
        }
        return [];
    };
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
    ], ServerContextMenuItemProvider.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(editor_context_1.EditorContextService),
        __metadata("design:type", editor_context_1.EditorContextService)
    ], ServerContextMenuItemProvider.prototype, "editorContext", void 0);
    ServerContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], ServerContextMenuItemProvider);
    return ServerContextMenuItemProvider;
}());
exports.ServerContextMenuItemProvider = ServerContextMenuItemProvider;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-actions.js":
/*!************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-actions.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var CutOperationAction = /** @class */ (function () {
    function CutOperationAction(editorContext) {
        this.editorContext = editorContext;
        this.kind = CutOperationAction.KIND;
    }
    CutOperationAction.KIND = "cut";
    return CutOperationAction;
}());
exports.CutOperationAction = CutOperationAction;
var PasteOperationAction = /** @class */ (function () {
    function PasteOperationAction(clipboardData, editorContext) {
        this.clipboardData = clipboardData;
        this.editorContext = editorContext;
        this.kind = PasteOperationAction.KIND;
    }
    PasteOperationAction.KIND = "paste";
    return PasteOperationAction;
}());
exports.PasteOperationAction = PasteOperationAction;
var RequestClipboardDataAction = /** @class */ (function () {
    function RequestClipboardDataAction(editorContext, requestId) {
        if (requestId === void 0) { requestId = sprotty_1.generateRequestId(); }
        this.editorContext = editorContext;
        this.requestId = requestId;
        this.kind = RequestClipboardDataAction.KIND;
    }
    RequestClipboardDataAction.create = function (editorContext) {
        return new RequestClipboardDataAction(editorContext);
    };
    RequestClipboardDataAction.KIND = "requestClipboardData";
    return RequestClipboardDataAction;
}());
exports.RequestClipboardDataAction = RequestClipboardDataAction;
var SetClipboardDataAction = /** @class */ (function () {
    function SetClipboardDataAction(clipboardData, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.clipboardData = clipboardData;
        this.responseId = responseId;
        this.kind = SetClipboardDataAction.KIND;
    }
    SetClipboardDataAction.KIND = "setClipboardData";
    return SetClipboardDataAction;
}());
exports.SetClipboardDataAction = SetClipboardDataAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js":
/*!*****************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js ***!
  \*****************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var glsp_server_status_1 = __webpack_require__(/*! ../../model-source/glsp-server-status */ "../../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-server-status.js");
var InvokeCopyAction = /** @class */ (function () {
    function InvokeCopyAction() {
        this.kind = InvokeCopyAction.KIND;
    }
    InvokeCopyAction.KIND = "invoke-copy";
    return InvokeCopyAction;
}());
exports.InvokeCopyAction = InvokeCopyAction;
var InvokePasteAction = /** @class */ (function () {
    function InvokePasteAction() {
        this.kind = InvokePasteAction.KIND;
    }
    InvokePasteAction.KIND = "invoke-paste";
    return InvokePasteAction;
}());
exports.InvokePasteAction = InvokePasteAction;
var InvokeCutAction = /** @class */ (function () {
    function InvokeCutAction() {
        this.kind = InvokeCutAction.KIND;
    }
    InvokeCutAction.KIND = "invoke-cut";
    return InvokeCutAction;
}());
exports.InvokeCutAction = InvokeCutAction;
var InvokeCopyPasteActionHandler = /** @class */ (function () {
    function InvokeCopyPasteActionHandler() {
    }
    InvokeCopyPasteActionHandler.prototype.handle = function (action) {
        switch (action.kind) {
            case InvokeCopyAction.KIND:
                document.execCommand('copy');
                break;
            case InvokePasteAction.KIND:
                // in a browser without additional permission we can't invoke the paste command
                // the user needs to invoke it from the browser, so notify the user about it
                this.notifyUserToUseShortcut();
                break;
            case InvokeCutAction.KIND:
                document.execCommand('cut');
                break;
        }
    };
    InvokeCopyPasteActionHandler.prototype.notifyUserToUseShortcut = function () {
        var message = 'Please use the browser\'s paste command or shortcut.';
        var timeout = 10000;
        var severity = 'WARNING';
        this.dispatcher.dispatchAll([
            { kind: glsp_server_status_1.GLSPServerStatusAction.KIND, severity: severity, timeout: timeout, message: message },
            { kind: glsp_server_status_1.ServerMessageAction.KIND, severity: severity, timeout: timeout, message: message }
        ]);
    };
    __decorate([
        inversify_1.inject(lib_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], InvokeCopyPasteActionHandler.prototype, "dispatcher", void 0);
    InvokeCopyPasteActionHandler = __decorate([
        inversify_1.injectable()
    ], InvokeCopyPasteActionHandler);
    return InvokeCopyPasteActionHandler;
}());
exports.InvokeCopyPasteActionHandler = InvokeCopyPasteActionHandler;
var CopyPasteContextMenuItemProvider = /** @class */ (function () {
    function CopyPasteContextMenuItemProvider() {
    }
    CopyPasteContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var hasSelectedElements = Array.from(root.index.all().filter(lib_1.isSelected)).length > 0;
        return Promise.resolve([
            {
                id: "copy", label: "Copy", group: "copy-paste",
                actions: [new InvokeCopyAction()], isEnabled: function () { return hasSelectedElements; }
            },
            {
                id: "cut", label: "Cut", group: "copy-paste",
                actions: [new InvokeCutAction()], isEnabled: function () { return hasSelectedElements; }
            },
            {
                id: "paste", label: "Paste", group: "copy-paste",
                actions: [new InvokePasteAction()], isEnabled: function () { return true; }
            }
        ]);
    };
    CopyPasteContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], CopyPasteContextMenuItemProvider);
    return CopyPasteContextMenuItemProvider;
}());
exports.CopyPasteContextMenuItemProvider = CopyPasteContextMenuItemProvider;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js":
/*!************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var uuid_1 = __webpack_require__(/*! uuid */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/index.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var editor_context_1 = __webpack_require__(/*! ../../base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var copy_paste_actions_1 = __webpack_require__(/*! ./copy-paste-actions */ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-actions.js");
/**
 * A local implementation of the async clipboard interface.
 *
 * This implementation just stores the clipboard data in memory, but not in the clipboard.
 * This implementation can be used if you don't need to support cross-widget/browser/application
 * data transfer and you would like to avoid to require the permission of the user for accessing the
 * system clipboard asynchronously.
 *
 * In order to detect whether the user copied something else since we recorded the clipboard data
 * we put a uuid into the system clipboard synchronously. If on paste this ID has changed or is not
 * available anymore, we know that the user copied in another application or context, so we shouldn't
 * paste what we have stored locally and just return undefined.
 *
 * Real async clipboard service implementations can just ignore the ID that is passed and rely on the
 * system clipboard's content instead.
 */
var LocalClipboardService = /** @class */ (function () {
    function LocalClipboardService() {
    }
    LocalClipboardService.prototype.clear = function () {
        this.currentId = undefined;
        this.data = undefined;
    };
    LocalClipboardService.prototype.put = function (data, id) {
        this.currentId = id;
        this.data = data;
    };
    LocalClipboardService.prototype.get = function (id) {
        if (id !== this.currentId) {
            return undefined;
        }
        return this.data;
    };
    LocalClipboardService = __decorate([
        inversify_1.injectable()
    ], LocalClipboardService);
    return LocalClipboardService;
}());
exports.LocalClipboardService = LocalClipboardService;
function toClipboardId(clipboardId) {
    return JSON.stringify({ clipboardId: clipboardId });
}
function isClipboardId(jsonData) {
    return jsonData !== undefined && 'clipboardId' in jsonData;
}
function getClipboardIdFromDataTransfer(dataTransfer) {
    var jsonString = dataTransfer.getData(CLIPBOARD_DATA_FORMAT);
    var jsonObject = jsonString ? JSON.parse(jsonString) : undefined;
    return isClipboardId(jsonObject) ? jsonObject.clipboardId : undefined;
}
var CLIPBOARD_DATA_FORMAT = "application/json";
var ServerCopyPasteHandler = /** @class */ (function () {
    function ServerCopyPasteHandler() {
    }
    ServerCopyPasteHandler.prototype.handleCopy = function (e) {
        var _this = this;
        if (e.clipboardData && this.shouldCopy(e)) {
            var clipboardId_1 = uuid_1.v4();
            e.clipboardData.setData(CLIPBOARD_DATA_FORMAT, toClipboardId(clipboardId_1));
            this.actionDispatcher
                .request(copy_paste_actions_1.RequestClipboardDataAction.create(this.editorContext.get()))
                .then(function (action) { return _this.clipboadService.put(action.clipboardData, clipboardId_1); });
            e.preventDefault();
        }
        else {
            if (e.clipboardData) {
                e.clipboardData.clearData();
            }
            this.clipboadService.clear();
        }
    };
    ServerCopyPasteHandler.prototype.handleCut = function (e) {
        if (e.clipboardData && this.shouldCopy(e)) {
            this.handleCopy(e);
            this.actionDispatcher.dispatch(new copy_paste_actions_1.CutOperationAction(this.editorContext.get()));
            e.preventDefault();
        }
    };
    ServerCopyPasteHandler.prototype.handlePaste = function (e) {
        if (e.clipboardData) {
            var clipboardId = getClipboardIdFromDataTransfer(e.clipboardData);
            var clipboardData = this.clipboadService.get(clipboardId);
            if (clipboardData) {
                this.actionDispatcher.dispatch(new copy_paste_actions_1.PasteOperationAction(clipboardData, this.editorContext.get()));
            }
            e.preventDefault();
        }
    };
    ServerCopyPasteHandler.prototype.shouldCopy = function (e) {
        return this.editorContext.get().selectedElementIds.length > 0 && document.activeElement instanceof SVGElement
            && document.activeElement.parentElement && document.activeElement.parentElement.id === this.viewerOptions.baseDiv;
    };
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
    ], ServerCopyPasteHandler.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ServerCopyPasteHandler.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IAsyncClipboardService),
        __metadata("design:type", Object)
    ], ServerCopyPasteHandler.prototype, "clipboadService", void 0);
    __decorate([
        inversify_1.inject(editor_context_1.EditorContextService),
        __metadata("design:type", editor_context_1.EditorContextService)
    ], ServerCopyPasteHandler.prototype, "editorContext", void 0);
    ServerCopyPasteHandler = __decorate([
        inversify_1.injectable()
    ], ServerCopyPasteHandler);
    return ServerCopyPasteHandler;
}());
exports.ServerCopyPasteHandler = ServerCopyPasteHandler;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var copy_paste_context_menu_1 = __webpack_require__(/*! ./copy-paste-context-menu */ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js");
var copy_paste_handler_1 = __webpack_require__(/*! ./copy-paste-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js");
exports.glspServerCopyPasteModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.GLSP_TYPES.ICopyPasteHandler).to(copy_paste_handler_1.ServerCopyPasteHandler);
    bind(types_1.GLSP_TYPES.IAsyncClipboardService).to(copy_paste_handler_1.LocalClipboardService).inSingletonScope();
});
/**
 * This module is not required if the diagram is deployed in Theia but only intended to be used
 * in a standalone deployment of GLSP. If the GLSP diagram in Theia use the Theia-native
 * `CopyPasteMenuContribution` in `glsp-theia-integration` instead.
 */
exports.copyPasteContextMenuModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.GLSP_TYPES.IContextMenuProvider).to(copy_paste_context_menu_1.CopyPasteContextMenuItemProvider).inSingletonScope();
    bind(copy_paste_context_menu_1.InvokeCopyPasteActionHandler).toSelf().inSingletonScope();
    lib_1.configureActionHandler({ bind: bind, isBound: isBound }, copy_paste_context_menu_1.InvokeCopyAction.KIND, copy_paste_context_menu_1.InvokeCopyPasteActionHandler);
    lib_1.configureActionHandler({ bind: bind, isBound: isBound }, copy_paste_context_menu_1.InvokeCutAction.KIND, copy_paste_context_menu_1.InvokeCopyPasteActionHandler);
    lib_1.configureActionHandler({ bind: bind, isBound: isBound }, copy_paste_context_menu_1.InvokePasteAction.KIND, copy_paste_context_menu_1.InvokeCopyPasteActionHandler);
});


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js":
/*!***********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var GlspDecorationPlacer = /** @class */ (function (_super) {
    __extends(GlspDecorationPlacer, _super);
    function GlspDecorationPlacer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlspDecorationPlacer_1 = GlspDecorationPlacer;
    GlspDecorationPlacer.prototype.getPosition = function (element) {
        if (element instanceof sprotty_1.SChildElement && element.parent instanceof sprotty_1.SRoutableElement) {
            return _super.prototype.getPosition.call(this, element);
        }
        if (sprotty_1.isSizeable(element))
            return {
                x: GlspDecorationPlacer_1.DECORATION_OFFSET.x * element.bounds.width,
                y: GlspDecorationPlacer_1.DECORATION_OFFSET.y * element.bounds.height
            };
        return sprotty_1.ORIGIN_POINT;
    };
    var GlspDecorationPlacer_1;
    GlspDecorationPlacer.DECORATION_OFFSET = { x: 12, y: 10 };
    GlspDecorationPlacer = GlspDecorationPlacer_1 = __decorate([
        inversify_1.injectable()
    ], GlspDecorationPlacer);
    return GlspDecorationPlacer;
}(sprotty_1.DecorationPlacer));
exports.GlspDecorationPlacer = GlspDecorationPlacer;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! ../../../css/decoration.css */ "../../../node_modules/@eclipse-glsp/client/css/decoration.css");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js");
var view_1 = __webpack_require__(/*! ./view */ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/view.js");
var glspDecorationModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    sprotty_1.configureModelElement({ bind: bind, isBound: isBound }, 'marker', sprotty_1.SIssueMarker, view_1.GlspIssueMarkerView);
    bind(decoration_placer_1.GlspDecorationPlacer).toSelf().inSingletonScope();
    bind(sprotty_1.TYPES.IVNodePostprocessor).toService(decoration_placer_1.GlspDecorationPlacer);
});
exports.default = glspDecorationModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/view.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/decoration/view.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var snabbdom = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var JSX = { createElement: snabbdom.svg };
var GlspIssueMarkerView = /** @class */ (function (_super) {
    __extends(GlspIssueMarkerView, _super);
    function GlspIssueMarkerView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlspIssueMarkerView.prototype.render = function (marker, context) {
        var maxSeverity = _super.prototype.getMaxSeverity.call(this, marker);
        var group = JSX.createElement("g", { "class-sprotty-issue": true },
            JSX.createElement("g", null,
                JSX.createElement("circle", { "class-sprotty-issue-background": true, r: this.radius, cx: this.radius, cy: this.radius }),
                JSX.createElement("path", { d: this.getGlspIssueMarkerPath(maxSeverity) })));
        sprotty_1.setClass(group, 'sprotty-' + maxSeverity, true);
        return group;
    };
    Object.defineProperty(GlspIssueMarkerView.prototype, "radius", {
        get: function () {
            return 8; // var(--theia-icon-size)=16px => 16/2=8
        },
        enumerable: true,
        configurable: true
    });
    GlspIssueMarkerView.prototype.getGlspIssueMarkerPath = function (severity) {
        switch (severity) {
            // paths used here are svg versions of FontAwesome icons, resized to var(--theia-icon-size) 16px
            case 'error': // 'fa-times-circle'
                return 'M 8,0 C 3.5806452,0 0,3.58065 0,8 c 0,4.41935 3.5806452,8 8,8 4.419355,0 8,-3.58065 8,-8 C 16,3.58065 12.419355,0 8,0 Z m 3.922581,10.1 c 0.151613,0.15161 0.151613,0.39677 0,0.54839 l -1.27742,1.27419 c -0.151613,0.15161 -0.396774,0.15161 -0.548387,0 L 8,9.80645 5.9,11.92258 c -0.1516129,0.15161 -0.3967742,0.15161 -0.5483871,0 L 4.0774194,10.64516 c -0.1516129,-0.15161 -0.1516129,-0.39677 0,-0.54839 L 6.1935484,8 4.0774194,5.9 c -0.1516129,-0.15161 -0.1516129,-0.39677 0,-0.54839 L 5.3548387,4.07419 c 0.1516129,-0.15161 0.3967742,-0.15161 0.5483871,0 L 8,6.19355 10.1,4.07742 c 0.151613,-0.15161 0.396774,-0.15161 0.548387,0 l 1.277419,1.27742 c 0.151613,0.15161 0.151613,0.39677 0,0.54839 L 9.8064516,8 Z';
            case 'warning': // 'fa-exclamation-circle'
                return 'm 16,8 c 0,4.41926 -3.582032,8 -8,8 C 3.5820323,16 0,12.41926 0,8 0,3.58332 3.5820323,0 8,0 c 4.417968,0 8,3.58332 8,8 z M 8,9.6129 c -0.8195161,0 -1.483871,0.66436 -1.483871,1.48387 0,0.81952 0.6643549,1.48388 1.483871,1.48388 0.8195161,0 1.483871,-0.66436 1.483871,-1.48388 C 9.483871,10.27726 8.8195161,9.6129 8,9.6129 Z M 6.5911935,4.27916 6.8304839,8.66626 c 0.011194,0.20529 0.1809355,0.366 0.3865161,0.366 h 1.566 c 0.2055806,0 0.3753226,-0.16071 0.3865161,-0.366 L 9.4088065,4.27916 C 9.4209035,4.05742 9.2443548,3.87097 9.0222903,3.87097 H 6.9776774 c -0.2220645,0 -0.3985806,0.18645 -0.3864839,0.40819 z';
            case 'info': // 'fa-info-circle information'
                return 'M 8.0000004,0 C 3.5820324,0 0,3.58332 0,8 0,12.41926 3.5820324,16 8.0000004,16 12.417968,16 16,12.41926 16,8 16,3.58332 12.417968,0 8.0000004,0 Z m 0,3.54839 c 0.748258,0 1.354839,0.60658 1.354839,1.35484 0,0.74825 -0.606581,1.35483 -1.354839,1.35483 -0.748258,0 -1.354839,-0.60658 -1.354839,-1.35483 0,-0.74826 0.606581,-1.35484 1.354839,-1.35484 z m 1.806452,8.19355 c 0,0.21377 -0.173323,0.38709 -0.387097,0.38709 h -2.83871 c -0.213774,0 -0.387097,-0.17332 -0.387097,-0.38709 v -0.7742 c 0,-0.21377 0.173323,-0.38709 0.387097,-0.38709 h 0.387097 V 8.51613 h -0.387097 c -0.213774,0 -0.387097,-0.17332 -0.387097,-0.3871 V 7.35484 c 0,-0.21378 0.173323,-0.3871 0.387097,-0.3871 h 2.064516 c 0.213774,0 0.387097,0.17332 0.387097,0.3871 v 3.22581 h 0.387097 c 0.213774,0 0.387097,0.17332 0.387097,0.38709 z';
        }
    };
    GlspIssueMarkerView = __decorate([
        inversify_1.injectable()
    ], GlspIssueMarkerView);
    return GlspIssueMarkerView;
}(sprotty_1.IssueMarkerView));
exports.GlspIssueMarkerView = GlspIssueMarkerView;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var edit_label_tool_1 = __webpack_require__(/*! ./edit-label-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js");
var edit_label_validator_1 = __webpack_require__(/*! ./edit-label-validator */ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js");
var glspEditLabelModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound, _rebind) {
    bind(sprotty_1.TYPES.IEditLabelValidator).to(edit_label_validator_1.ServerEditLabelValidator);
    bind(sprotty_1.TYPES.IEditLabelValidationDecorator).to(edit_label_validator_1.BalloonLabelValidationDecorator);
    bind(types_1.GLSP_TYPES.IDefaultTool).to(edit_label_tool_1.DirectLabelEditTool);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, sprotty_1.ApplyLabelEditCommand);
});
exports.default = glspEditLabelModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js":
/*!*********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var base_glsp_tool_1 = __webpack_require__(/*! ../tools/base-glsp-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
var DirectLabelEditTool = /** @class */ (function (_super) {
    __extends(DirectLabelEditTool, _super);
    function DirectLabelEditTool() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DirectLabelEditTool_1 = DirectLabelEditTool;
    Object.defineProperty(DirectLabelEditTool.prototype, "id", {
        get: function () {
            return DirectLabelEditTool_1.ID;
        },
        enumerable: true,
        configurable: true
    });
    DirectLabelEditTool.prototype.createEditLabelMouseListener = function () {
        return new sprotty_1.EditLabelMouseListener();
    };
    DirectLabelEditTool.prototype.createEditLabelKeyListener = function () {
        return new sprotty_1.EditLabelKeyListener();
    };
    DirectLabelEditTool.prototype.enable = function () {
        this.editLabelKeyListener = this.createEditLabelKeyListener();
        this.editLabelMouseListener = this.createEditLabelMouseListener();
        this.mouseTool.register(this.editLabelMouseListener);
        this.keyTool.register(this.editLabelKeyListener);
    };
    DirectLabelEditTool.prototype.disable = function () {
        this.keyTool.deregister(this.editLabelKeyListener);
        this.mouseTool.deregister(this.editLabelMouseListener);
    };
    var DirectLabelEditTool_1;
    DirectLabelEditTool.ID = "glsp.direct-label-edit-tool";
    DirectLabelEditTool = DirectLabelEditTool_1 = __decorate([
        inversify_1.injectable()
    ], DirectLabelEditTool);
    return DirectLabelEditTool;
}(base_glsp_tool_1.BaseGLSPTool));
exports.DirectLabelEditTool = DirectLabelEditTool;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js":
/*!**************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var edit_validation_actions_1 = __webpack_require__(/*! ../../base/actions/edit-validation-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-validation-actions.js");
var LabelEditValidation;
(function (LabelEditValidation) {
    LabelEditValidation.CONTEXT_ID = 'label-edit';
    function toEditLabelValidationResult(status) {
        var message = status.message;
        var severity = 'ok';
        if (edit_validation_actions_1.ValidationStatus.isError(status)) {
            severity = 'error';
        }
        else if (edit_validation_actions_1.ValidationStatus.isWarning(status)) {
            severity = 'warning';
        }
        return { message: message, severity: severity };
    }
    LabelEditValidation.toEditLabelValidationResult = toEditLabelValidationResult;
})(LabelEditValidation = exports.LabelEditValidation || (exports.LabelEditValidation = {}));
var ValidateLabelEditAction = /** @class */ (function (_super) {
    __extends(ValidateLabelEditAction, _super);
    function ValidateLabelEditAction(value, labelId) {
        return _super.call(this, LabelEditValidation.CONTEXT_ID, labelId, value) || this;
    }
    return ValidateLabelEditAction;
}(edit_validation_actions_1.RequestEditValidationAction));
exports.ValidateLabelEditAction = ValidateLabelEditAction;
var ServerEditLabelValidator = /** @class */ (function () {
    function ServerEditLabelValidator() {
    }
    ServerEditLabelValidator.prototype.validate = function (value, label) {
        var _this = this;
        var action = new ValidateLabelEditAction(value, label.id);
        return this.actionDispatcher.requestUntil(action).then(function (response) { return _this.getValidationResultFromResponse(response); });
    };
    ServerEditLabelValidator.prototype.getValidationResultFromResponse = function (action) {
        if (edit_validation_actions_1.isSetEditValidationResultAction(action)) {
            return LabelEditValidation.toEditLabelValidationResult(action.status);
        }
        return { severity: 'ok' };
    };
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
    ], ServerEditLabelValidator.prototype, "actionDispatcher", void 0);
    ServerEditLabelValidator = __decorate([
        inversify_1.injectable()
    ], ServerEditLabelValidator);
    return ServerEditLabelValidator;
}());
exports.ServerEditLabelValidator = ServerEditLabelValidator;
var BalloonLabelValidationDecorator = /** @class */ (function () {
    function BalloonLabelValidationDecorator() {
    }
    BalloonLabelValidationDecorator.prototype.decorate = function (input, result) {
        var containerElement = input.parentElement;
        if (!containerElement) {
            return;
        }
        if (result.message) {
            containerElement.setAttribute('data-balloon', result.message);
            containerElement.setAttribute('data-balloon-pos', 'up-left');
            containerElement.setAttribute('data-balloon-visible', 'true');
        }
        switch (result.severity) {
            case 'ok':
                containerElement.classList.add('validation-ok');
                break;
            case 'warning':
                containerElement.classList.add('validation-warning');
                break;
            case 'error':
                containerElement.classList.add('validation-error');
                break;
        }
    };
    BalloonLabelValidationDecorator.prototype.dispose = function (input) {
        var containerElement = input.parentElement;
        if (containerElement) {
            containerElement.removeAttribute('data-balloon');
            containerElement.removeAttribute('data-balloon-pos');
            containerElement.removeAttribute('data-balloon-visible');
            containerElement.classList.remove('validation-ok', 'validation-warning', 'validation-error');
        }
    };
    BalloonLabelValidationDecorator = __decorate([
        inversify_1.injectable()
    ], BalloonLabelValidationDecorator);
    return BalloonLabelValidationDecorator;
}());
exports.BalloonLabelValidationDecorator = BalloonLabelValidationDecorator;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/di.config.js":
/*!************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/execute/di.config.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var execute_command_1 = __webpack_require__(/*! ./execute-command */ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/execute-command.js");
var executeCommandModule = new inversify_1.ContainerModule(function (bind) {
    bind(sprotty_1.TYPES.MouseListener).to(execute_command_1.ExecuteCommandMouseListener);
});
exports.default = executeCommandModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/execute-command.js":
/*!******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/execute/execute-command.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/model.js");
var ExecuteServerCommandAction = /** @class */ (function () {
    function ExecuteServerCommandAction(commandId, options) {
        this.commandId = commandId;
        this.options = options;
        this.kind = ExecuteServerCommandAction.KIND;
    }
    ExecuteServerCommandAction.KIND = "executeServerCommand";
    return ExecuteServerCommandAction;
}());
exports.ExecuteServerCommandAction = ExecuteServerCommandAction;
var ExecuteCommandMouseListener = /** @class */ (function (_super) {
    __extends(ExecuteCommandMouseListener, _super);
    function ExecuteCommandMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExecuteCommandMouseListener.prototype.doubleClick = function (target, event) {
        var result = [];
        var commandExecutorTarget = sprotty_1.findParentByFeature(target, model_1.isCommandExecutor);
        if (commandExecutorTarget) {
            result.push(new ExecuteServerCommandAction(commandExecutorTarget.commandId, { invokerId: commandExecutorTarget.id }));
        }
        return result;
    };
    return ExecuteCommandMouseListener;
}(sprotty_1.MouseListener));
exports.ExecuteCommandMouseListener = ExecuteCommandMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/model.js":
/*!********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/execute/model.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.executeCommandFeature = Symbol('executeFeature');
function isCommandExecutor(element) {
    return element.hasFeature(exports.executeCommandFeature);
}
exports.isCommandExecutor = isCommandExecutor;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var request_type_hints_action_1 = __webpack_require__(/*! ./request-type-hints-action */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/request-type-hints-action.js");
var type_hints_1 = __webpack_require__(/*! ./type-hints */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js");
var modelHintsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(type_hints_1.TypeHintProvider).toSelf().inSingletonScope();
    bind(types_1.GLSP_TYPES.ITypeHintProvider).toService(type_hints_1.TypeHintProvider);
    sprotty_1.configureActionHandler({ bind: bind, isBound: isBound }, request_type_hints_action_1.SetTypeHintsAction.KIND, type_hints_1.TypeHintProvider);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, type_hints_1.ApplyTypeHintsCommand);
});
exports.default = modelHintsModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js":
/*!******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/hints/model.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.containerFeature = Symbol("containable");
function isContainable(element) {
    return element.hasFeature(exports.containerFeature);
}
exports.isContainable = isContainable;
exports.reparentFeature = Symbol("reparentFeature");
function isReparentable(element) {
    return element.hasFeature(exports.reparentFeature);
}
exports.isReparentable = isReparentable;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/request-type-hints-action.js":
/*!**************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/hints/request-type-hints-action.js ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var RequestTypeHintsAction = /** @class */ (function () {
    function RequestTypeHintsAction(diagramType) {
        this.diagramType = diagramType;
        this.kind = RequestTypeHintsAction.KIND;
    }
    RequestTypeHintsAction.KIND = "requestTypeHints";
    return RequestTypeHintsAction;
}());
exports.RequestTypeHintsAction = RequestTypeHintsAction;
var SetTypeHintsAction = /** @class */ (function () {
    function SetTypeHintsAction(shapeHints, edgeHints) {
        this.shapeHints = shapeHints;
        this.edgeHints = edgeHints;
        this.kind = SetTypeHintsAction.KIND;
    }
    SetTypeHintsAction.KIND = "setTypeHints";
    return SetTypeHintsAction;
}());
exports.SetTypeHintsAction = SetTypeHintsAction;
function isSetTypeHintsAction(action) {
    return action !== undefined && (action.kind === SetTypeHintsAction.KIND)
        && action.shapeHints !== undefined && action.edgeHints !== undefined;
}
exports.isSetTypeHintsAction = isSetTypeHintsAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
var model_2 = __webpack_require__(/*! ../reconnect/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
var model_3 = __webpack_require__(/*! ../tool-feedback/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var model_4 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
var request_type_hints_action_1 = __webpack_require__(/*! ./request-type-hints-action */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/request-type-hints-action.js");
var TypeHint = /** @class */ (function () {
    function TypeHint() {
    }
    return TypeHint;
}());
exports.TypeHint = TypeHint;
var ShapeTypeHint = /** @class */ (function (_super) {
    __extends(ShapeTypeHint, _super);
    function ShapeTypeHint() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ShapeTypeHint;
}(TypeHint));
exports.ShapeTypeHint = ShapeTypeHint;
var EdgeTypeHint = /** @class */ (function (_super) {
    __extends(EdgeTypeHint, _super);
    function EdgeTypeHint() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EdgeTypeHint.prototype.isAllowedSource = function (input) {
        var type = smodel_util_1.getElementTypeId(input);
        return this.sourceElementTypeIds.includes(type);
    };
    EdgeTypeHint.prototype.isAllowedTarget = function (input) {
        var type = smodel_util_1.getElementTypeId(input);
        return this.targetElementTypeIds.includes(type);
    };
    return EdgeTypeHint;
}(TypeHint));
exports.EdgeTypeHint = EdgeTypeHint;
var ApplyTypeHintsAction = /** @class */ (function () {
    function ApplyTypeHintsAction() {
        this.kind = ApplyTypeHintsCommand.KIND;
    }
    ApplyTypeHintsAction = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], ApplyTypeHintsAction);
    return ApplyTypeHintsAction;
}());
exports.ApplyTypeHintsAction = ApplyTypeHintsAction;
var ApplyTypeHintsCommand = /** @class */ (function (_super) {
    __extends(ApplyTypeHintsCommand, _super);
    function ApplyTypeHintsCommand(action, typeHintProvider) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.typeHintProvider = typeHintProvider;
        _this.priority = 10;
        return _this;
    }
    ApplyTypeHintsCommand.prototype.execute = function (context) {
        var _this = this;
        context.root.index.all()
            .forEach(function (element) {
            if (element instanceof sprotty_1.SShapeElement || element instanceof sprotty_1.SModelRoot) {
                _this.applyShapeTypeHint(element);
            }
            else if (element instanceof sprotty_1.SEdge) {
                return _this.applyEdgeTypeHint(element);
            }
        });
        return context.root;
    };
    ApplyTypeHintsCommand.prototype.applyEdgeTypeHint = function (element) {
        var hint = this.typeHintProvider.getEdgeTypeHint(element);
        if (hint && isModifiableFetureSet(element.features)) {
            addOrRemove(element.features, sprotty_1.deletableFeature, hint.deletable);
            addOrRemove(element.features, sprotty_1.editFeature, hint.routable);
            addOrRemove(element.features, model_2.reconnectFeature, hint.repositionable);
        }
    };
    ApplyTypeHintsCommand.prototype.applyShapeTypeHint = function (element) {
        var hint = this.typeHintProvider.getShapeTypeHint(element);
        if (hint && isModifiableFetureSet(element.features)) {
            addOrRemove(element.features, sprotty_1.deletableFeature, hint.deletable);
            addOrRemove(element.features, sprotty_1.moveFeature, hint.repositionable);
            addOrRemove(element.features, model_1.resizeFeature, hint.resizable);
            addOrRemove(element.features, model_4.reparentFeature, hint.reparentable);
            addOrRemove(element.features, model_4.containerFeature, true);
            var containable = createContainable(hint);
            Object.assign(element, containable);
            addOrRemove(element.features, sprotty_1.connectableFeature, true);
            var validSourceEdges = this.typeHintProvider.getValidEdgeElementTypes(element, "source");
            var validTargetEdges = this.typeHintProvider.getValidEdgeElementTypes(element, "target");
            var connectable = createConnectable(validSourceEdges, validTargetEdges);
            Object.assign(element, connectable);
        }
    };
    ApplyTypeHintsCommand.KIND = "applyTypeHints";
    ApplyTypeHintsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __param(1, inversify_1.inject(types_1.GLSP_TYPES.ITypeHintProvider)),
        __metadata("design:paramtypes", [ApplyTypeHintsAction, Object])
    ], ApplyTypeHintsCommand);
    return ApplyTypeHintsCommand;
}(model_3.FeedbackCommand));
exports.ApplyTypeHintsCommand = ApplyTypeHintsCommand;
function createConnectable(validSourceEdges, validTargetEdges) {
    return {
        canConnect: function (routable, role) {
            return role === "source" ?
                validSourceEdges.includes(routable.type) :
                validTargetEdges.includes(routable.type);
        }
    };
}
function createContainable(hint) {
    return {
        isContainableElement: function (element) {
            return hint.containableElementTypeIds ?
                hint.containableElementTypeIds.includes(smodel_util_1.getElementTypeId(element)) :
                false;
        }
    };
}
function addOrRemove(features, feature, add) {
    if (add && !features.has(feature)) {
        features.add(feature);
    }
    else if (!add && features.has(feature)) {
        features.delete(feature);
    }
}
function isModifiableFetureSet(featureSet) {
    return featureSet !== undefined && featureSet instanceof Set;
}
var TypeHintProvider = /** @class */ (function () {
    function TypeHintProvider() {
        this.shapeHints = new Map;
        this.edgeHints = new Map;
    }
    TypeHintProvider.prototype.handle = function (action) {
        var _this = this;
        if (request_type_hints_action_1.isSetTypeHintsAction(action)) {
            action.shapeHints.forEach(function (hint) { return _this.shapeHints.set(hint.elementTypeId, hint); });
            action.edgeHints.forEach(function (hint) { return _this.edgeHints.set(hint.elementTypeId, hint); });
            this.feedbackActionDispatcher.registerFeedback(this, [new ApplyTypeHintsAction()]);
        }
    };
    TypeHintProvider.prototype.getValidEdgeElementTypes = function (input, role) {
        var elementTypeId = smodel_util_1.getElementTypeId(input);
        if (role === "source") {
            return Array.from(Array.from(this.edgeHints.values())
                .filter(function (hint) { return hint.sourceElementTypeIds.some(function (sourceElementTypeId) { return smodel_util_1.hasCompatibleType(elementTypeId, sourceElementTypeId); }); })
                .map(function (hint) { return hint.elementTypeId; }));
        }
        else {
            return Array.from(Array.from(this.edgeHints.values())
                .filter(function (hint) { return hint.targetElementTypeIds.some(function (targetElementTypeId) { return smodel_util_1.hasCompatibleType(elementTypeId, targetElementTypeId); }); })
                .map(function (hint) { return hint.elementTypeId; }));
        }
    };
    TypeHintProvider.prototype.getShapeTypeHint = function (input) {
        return getTypeHint(input, this.shapeHints);
    };
    TypeHintProvider.prototype.getEdgeTypeHint = function (input) {
        return getTypeHint(input, this.edgeHints);
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher),
        __metadata("design:type", Object)
    ], TypeHintProvider.prototype, "feedbackActionDispatcher", void 0);
    TypeHintProvider = __decorate([
        inversify_1.injectable()
    ], TypeHintProvider);
    return TypeHintProvider;
}());
exports.TypeHintProvider = TypeHintProvider;
function getTypeHint(input, hints) {
    var type = smodel_util_1.getElementTypeId(input);
    var hint = hints.get(type);
    // Check subtypes
    if (hint === undefined) {
        var subtypes = type.split(":");
        while (hint === undefined && subtypes.length > 0) {
            subtypes.pop();
            hint = hints.get(subtypes.join(":"));
        }
    }
    return hint;
}


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var popup_position_updater_1 = __webpack_require__(/*! sprotty/lib/features/hover/popup-position-updater */ "../../../node_modules/sprotty/lib/features/hover/popup-position-updater.js");
var hover_1 = __webpack_require__(/*! ./hover */ "../../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js");
var glspHoverModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(sprotty_1.TYPES.PopupVNodePostprocessor).to(popup_position_updater_1.PopupPositionUpdater).inSingletonScope();
    bind(sprotty_1.TYPES.MouseListener).to(hover_1.GlspHoverMouseListener);
    bind(sprotty_1.TYPES.PopupMouseListener).to(sprotty_1.PopupHoverMouseListener);
    bind(sprotty_1.TYPES.KeyListener).to(sprotty_1.HoverKeyListener);
    bind(sprotty_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(sprotty_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    var context = { bind: bind, isBound: isBound };
    sprotty_1.configureCommand(context, sprotty_1.HoverFeedbackCommand);
    sprotty_1.configureCommand(context, sprotty_1.SetPopupModelCommand);
    sprotty_1.configureActionHandler(context, sprotty_1.SetPopupModelCommand.KIND, sprotty_1.ClosePopupActionHandler);
    sprotty_1.configureActionHandler(context, sprotty_1.FitToScreenCommand.KIND, sprotty_1.ClosePopupActionHandler);
    sprotty_1.configureActionHandler(context, sprotty_1.CenterCommand.KIND, sprotty_1.ClosePopupActionHandler);
    sprotty_1.configureActionHandler(context, sprotty_1.SetViewportCommand.KIND, sprotty_1.ClosePopupActionHandler);
    sprotty_1.configureActionHandler(context, sprotty_1.MoveCommand.KIND, sprotty_1.ClosePopupActionHandler);
});
exports.default = glspHoverModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js":
/*!******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/hover/hover.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var validate_1 = __webpack_require__(/*! ../validation/validate */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js");
var GlspHoverMouseListener = /** @class */ (function (_super) {
    __extends(GlspHoverMouseListener, _super);
    function GlspHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GlspHoverMouseListener.prototype.startMouseOverTimer = function (target, event) {
        var _this = this;
        this.stopMouseOverTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOverTimer = window.setTimeout(function () {
                var popupBounds = _this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                if (target instanceof validate_1.GIssueMarker) {
                    resolve(new sprotty_1.SetPopupModelAction(_this.createPopupModel(target, popupBounds)));
                }
                else {
                    resolve(new sprotty_1.RequestPopupModelAction(target.id, popupBounds));
                }
                _this.state.popupOpen = true;
                _this.state.previousPopupElement = target;
            }, _this.options.popupOpenDelay);
        });
    };
    GlspHoverMouseListener.prototype.createPopupModel = function (marker, bounds) {
        if (marker.issues !== undefined && marker.issues.length > 0) {
            var message = '<ul>' + marker.issues.map(function (i) { return '<li>' + i.severity.toUpperCase() + ': ' + i.message + '</li>'; }).join('') + '</ul>';
            return {
                type: 'html',
                id: 'sprotty-popup',
                children: [
                    {
                        type: 'pre-rendered',
                        id: 'popup-title',
                        code: "<div class=\"" + getSeverity(marker) + "\"><div class=\"sprotty-popup-title\">" + message + "</div></div>"
                    }
                ],
                canvasBounds: this.modifyBounds(bounds)
            };
        }
        return { type: sprotty_1.EMPTY_ROOT.type, id: sprotty_1.EMPTY_ROOT.id };
    };
    GlspHoverMouseListener.prototype.modifyBounds = function (bounds) {
        return bounds;
    };
    GlspHoverMouseListener = __decorate([
        inversify_1.injectable()
    ], GlspHoverMouseListener);
    return GlspHoverMouseListener;
}(sprotty_1.HoverMouseListener));
exports.GlspHoverMouseListener = GlspHoverMouseListener;
function getSeverity(marker) {
    var e_1, _a;
    var currentSeverity = 'info';
    try {
        for (var _b = __values(marker.issues.map(function (s) { return s.severity; })), _c = _b.next(); !_c.done; _c = _b.next()) {
            var severity = _c.value;
            if (severity === 'error')
                return severity;
            if (severity === 'warning' && currentSeverity === 'info')
                currentSeverity = severity;
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return currentSeverity;
}
exports.getSeverity = getSeverity;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var layout_commands_1 = __webpack_require__(/*! ./layout-commands */ "../../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-commands.js");
var layoutCommandsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, layout_commands_1.ResizeElementsCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, layout_commands_1.AlignElementsCommand);
});
exports.default = layoutCommandsModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-commands.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/layout/layout-commands.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var layout_utils_1 = __webpack_require__(/*! ../../utils/layout-utils */ "../../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
var model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
var selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var ResizeDimension;
(function (ResizeDimension) {
    ResizeDimension[ResizeDimension["Width"] = 0] = "Width";
    ResizeDimension[ResizeDimension["Height"] = 1] = "Height";
    ResizeDimension[ResizeDimension["Width_And_Height"] = 2] = "Width_And_Height";
})(ResizeDimension = exports.ResizeDimension || (exports.ResizeDimension = {}));
var Reduce;
(function (Reduce) {
    function min() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        return Math.min.apply(Math, __spread(values));
    }
    Reduce.min = min;
    function max() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        return Math.max.apply(Math, __spread(values));
    }
    Reduce.max = max;
    function avg() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        return values.reduce(function (a, b) { return a + b; }, 0) / values.length;
    }
    Reduce.avg = avg;
    function first() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        return values[0];
    }
    Reduce.first = first;
    function last() {
        var values = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            values[_i] = arguments[_i];
        }
        return values[values.length - 1];
    }
    Reduce.last = last;
})(Reduce = exports.Reduce || (exports.Reduce = {}));
var ResizeElementsAction = /** @class */ (function () {
    function ResizeElementsAction(
    /**
     * IDs of the elements that should be resized. If no IDs are given, the selected elements will be resized.
     */
    elementIds, 
    /**
     * Resize dimension.
     */
    dimension, 
    /**
     * Function to reduce the dimension to a target dimension value, see Reduce.* for potential functions.
     */
    reductionFunction) {
        if (elementIds === void 0) { elementIds = []; }
        if (dimension === void 0) { dimension = ResizeDimension.Width; }
        this.elementIds = elementIds;
        this.dimension = dimension;
        this.reductionFunction = reductionFunction;
        this.kind = ResizeElementsCommand.KIND;
    }
    return ResizeElementsAction;
}());
exports.ResizeElementsAction = ResizeElementsAction;
var Alignment;
(function (Alignment) {
    Alignment[Alignment["Left"] = 0] = "Left";
    Alignment[Alignment["Center"] = 1] = "Center";
    Alignment[Alignment["Right"] = 2] = "Right";
    Alignment[Alignment["Top"] = 3] = "Top";
    Alignment[Alignment["Middle"] = 4] = "Middle";
    Alignment[Alignment["Bottom"] = 5] = "Bottom";
})(Alignment = exports.Alignment || (exports.Alignment = {}));
var Select;
(function (Select) {
    function all(elements) {
        return elements;
    }
    Select.all = all;
    function first(elements) {
        return [elements[0]];
    }
    Select.first = first;
    function last(elements) {
        return [elements[elements.length - 1]];
    }
    Select.last = last;
})(Select = exports.Select || (exports.Select = {}));
var AlignElementsAction = /** @class */ (function () {
    function AlignElementsAction(
    /**
     * IDs of the elements that should be aligned. If no IDs are given, the selected elements will be aligned.
     */
    elementIds, 
    /**
     * Alignment direction.
     */
    alignment, 
    /**
     * Function to selected elements that are considered during alignment calculation, see Select.* for potential functions.
     */
    selectionFunction) {
        if (elementIds === void 0) { elementIds = []; }
        if (alignment === void 0) { alignment = Alignment.Left; }
        if (selectionFunction === void 0) { selectionFunction = Select.all; }
        this.elementIds = elementIds;
        this.alignment = alignment;
        this.selectionFunction = selectionFunction;
        this.kind = AlignElementsCommand.KIND;
    }
    return AlignElementsAction;
}());
exports.AlignElementsAction = AlignElementsAction;
var LayoutElementsCommand = /** @class */ (function (_super) {
    __extends(LayoutElementsCommand, _super);
    function LayoutElementsCommand(action, actionDispatcher, selectionService, movementRestrictor) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.actionDispatcher = actionDispatcher;
        _this.selectionService = selectionService;
        _this.movementRestrictor = movementRestrictor;
        return _this;
    }
    LayoutElementsCommand.prototype.getActionElements = function (context) {
        var _this = this;
        var model = context.root;
        var elementIDs = this.action.elementIds;
        if (elementIDs.length === 0) {
            // collect the selected elements from the selection service (selection order is kept by service)
            this.selectionService.getSelectedElementIDs().forEach(function (elementID) { return elementIDs.push(elementID); });
        }
        var boundsAwareElements = [];
        elementIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element && _this.isActionElement(element)) {
                boundsAwareElements.push(element);
            }
        });
        return boundsAwareElements;
    };
    LayoutElementsCommand.prototype.dispatchAction = function (action) {
        this.actionDispatcher.dispatch(action);
    };
    LayoutElementsCommand.prototype.dispatchActions = function (actions) {
        this.actionDispatcher.dispatchAll(actions);
    };
    LayoutElementsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __param(1, inversify_1.inject(sprotty_1.TYPES.IActionDispatcher)),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __param(3, inversify_1.inject(types_1.GLSP_TYPES.IMovementRestrictor)), __param(3, inversify_1.optional()),
        __metadata("design:paramtypes", [Object, Object, selection_service_1.SelectionService, Object])
    ], LayoutElementsCommand);
    return LayoutElementsCommand;
}(sprotty_1.Command));
var ResizeElementsCommand = /** @class */ (function (_super) {
    __extends(ResizeElementsCommand, _super);
    function ResizeElementsCommand(action, actionDispatcher, selectionService, movementRestrictor) {
        var _this = _super.call(this, action, actionDispatcher, selectionService, movementRestrictor) || this;
        _this.action = action;
        _this.actionDispatcher = actionDispatcher;
        _this.selectionService = selectionService;
        _this.movementRestrictor = movementRestrictor;
        return _this;
    }
    ResizeElementsCommand.prototype.isActionElement = function (element) {
        return model_1.isResizable(element);
    };
    ResizeElementsCommand.prototype.execute = function (context) {
        var elements = this.getActionElements(context);
        if (elements.length > 1) {
            switch (this.action.dimension) {
                case ResizeDimension.Width:
                    this.resizeWidth(elements);
                    break;
                case ResizeDimension.Height:
                    this.resizeHeight(elements);
                    break;
                case ResizeDimension.Width_And_Height:
                    this.resizeWidthAndHeight(elements);
                    break;
            }
        }
        return context.root;
    };
    ResizeElementsCommand.prototype.resizeWidth = function (elements) {
        var _a;
        var targetWidth = (_a = this.action).reductionFunction.apply(_a, __spread(elements.map(function (element) { return element.bounds.width; })));
        this.dispatchResizeActions(elements, function (element, bounds) {
            // resize around center
            var halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);
            bounds.newPosition.x = element.bounds.x - halfDiffWidth;
            bounds.newSize.width = targetWidth;
        });
    };
    ResizeElementsCommand.prototype.resizeHeight = function (elements) {
        var _a;
        var targetHeight = (_a = this.action).reductionFunction.apply(_a, __spread(elements.map(function (element) { return element.bounds.height; })));
        this.dispatchResizeActions(elements, function (element, bounds) {
            // resize around middle
            var halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);
            bounds.newPosition.y = element.bounds.y - halfDiffHeight;
            bounds.newSize.height = targetHeight;
        });
    };
    ResizeElementsCommand.prototype.resizeWidthAndHeight = function (elements) {
        var _a, _b;
        var targetWidth = (_a = this.action).reductionFunction.apply(_a, __spread(elements.map(function (element) { return element.bounds.width; })));
        var targetHeight = (_b = this.action).reductionFunction.apply(_b, __spread(elements.map(function (element) { return element.bounds.height; })));
        this.dispatchResizeActions(elements, function (element, bounds) {
            // resize around center and middle
            var halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);
            var halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);
            bounds.newPosition.x = element.bounds.x - halfDiffWidth;
            bounds.newPosition.y = element.bounds.y - halfDiffHeight;
            bounds.newSize.width = targetWidth;
            bounds.newSize.height = targetHeight;
        });
    };
    ResizeElementsCommand.prototype.dispatchResizeActions = function (elements, change) {
        var _this = this;
        var elementAndBounds = []; // client- and server-side resize
        elements.forEach(function (element) {
            var elementChange = _this.createElementAndBounds(element, change);
            if (elementChange) {
                // simply skip invalid changes
                elementAndBounds.push(elementChange);
            }
        });
        this.dispatchActions([new sprotty_1.SetBoundsAction(elementAndBounds), new operation_1.ChangeBoundsOperation(elementAndBounds)]);
    };
    ResizeElementsCommand.prototype.createElementAndBounds = function (element, change) {
        var bounds = {
            elementId: element.id,
            newPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            },
            newSize: {
                width: element.bounds.width,
                height: element.bounds.height
            }
        };
        change(element, bounds);
        return layout_utils_1.toValidElementAndBounds(element, bounds, this.movementRestrictor);
    };
    ResizeElementsCommand.prototype.undo = function (context) {
        // we dispatch another action which can be undone, so no explicit implementation necessary
        return context.root;
    };
    ResizeElementsCommand.prototype.redo = function (context) {
        // we dispatch another action which can be redone, so no explicit implementation necessary
        return context.root;
    };
    ResizeElementsCommand.KIND = 'layout:resize';
    ResizeElementsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __param(1, inversify_1.inject(sprotty_1.TYPES.IActionDispatcher)),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __param(3, inversify_1.inject(types_1.GLSP_TYPES.IMovementRestrictor)), __param(3, inversify_1.optional()),
        __metadata("design:paramtypes", [ResizeElementsAction, Object, selection_service_1.SelectionService, Object])
    ], ResizeElementsCommand);
    return ResizeElementsCommand;
}(LayoutElementsCommand));
exports.ResizeElementsCommand = ResizeElementsCommand;
var AlignElementsCommand = /** @class */ (function (_super) {
    __extends(AlignElementsCommand, _super);
    function AlignElementsCommand(action, actionDispatcher, selectionService, movementRestrictor) {
        var _this = _super.call(this, action, actionDispatcher, selectionService, movementRestrictor) || this;
        _this.action = action;
        _this.actionDispatcher = actionDispatcher;
        _this.selectionService = selectionService;
        _this.movementRestrictor = movementRestrictor;
        return _this;
    }
    AlignElementsCommand.prototype.isActionElement = function (element) {
        return model_1.isBoundsAwareMoveable(element);
    };
    AlignElementsCommand.prototype.execute = function (context) {
        var elements = this.getActionElements(context);
        if (elements.length > 1) {
            switch (this.action.alignment) {
                case Alignment.Left:
                    this.alignLeft(elements);
                    break;
                case Alignment.Center:
                    this.alignCenter(elements);
                    break;
                case Alignment.Right:
                    this.alignRight(elements);
                    break;
                case Alignment.Top:
                    this.alignTop(elements);
                    break;
                case Alignment.Middle:
                    this.alignMiddle(elements);
                    break;
                case Alignment.Bottom:
                    this.alignBottom(elements);
                    break;
            }
        }
        return context.root;
    };
    AlignElementsCommand.prototype.alignLeft = function (elements) {
        var calculationElements = this.action.selectionFunction(elements);
        var minX = calculationElements.map(function (element) { return element.bounds.x; }).reduce(function (a, b) { return Math.min(a, b); });
        this.dispatchAlignActions(elements, function (_, move) { return move.toPosition.x = minX; });
    };
    AlignElementsCommand.prototype.alignCenter = function (elements) {
        var calculationElements = this.action.selectionFunction(elements);
        var minX = calculationElements.map(function (element) { return element.bounds.x; }).reduce(function (a, b) { return Math.min(a, b); });
        var maxX = calculationElements.map(function (element) { return element.bounds.x + element.bounds.width; }).reduce(function (a, b) { return Math.max(a, b); });
        var diffX = maxX - minX;
        var centerX = minX + 0.5 * diffX;
        this.dispatchAlignActions(elements, function (element, move) { return move.toPosition.x = centerX - 0.5 * element.bounds.width; });
    };
    AlignElementsCommand.prototype.alignRight = function (elements) {
        var calculationElements = this.action.selectionFunction(elements);
        var maxX = calculationElements.map(function (element) { return element.bounds.x + element.bounds.width; }).reduce(function (a, b) { return Math.max(a, b); });
        this.dispatchAlignActions(elements, function (element, move) { return move.toPosition.x = maxX - element.bounds.width; });
    };
    AlignElementsCommand.prototype.alignTop = function (elements) {
        var calculationElements = this.action.selectionFunction(elements);
        var minY = calculationElements.map(function (element) { return element.bounds.y; }).reduce(function (a, b) { return Math.min(a, b); });
        this.dispatchAlignActions(elements, function (_, move) { return move.toPosition.y = minY; });
    };
    AlignElementsCommand.prototype.alignMiddle = function (elements) {
        var calculationElements = this.action.selectionFunction(elements);
        var minY = calculationElements.map(function (element) { return element.bounds.y; }).reduce(function (a, b) { return Math.min(a, b); });
        var maxY = calculationElements.map(function (element) { return element.bounds.y + element.bounds.height; }).reduce(function (a, b) { return Math.max(a, b); });
        var diffY = maxY - minY;
        var middleY = minY + 0.5 * diffY;
        this.dispatchAlignActions(elements, function (element, move) { return move.toPosition.y = middleY - 0.5 * element.bounds.height; });
    };
    AlignElementsCommand.prototype.alignBottom = function (elements) {
        var calculationElements = this.action.selectionFunction(elements);
        var maxY = calculationElements.map(function (element) { return element.bounds.y + element.bounds.height; }).reduce(function (a, b) { return Math.max(a, b); });
        this.dispatchAlignActions(elements, function (element, move) { return move.toPosition.y = maxY - element.bounds.height; });
    };
    AlignElementsCommand.prototype.dispatchAlignActions = function (elements, change) {
        var _this = this;
        var moves = []; // client-side move
        var elementAndBounds = []; // server-side move
        elements.forEach(function (element) {
            var move = _this.createElementMove(element, change);
            if (move) {
                // simply skip invalid changes
                moves.push(move);
                var elementAndBound = _this.createElementAndBounds(element, move);
                elementAndBounds.push(elementAndBound);
            }
        });
        this.dispatchActions([new sprotty_1.MoveAction(moves), new operation_1.ChangeBoundsOperation(elementAndBounds)]);
    };
    AlignElementsCommand.prototype.createElementMove = function (element, change) {
        var move = {
            elementId: element.id,
            fromPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            },
            toPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            }
        };
        change(element, move);
        return layout_utils_1.toValidElementMove(element, move, this.movementRestrictor);
    };
    AlignElementsCommand.prototype.createElementAndBounds = function (element, move) {
        return {
            elementId: element.id,
            newPosition: {
                x: move.toPosition.x,
                y: move.toPosition.y
            },
            newSize: {
                width: element.bounds.width,
                height: element.bounds.height
            }
        };
    };
    AlignElementsCommand.prototype.undo = function (context) {
        // we dispatch another action which can be undone, so no explicit implementation necessary
        return context.root;
    };
    AlignElementsCommand.prototype.redo = function (context) {
        // we dispatch another action which can be redone, so no explicit implementation necessary
        return context.root;
    };
    AlignElementsCommand.KIND = 'layout:align';
    AlignElementsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __param(1, inversify_1.inject(sprotty_1.TYPES.IActionDispatcher)),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __param(3, inversify_1.inject(types_1.GLSP_TYPES.IMovementRestrictor)), __param(3, inversify_1.optional()),
        __metadata("design:paramtypes", [AlignElementsAction, Object, selection_service_1.SelectionService, Object])
    ], AlignElementsCommand);
    return AlignElementsCommand;
}(LayoutElementsCommand));
exports.AlignElementsCommand = AlignElementsCommand;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ./mouse-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js");
var glspMouseToolModule = new inversify_1.ContainerModule(function (bind, _unbind, _isBound, rebind) {
    bind(mouse_tool_1.RankingMouseTool).toSelf().inSingletonScope();
    bind(types_1.GLSP_TYPES.MouseTool).toService(mouse_tool_1.RankingMouseTool);
    rebind(sprotty_1.MouseTool).toService(mouse_tool_1.RankingMouseTool);
});
exports.default = glspMouseToolModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js":
/*!****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js ***!
  \****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var model_1 = __webpack_require__(/*! ../rank/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js");
var RankingMouseTool = /** @class */ (function (_super) {
    __extends(RankingMouseTool, _super);
    function RankingMouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        var _this = _super.call(this, mouseListeners) || this;
        _this.mouseListeners = mouseListeners;
        _this.rankedMouseListeners = groupBy(mouseListeners, function (listener) { return model_1.getRank(listener); });
        return _this;
    }
    RankingMouseTool.prototype.register = function (mouseListener) {
        _super.prototype.register.call(this, mouseListener);
        this.rankedMouseListeners = groupBy(this.mouseListeners, function (listener) { return model_1.getRank(listener); });
    };
    RankingMouseTool.prototype.deregister = function (mouseListener) {
        _super.prototype.deregister.call(this, mouseListener);
        this.rankedMouseListeners = groupBy(this.mouseListeners, function (listener) { return model_1.getRank(listener); });
    };
    RankingMouseTool.prototype.decorate = function (vnode, element) {
        // we need to overwrite the existing event handlers registered by the original mouse tool
        if (element instanceof sprotty_1.SModelRoot) {
            overwriteOn(vnode, 'mouseover', this.mouseOver.bind(this), element);
            overwriteOn(vnode, 'mouseout', this.mouseOut.bind(this), element);
            overwriteOn(vnode, 'mouseenter', this.mouseEnter.bind(this), element);
            overwriteOn(vnode, 'mouseleave', this.mouseLeave.bind(this), element);
            overwriteOn(vnode, 'mousedown', this.mouseDown.bind(this), element);
            overwriteOn(vnode, 'mouseup', this.mouseUp.bind(this), element);
            overwriteOn(vnode, 'mousemove', this.mouseMove.bind(this), element);
            overwriteOn(vnode, 'wheel', this.wheel.bind(this), element);
            overwriteOn(vnode, 'contextmenu', function (target, event) {
                event.preventDefault();
            }, element);
            overwriteOn(vnode, 'dblclick', this.doubleClick.bind(this), element);
        }
        vnode = this.mouseListeners.reduce(function (n, listener) { return listener.decorate(n, element); }, vnode);
        return vnode;
    };
    RankingMouseTool.prototype.handleEvent = function (methodName, model, event) {
        this.focusOnMouseEvent(methodName, model);
        var element = this.getTargetElement(model, event);
        if (!element) {
            return;
        }
        this.notifyListenersByRank(element, methodName, model, event);
    };
    RankingMouseTool.prototype.notifyListenersByRank = function (element, methodName, model, event) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b, rank, e_1_1;
            var e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 5, 6, 7]);
                        _a = __values(this.rankedMouseListeners), _b = _a.next();
                        _d.label = 1;
                    case 1:
                        if (!!_b.done) return [3 /*break*/, 4];
                        rank = _b.value;
                        return [4 /*yield*/, this.dispatchActions(rank[1], methodName, element, event)];
                    case 2:
                        _d.sent();
                        _d.label = 3;
                    case 3:
                        _b = _a.next();
                        return [3 /*break*/, 1];
                    case 4: return [3 /*break*/, 7];
                    case 5:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 7];
                    case 6:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    RankingMouseTool.prototype.dispatchActions = function (mouseListeners, methodName, element, event) {
        return __awaiter(this, void 0, void 0, function () {
            var actions, actions_1, actions_1_1, actionOrPromise, e_2_1;
            var e_2, _a;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        actions = mouseListeners
                            .map(function (listener) { return listener[methodName].apply(listener, [element, event]); })
                            .reduce(function (a, b) { return a.concat(b); });
                        if (!(actions.length > 0)) return [3 /*break*/, 9];
                        event.preventDefault();
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 7, 8, 9]);
                        actions_1 = __values(actions), actions_1_1 = actions_1.next();
                        _b.label = 2;
                    case 2:
                        if (!!actions_1_1.done) return [3 /*break*/, 6];
                        actionOrPromise = actions_1_1.value;
                        if (!sprotty_1.isAction(actionOrPromise)) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.actionDispatcher.dispatch(actionOrPromise)];
                    case 3:
                        _b.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        actionOrPromise.then(function (action) {
                            _this.actionDispatcher.dispatch(action);
                        });
                        _b.label = 5;
                    case 5:
                        actions_1_1 = actions_1.next();
                        return [3 /*break*/, 2];
                    case 6: return [3 /*break*/, 9];
                    case 7:
                        e_2_1 = _b.sent();
                        e_2 = { error: e_2_1 };
                        return [3 /*break*/, 9];
                    case 8:
                        try {
                            if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);
                        }
                        finally { if (e_2) throw e_2.error; }
                        return [7 /*endfinally*/];
                    case 9: return [2 /*return*/];
                }
            });
        });
    };
    RankingMouseTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(sprotty_1.TYPES.MouseListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], RankingMouseTool);
    return RankingMouseTool;
}(sprotty_1.MouseTool));
exports.RankingMouseTool = RankingMouseTool;
function groupBy(array, keyFunction) {
    var unsortedMap = array.reduce(function (result, item) {
        var key = keyFunction(item);
        if (!result.has(key)) {
            result.set(key, [item]);
        }
        else {
            var entries = result.get(key);
            if (entries) {
                entries.push(item);
            }
        }
        return result;
    }, new Map());
    return new Map(__spread(unsortedMap.entries()).sort());
}
function overwriteOn(vnode, event, listener, element) {
    var val = getOn(vnode);
    // ignore any previous val[event] registrations
    val[event] = [listener, element];
}
function getOn(vnode) {
    var data = getData(vnode);
    if (!data.on)
        data.on = {};
    return data.on;
}
function getData(vnode) {
    if (!vnode.data)
        vnode.data = {};
    return vnode.data;
}


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var navigation_action_handler_1 = __webpack_require__(/*! ./navigation-action-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js");
var navigation_target_resolver_1 = __webpack_require__(/*! ./navigation-target-resolver */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
exports.navigationModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(navigation_target_resolver_1.NavigationTargetResolver).toSelf().inSingletonScope();
    bind(navigation_action_handler_1.NavigationActionHandler).toSelf().inSingletonScope();
    lib_1.configureActionHandler({ bind: bind, isBound: isBound }, navigation_action_handler_1.NavigateAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    lib_1.configureActionHandler({ bind: bind, isBound: isBound }, navigation_action_handler_1.NavigateToTargetAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    lib_1.configureActionHandler({ bind: bind, isBound: isBound }, navigation_action_handler_1.ProcessNavigationArgumentsAction.KIND, navigation_action_handler_1.NavigationActionHandler);
});


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/external-navigate-to-target-handler.js":
/*!*****************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/navigation/external-navigate-to-target-handler.js ***!
  \*****************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var ExternalNavigateToTargetHandler = /** @class */ (function () {
    function ExternalNavigateToTargetHandler() {
    }
    ExternalNavigateToTargetHandler = __decorate([
        inversify_1.injectable()
    ], ExternalNavigateToTargetHandler);
    return ExternalNavigateToTargetHandler;
}());
exports.ExternalNavigateToTargetHandler = ExternalNavigateToTargetHandler;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js":
/*!*******************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js ***!
  \*******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var glsp_server_status_1 = __webpack_require__(/*! ../../model-source/glsp-server-status */ "../../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-server-status.js");
var external_navigate_to_target_handler_1 = __webpack_require__(/*! ./external-navigate-to-target-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/external-navigate-to-target-handler.js");
var navigation_target_resolver_1 = __webpack_require__(/*! ./navigation-target-resolver */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
/**
 * Action for triggering a navigation of a certain target type.
 *
 * Examples for target types could be `documentation`, `implementation`, etc.
 * but this is up to the domain-specific diagram implementation to decide.
 * Such an action will eventually trigger a `RequestNavigationTargetsAction`
 * (see `NavigationActionHandler`) in order to request the navigation targets
 * from the server.
 *
 * This action is typically triggered by a user action.
 */
var NavigateAction = /** @class */ (function () {
    function NavigateAction(targetTypeId, args) {
        this.targetTypeId = targetTypeId;
        this.args = args;
        this.kind = NavigateAction.KIND;
    }
    NavigateAction.KIND = 'navigate';
    return NavigateAction;
}());
exports.NavigateAction = NavigateAction;
function isNavigateAction(action) {
    return action !== undefined && (action.kind === NavigateAction.KIND)
        && action.targetTypeId !== undefined;
}
exports.isNavigateAction = isNavigateAction;
/** Action that is usually sent to the server to request navigation targets for a navigation type. */
var RequestNavigationTargetsAction = /** @class */ (function () {
    function RequestNavigationTargetsAction(targetTypeId, editorContext, requestId) {
        if (requestId === void 0) { requestId = sprotty_1.generateRequestId(); }
        this.targetTypeId = targetTypeId;
        this.editorContext = editorContext;
        this.requestId = requestId;
        this.kind = RequestNavigationTargetsAction.KIND;
    }
    RequestNavigationTargetsAction.KIND = "requestNavigationTargets";
    return RequestNavigationTargetsAction;
}());
exports.RequestNavigationTargetsAction = RequestNavigationTargetsAction;
/** Action that is usually sent from the server to the client as a repsonse to a `RequestNavigationTargetsAction`. */
var SetNavigationTargetsAction = /** @class */ (function () {
    function SetNavigationTargetsAction(targets, responseId, args) {
        if (responseId === void 0) { responseId = ''; }
        this.targets = targets;
        this.responseId = responseId;
        this.args = args;
        this.kind = SetNavigationTargetsAction.KIND;
    }
    SetNavigationTargetsAction.KIND = "setNavigationTargets";
    return SetNavigationTargetsAction;
}());
exports.SetNavigationTargetsAction = SetNavigationTargetsAction;
function isSetNavigationTargetsAction(action) {
    return action !== undefined && (action.kind === SetNavigationTargetsAction.KIND)
        && action.targets !== undefined;
}
exports.isSetNavigationTargetsAction = isSetNavigationTargetsAction;
/** Action that triggers the navigation to a particular navigation target, such as element IDs, queries, etc.. */
var NavigateToTargetAction = /** @class */ (function () {
    function NavigateToTargetAction(target) {
        this.target = target;
        this.kind = NavigateToTargetAction.KIND;
    }
    NavigateToTargetAction.KIND = 'navigateToTarget';
    return NavigateToTargetAction;
}());
exports.NavigateToTargetAction = NavigateToTargetAction;
function isNavigateToTargetAction(action) {
    return action !== undefined && (action.kind === NavigateToTargetAction.KIND)
        && action.target !== undefined;
}
exports.isNavigateToTargetAction = isNavigateToTargetAction;
/** Action to trigger the processing of additional navigation arguments.
 *
 * The resolution of a `NavigationTarget` may entail additional arguments. In this case, this action is
 * triggered allowing the client to react to those arguments. The default `NavigationActionHandler` will
 * only process the arguments' keys `info`, `warning`, and `error` to present them to the user.
 * Customizations, however, may add domain-specific arguments and register custom handler to also process
 * other arguments and trigger some additional behavior (e.g. update other views, etc.).
 */
var ProcessNavigationArgumentsAction = /** @class */ (function () {
    function ProcessNavigationArgumentsAction(args) {
        this.args = args;
        this.kind = ProcessNavigationArgumentsAction.KIND;
    }
    ProcessNavigationArgumentsAction.KIND = 'processNavigationArguments';
    return ProcessNavigationArgumentsAction;
}());
exports.ProcessNavigationArgumentsAction = ProcessNavigationArgumentsAction;
function isProcessNavigationArgumentsAction(action) {
    return action !== undefined && (action.kind === ProcessNavigationArgumentsAction.KIND)
        && action.args !== undefined;
}
exports.isProcessNavigationArgumentsAction = isProcessNavigationArgumentsAction;
/**
 * Default handler for all actions that are related to the navigation.
 *
 * For a `NavigateAction` this handler triggers a `RequestNavigationTargetAction` to obtain the actual
 * navigation targets for the navigation type that is specified in the `NavigateAction`.
 * Once the navigation targets are available, it will trigger a `NavigateToTargetAction` to actually
 * perform the navigation.
 *
 * In other scenarios, clients may also trigger the `NavigateToTargetAction` directly, e.g. when opening
 * the diagram.
 *
 * Depending on the URI and arguments of the navigation target we may encounter three cases:
 *   *(a)* the navigation target already specifies element IDs, in which case this action handler navigates
 *         to the specified elements directly, by the selecting them and centering them in the viewport.
 *   *(b)* the arguments of the navigation targets don't contain element IDs, but other arguments, the
 *         navigation target needs to be resolved into actual elment IDs by the `NavigationTargetResolver`.
 *         This can for instance be useful, if the navigation deals with queries or some other more complex
 *         logic that can't be dealt with on the client.
  *  *(c)* the target isn't resolved by the `NavigationTargetResolver`, e.g. because the `uri` doesn't match
  *        the URI of the current diagram. In this case, the navigation request is forwarded to the
  *        `ExternalNavigateToTargetHandler`, if it exists.
 */
var NavigationActionHandler = /** @class */ (function () {
    function NavigationActionHandler() {
        this.notificationTimeout = 5000;
    }
    NavigationActionHandler.prototype.handle = function (action) {
        if (isNavigateAction(action)) {
            this.handleNavigateAction(action);
        }
        else if (isNavigateToTargetAction(action)) {
            this.handleNavigateToTarget(action);
        }
        else if (isProcessNavigationArgumentsAction(action)) {
            this.processNavigationArguments(action.args);
        }
    };
    NavigationActionHandler.prototype.handleNavigateAction = function (action) {
        return __awaiter(this, void 0, void 0, function () {
            var editorContextService, context_1, response, reason_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 4]);
                        return [4 /*yield*/, this.editorContextService()];
                    case 1:
                        editorContextService = _a.sent();
                        context_1 = editorContextService.get(action.args);
                        return [4 /*yield*/, this.dispatcher.request(new RequestNavigationTargetsAction(action.targetTypeId, context_1))];
                    case 2:
                        response = _a.sent();
                        if (isSetNavigationTargetsAction(response) && response.targets && response.targets.length === 1) {
                            if (response.targets.length > 1) {
                                this.logger.warn(this, 'Processing of multiple targets is not supported yet. ' +
                                    'Only the first is being processed.', response.targets);
                            }
                            return [2 /*return*/, this.dispatcher.dispatch(new NavigateToTargetAction(response.targets[0]))];
                        }
                        this.warnAboutFailedNavigation('No valid navigation target found');
                        return [3 /*break*/, 4];
                    case 3:
                        reason_1 = _a.sent();
                        this.logger.error(this, 'Failed to obtain navigation target', reason_1, action);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    NavigationActionHandler.prototype.handleNavigateToTarget = function (action) {
        return __awaiter(this, void 0, void 0, function () {
            var resolvedElements, reason_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.resolveElements(action)];
                    case 1:
                        resolvedElements = _a.sent();
                        if (this.containsElementIdsOrArguments(resolvedElements)) {
                            this.navigateTo(resolvedElements);
                            this.handleResolutionArguments(resolvedElements);
                            return [2 /*return*/];
                        }
                        else if (this.externalHandler) {
                            this.navigateToExternal(action.target);
                            return [2 /*return*/];
                        }
                        this.warnAboutFailedNavigation('Could not resolve or navigate to target', action.target);
                        return [3 /*break*/, 3];
                    case 2:
                        reason_2 = _a.sent();
                        this.logger.error(this, 'Failed to navigate', reason_2, action);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    NavigationActionHandler.prototype.resolveElements = function (action) {
        return this.resolver.resolve(action.target);
    };
    NavigationActionHandler.prototype.containsElementIdsOrArguments = function (target) {
        return target !== undefined && (this.containsElementIds(target.elementIds) || this.containsArguments(target.args));
    };
    NavigationActionHandler.prototype.containsElementIds = function (elementIds) {
        return elementIds !== undefined && elementIds.length > 0;
    };
    NavigationActionHandler.prototype.containsArguments = function (args) {
        return args !== undefined && args !== undefined && Object.keys(args).length > 0;
    };
    NavigationActionHandler.prototype.navigateTo = function (target) {
        var elementIds = target.elementIds;
        if (!this.containsElementIds(elementIds)) {
            return;
        }
        this.dispatcher.dispatchAll([new sprotty_1.SelectAllAction(false), new sprotty_1.SelectAction(elementIds), new sprotty_1.CenterAction(elementIds)]);
    };
    NavigationActionHandler.prototype.handleResolutionArguments = function (target) {
        var args = target.args;
        if (!this.containsArguments(args)) {
            return;
        }
        this.dispatcher.dispatch(new ProcessNavigationArgumentsAction(args));
    };
    NavigationActionHandler.prototype.navigateToExternal = function (target) {
        return this.externalHandler.navigateTo(target.uri, target.args);
    };
    NavigationActionHandler.prototype.processNavigationArguments = function (args) {
        if (args.info && args.info.toString().length > 0) {
            this.notify('INFO', args.info.toString());
        }
        if (args.warning && args.warning.toString().length > 0) {
            this.notify('WARNING', args.warning.toString());
        }
        if (args.error && args.error.toString().length > 0) {
            this.notify('ERROR', args.error.toString());
        }
    };
    NavigationActionHandler.prototype.warnAboutFailedNavigation = function (msg, target) {
        var message = "" + msg + (target ? ": '" + target.uri + "' (arguments: " + JSON.stringify(target.args) + ")" : '');
        this.logger.warn(this, msg, target);
        this.notify('WARNING', message);
    };
    NavigationActionHandler.prototype.notify = function (severity, message) {
        var timeout = this.notificationTimeout;
        this.dispatcher.dispatchAll([
            { kind: glsp_server_status_1.GLSPServerStatusAction.KIND, severity: severity, timeout: timeout, message: message },
            { kind: glsp_server_status_1.ServerMessageAction.KIND, severity: severity, timeout: timeout, message: message }
        ]);
    };
    __decorate([
        inversify_1.inject(lib_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], NavigationActionHandler.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(lib_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], NavigationActionHandler.prototype, "dispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IEditorContextServiceProvider),
        __metadata("design:type", Function)
    ], NavigationActionHandler.prototype, "editorContextService", void 0);
    __decorate([
        inversify_1.inject(navigation_target_resolver_1.NavigationTargetResolver),
        __metadata("design:type", navigation_target_resolver_1.NavigationTargetResolver)
    ], NavigationActionHandler.prototype, "resolver", void 0);
    __decorate([
        inversify_1.inject(external_navigate_to_target_handler_1.ExternalNavigateToTargetHandler), inversify_1.optional(),
        __metadata("design:type", external_navigate_to_target_handler_1.ExternalNavigateToTargetHandler)
    ], NavigationActionHandler.prototype, "externalHandler", void 0);
    NavigationActionHandler = __decorate([
        inversify_1.injectable()
    ], NavigationActionHandler);
    return NavigationActionHandler;
}());
exports.NavigationActionHandler = NavigationActionHandler;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js":
/*!********************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js ***!
  \********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var NavigationTarget;
(function (NavigationTarget) {
    NavigationTarget.ELEMENT_IDS = 'elementIds';
    NavigationTarget.ELEMENT_IDS_SEPARATOR = '&';
    NavigationTarget.TEXT_LINE = 'line';
    NavigationTarget.TEXT_COLUMN = 'column';
    function hasArguments(target) {
        return target.args !== undefined && Object.keys(target.args).length > 0;
    }
    NavigationTarget.hasArguments = hasArguments;
    function addArgument(target, key, value) {
        if (target.args === undefined) {
            target.args = {};
        }
        target.args[key] = value;
    }
    NavigationTarget.addArgument = addArgument;
    function getElementIds(target) {
        if (target.args === undefined || target.args[NavigationTarget.ELEMENT_IDS] === undefined) {
            return [];
        }
        var elementIdsValue = target.args[NavigationTarget.ELEMENT_IDS].toString();
        return elementIdsValue.split(NavigationTarget.ELEMENT_IDS_SEPARATOR);
    }
    NavigationTarget.getElementIds = getElementIds;
    function setElementIds(target, elementIds) {
        if (target.args === undefined) {
            target.args = {};
        }
        return target.args[NavigationTarget.ELEMENT_IDS] = elementIds.join(NavigationTarget.ELEMENT_IDS_SEPARATOR);
    }
    NavigationTarget.setElementIds = setElementIds;
    function setTextPosition(target, position) {
        if (position) {
            if (target.args === undefined) {
                target.args = {};
            }
            target.args[NavigationTarget.TEXT_LINE] = position.line;
            target.args[NavigationTarget.TEXT_COLUMN] = position.character;
        }
    }
    NavigationTarget.setTextPosition = setTextPosition;
    function getTextPosition(target) {
        if (target.args === undefined
            || target.args[NavigationTarget.TEXT_LINE] === undefined
            || target.args[NavigationTarget.TEXT_COLUMN] === undefined) {
            return undefined;
        }
        return {
            line: Number(target.args[NavigationTarget.TEXT_LINE]),
            character: Number(target.args[NavigationTarget.TEXT_COLUMN])
        };
    }
    NavigationTarget.getTextPosition = getTextPosition;
})(NavigationTarget = exports.NavigationTarget || (exports.NavigationTarget = {}));
var ResolveNavigationTargetAction = /** @class */ (function () {
    function ResolveNavigationTargetAction(navigationTarget, requestId) {
        if (requestId === void 0) { requestId = sprotty_1.generateRequestId(); }
        this.navigationTarget = navigationTarget;
        this.requestId = requestId;
        this.kind = ResolveNavigationTargetAction.KIND;
    }
    ResolveNavigationTargetAction.KIND = 'resolveNavigationTarget';
    return ResolveNavigationTargetAction;
}());
exports.ResolveNavigationTargetAction = ResolveNavigationTargetAction;
var SetResolvedNavigationTargetAction = /** @class */ (function () {
    function SetResolvedNavigationTargetAction(elementIds, args, responseId) {
        if (elementIds === void 0) { elementIds = []; }
        if (responseId === void 0) { responseId = ''; }
        this.elementIds = elementIds;
        this.args = args;
        this.responseId = responseId;
        this.kind = SetResolvedNavigationTargetAction.KIND;
    }
    SetResolvedNavigationTargetAction.KIND = 'setResolvedNavigationTarget';
    return SetResolvedNavigationTargetAction;
}());
exports.SetResolvedNavigationTargetAction = SetResolvedNavigationTargetAction;
function isSetResolvedNavigationTargets(action) {
    return action !== undefined && (action.kind === SetResolvedNavigationTargetAction.KIND);
}
exports.isSetResolvedNavigationTargets = isSetResolvedNavigationTargets;
/**
 * Resolves `NavigationTargets` to element ids.
 *
 * If the `NavigationTarget` doesn't have element ids itself, this resolver queries the server via a
 * `ResolveNavigationTargetAction` for element ids.
 */
var NavigationTargetResolver = /** @class */ (function () {
    function NavigationTargetResolver() {
    }
    NavigationTargetResolver.prototype.resolve = function (navigationTarget) {
        return __awaiter(this, void 0, void 0, function () {
            var contextService, sourceUri;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.editorContextService()];
                    case 1:
                        contextService = _a.sent();
                        return [4 /*yield*/, contextService.getSourceUri()];
                    case 2:
                        sourceUri = _a.sent();
                        return [2 /*return*/, this.resolveWithSourceUri(sourceUri, navigationTarget)];
                }
            });
        });
    };
    NavigationTargetResolver.prototype.resolveWithSourceUri = function (sourceUri, target) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (sourceUri && sourceUri !== target.uri && "file://" + sourceUri !== target.uri) {
                            // different URI, so we can't resolve it locally
                            return [2 /*return*/, undefined];
                        }
                        if (NavigationTarget.getElementIds(target).length > 0) {
                            return [2 /*return*/, new SetResolvedNavigationTargetAction(NavigationTarget.getElementIds(target))];
                        }
                        return [4 /*yield*/, this.requestResolution(target)];
                    case 1:
                        response = _a.sent();
                        if (isSetResolvedNavigationTargets(response)) {
                            return [2 /*return*/, response];
                        }
                        return [2 /*return*/, undefined];
                }
            });
        });
    };
    NavigationTargetResolver.prototype.requestResolution = function (target) {
        return this.dispatcher.request(new ResolveNavigationTargetAction(target));
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IEditorContextServiceProvider),
        __metadata("design:type", Function)
    ], NavigationTargetResolver.prototype, "editorContextService", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], NavigationTargetResolver.prototype, "dispatcher", void 0);
    NavigationTargetResolver = __decorate([
        inversify_1.injectable()
    ], NavigationTargetResolver);
    return NavigationTargetResolver;
}());
exports.NavigationTargetResolver = NavigationTargetResolver;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js":
/*!*****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/rank/model.js ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEFAULT_RANK = 0;
function isRanked(arg) {
    return arg !== undefined && arg.rank !== undefined && typeof (arg.rank) === 'number';
}
exports.isRanked = isRanked;
function getRank(arg) {
    return isRanked(arg) ? arg.rank : exports.DEFAULT_RANK;
}
exports.getRank = getRank;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
exports.reconnectFeature = Symbol("reconnectFeature");
function isReconnectable(element) {
    return element instanceof sprotty_1.SRoutableElement && element.hasFeature(exports.reconnectFeature);
}
exports.isReconnectable = isReconnectable;
var ROUTING_HANDLE_SOURCE_INDEX = -2;
function isReconnectHandle(element) {
    return element !== undefined && element instanceof SReconnectHandle;
}
exports.isReconnectHandle = isReconnectHandle;
function addReconnectHandles(element) {
    removeReconnectHandles(element);
    createReconnectHandle(element, 'source', ROUTING_HANDLE_SOURCE_INDEX);
    createReconnectHandle(element, 'target', element.routingPoints.length);
}
exports.addReconnectHandles = addReconnectHandles;
function removeReconnectHandles(element) {
    element.removeAll(function (child) { return child instanceof SReconnectHandle; });
}
exports.removeReconnectHandles = removeReconnectHandles;
function isSourceRoutingHandle(edge, routingHandle) {
    return routingHandle.pointIndex === ROUTING_HANDLE_SOURCE_INDEX;
}
exports.isSourceRoutingHandle = isSourceRoutingHandle;
function isTargetRoutingHandle(edge, routingHandle) {
    return routingHandle.pointIndex === edge.routingPoints.length;
}
exports.isTargetRoutingHandle = isTargetRoutingHandle;
function createReconnectHandle(edge, kind, routingPointIndex) {
    var handle = new SReconnectHandle();
    handle.kind = kind;
    handle.pointIndex = routingPointIndex;
    handle.type = 'routing-point';
    if (kind === 'target' && edge.id === sprotty_1.edgeInProgressID) {
        handle.id = sprotty_1.edgeInProgressTargetHandleID;
    }
    edge.add(handle);
    return handle;
}
exports.createReconnectHandle = createReconnectHandle;
var SReconnectHandle = /** @class */ (function (_super) {
    __extends(SReconnectHandle, _super);
    function SReconnectHandle() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SReconnectHandle.prototype.hasFeature = function (feature) {
        return feature !== sprotty_1.selectFeature && _super.prototype.hasFeature.call(this, feature);
    };
    return SReconnectHandle;
}(sprotty_1.SRoutingHandle));
exports.SReconnectHandle = SReconnectHandle;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/save/di.config.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/save/di.config.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var save_1 = __webpack_require__(/*! ./save */ "../../../node_modules/@eclipse-glsp/client/lib/features/save/save.js");
/**
 * This module is not required the diagram is deployed in Theia with the `GLSPDiagramWidget`
 * but only intended to be used in a standalone deployment of GLSP.
 */
var saveModule = new inversify_1.ContainerModule(function (bind) {
    bind(sprotty_1.TYPES.KeyListener).to(save_1.SaveModelKeyboardListener);
});
exports.default = saveModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/save/model.js":
/*!*****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/save/model.js ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.saveFeature = Symbol.for('saveFeature');
function isSaveable(element) {
    return element.hasFeature(exports.saveFeature);
}
exports.isSaveable = isSaveable;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/save/save.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/save/save.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var SaveModelAction = /** @class */ (function () {
    function SaveModelAction() {
        this.kind = SaveModelAction.KIND;
    }
    SaveModelAction.KIND = "saveModel";
    return SaveModelAction;
}());
exports.SaveModelAction = SaveModelAction;
var SaveModelKeyboardListener = /** @class */ (function (_super) {
    __extends(SaveModelKeyboardListener, _super);
    function SaveModelKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SaveModelKeyboardListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyS', 'ctrlCmd')) {
            return [new SaveModelAction()];
        }
        return [];
    };
    return SaveModelKeyboardListener;
}(sprotty_1.KeyListener));
exports.SaveModelKeyboardListener = SaveModelKeyboardListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/select/action-definitions.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/select/action-definitions.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var selection_service_1 = __webpack_require__(/*! ./selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var SelectFeedbackAction = /** @class */ (function () {
    function SelectFeedbackAction(selectedElementsIDs, deselectedElementsIDs) {
        if (selectedElementsIDs === void 0) { selectedElementsIDs = []; }
        if (deselectedElementsIDs === void 0) { deselectedElementsIDs = []; }
        this.selectedElementsIDs = selectedElementsIDs;
        this.deselectedElementsIDs = deselectedElementsIDs;
        this.kind = SelectFeedbackCommand.KIND;
    }
    return SelectFeedbackAction;
}());
exports.SelectFeedbackAction = SelectFeedbackAction;
var SelectAllFeedbackAction = /** @class */ (function () {
    /**
     * If `select` is true, all elements are selected, othewise they are deselected.
     */
    function SelectAllFeedbackAction(select) {
        if (select === void 0) { select = true; }
        this.select = select;
        this.kind = SelectAllFeedbackCommand.KIND;
    }
    return SelectAllFeedbackAction;
}());
exports.SelectAllFeedbackAction = SelectAllFeedbackAction;
var SelectFeedbackCommand = /** @class */ (function (_super) {
    __extends(SelectFeedbackCommand, _super);
    function SelectFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.sprottySelectCommand = new sprotty_1.SelectCommand(action);
        return _this;
    }
    SelectFeedbackCommand.prototype.execute = function (context) {
        return this.sprottySelectCommand.execute(context);
    };
    SelectFeedbackCommand.prototype.undo = function (context) {
        return this.sprottySelectCommand.undo(context);
    };
    SelectFeedbackCommand.prototype.redo = function (context) {
        return this.sprottySelectCommand.redo(context);
    };
    SelectFeedbackCommand.KIND = 'elementSelectedFeedback';
    SelectFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [SelectFeedbackAction])
    ], SelectFeedbackCommand);
    return SelectFeedbackCommand;
}(sprotty_1.Command));
exports.SelectFeedbackCommand = SelectFeedbackCommand;
var SelectAllFeedbackCommand = /** @class */ (function (_super) {
    __extends(SelectAllFeedbackCommand, _super);
    function SelectAllFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.sprottySelectAllCommand = new sprotty_1.SelectAllCommand(action);
        return _this;
    }
    SelectAllFeedbackCommand.prototype.execute = function (context) {
        return this.sprottySelectAllCommand.execute(context);
    };
    SelectAllFeedbackCommand.prototype.undo = function (context) {
        return this.sprottySelectAllCommand.undo(context);
    };
    SelectAllFeedbackCommand.prototype.redo = function (context) {
        return this.sprottySelectAllCommand.redo(context);
    };
    SelectAllFeedbackCommand.KIND = 'allSelectedFeedback';
    SelectAllFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [SelectAllFeedbackAction])
    ], SelectAllFeedbackCommand);
    return SelectAllFeedbackCommand;
}(sprotty_1.Command));
exports.SelectAllFeedbackCommand = SelectAllFeedbackCommand;
var SelectCommand = /** @class */ (function (_super) {
    __extends(SelectCommand, _super);
    function SelectCommand(action, selectionService) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selectionService = selectionService;
        _this.selected = [];
        _this.deselected = [];
        return _this;
    }
    SelectCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.selectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof sprotty_1.SChildElement && sprotty_1.isSelectable(element)) {
                _this.selected.push(element);
            }
        });
        this.action.deselectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof sprotty_1.SChildElement && sprotty_1.isSelectable(element)) {
                _this.deselected.push(element);
            }
        });
        return this.redo(context);
    };
    SelectCommand.prototype.undo = function (context) {
        var select = this.deselected.map(function (element) { return element.id; });
        var deselect = this.selected.map(function (element) { return element.id; });
        this.selectionService.updateSelection(context.root, select, deselect);
        return context.root;
    };
    SelectCommand.prototype.redo = function (context) {
        var select = this.selected.map(function (element) { return element.id; });
        var deselect = this.deselected.map(function (element) { return element.id; });
        this.selectionService.updateSelection(context.root, select, deselect);
        return context.root;
    };
    SelectCommand.KIND = sprotty_1.SelectCommand.KIND;
    SelectCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)), __param(1, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __metadata("design:paramtypes", [sprotty_1.SelectAction, selection_service_1.SelectionService])
    ], SelectCommand);
    return SelectCommand;
}(sprotty_1.Command));
exports.SelectCommand = SelectCommand;
var SelectAllCommand = /** @class */ (function (_super) {
    __extends(SelectAllCommand, _super);
    function SelectAllCommand(action, selectionService) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selectionService = selectionService;
        _this.previousSelection = new Map();
        return _this;
    }
    SelectAllCommand.prototype.execute = function (context) {
        return this.redo(context);
    };
    SelectAllCommand.prototype.undo = function (context) {
        var e_1, _a;
        var index = context.root.index;
        try {
            for (var _b = __values(this.previousSelection), _c = _b.next(); !_c.done; _c = _b.next()) {
                var previousState = _c.value;
                var element = index.getById(previousState[0]);
                if (element !== undefined && sprotty_1.isSelectable(element)) {
                    element.selected = previousState[1];
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return context.root;
    };
    SelectAllCommand.prototype.redo = function (context) {
        var selectables = [];
        this.selectAll(context.root, this.action.select, selectables);
        if (this.action.select) {
            this.selectionService.updateSelection(context.root, selectables, []);
        }
        else {
            this.selectionService.updateSelection(context.root, [], selectables);
        }
        return context.root;
    };
    SelectAllCommand.prototype.selectAll = function (element, newState, selected) {
        var e_2, _a;
        if (sprotty_1.isSelectable(element)) {
            this.previousSelection.set(element.id, element.selected);
            selected.push(element.id);
        }
        try {
            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                this.selectAll(child, newState, selected);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
    };
    SelectAllCommand.KIND = sprotty_1.SelectAllCommand.KIND;
    SelectAllCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)), __param(1, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __metadata("design:paramtypes", [sprotty_1.SelectAllAction, selection_service_1.SelectionService])
    ], SelectAllCommand);
    return SelectAllCommand;
}(sprotty_1.Command));
exports.SelectAllCommand = SelectAllCommand;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/select/di.config.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/select/di.config.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var action_definitions_1 = __webpack_require__(/*! ./action-definitions */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/action-definitions.js");
var select_mouse_listener_1 = __webpack_require__(/*! ./select-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js");
var selection_service_1 = __webpack_require__(/*! ./selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var glspSelectModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(selection_service_1.SelectionService).toSelf().inSingletonScope();
    bind(types_1.GLSP_TYPES.SelectionService).toService(selection_service_1.SelectionService);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, action_definitions_1.SelectCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, action_definitions_1.SelectAllCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, action_definitions_1.SelectFeedbackCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, action_definitions_1.SelectAllFeedbackCommand);
    bind(sprotty_1.TYPES.MouseListener).to(select_mouse_listener_1.RankedSelectMouseListener);
    bind(types_1.GLSP_TYPES.SModelRootListener).toService(selection_service_1.SelectionService);
});
exports.default = glspSelectModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js":
/*!***********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var model_1 = __webpack_require__(/*! ../rank/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js");
/**
 * Ranked select mouse listener that is executed before default mouse listeners when using the RankedMouseTool.
 * This ensures that default mouse listeners are working on a model that has selection changes already applied.
 */
var RankedSelectMouseListener = /** @class */ (function (_super) {
    __extends(RankedSelectMouseListener, _super);
    function RankedSelectMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.rank = model_1.DEFAULT_RANK - 1; /* we want to be executed before all default mouse listeners */
        return _this;
    }
    return RankedSelectMouseListener;
}(sprotty_1.SelectMouseListener));
exports.RankedSelectMouseListener = RankedSelectMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var array_utils_1 = __webpack_require__(/*! ../../utils/array-utils */ "../../../node_modules/@eclipse-glsp/client/lib/utils/array-utils.js");
var action_definitions_1 = __webpack_require__(/*! ./action-definitions */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/action-definitions.js");
var SelectionService = /** @class */ (function () {
    function SelectionService(selectionListeners) {
        if (selectionListeners === void 0) { selectionListeners = []; }
        this.selectionListeners = selectionListeners;
        this.selectedElementIDs = new Set();
    }
    SelectionService.prototype.register = function (selectionListener) {
        array_utils_1.distinctAdd(this.selectionListeners, selectionListener);
    };
    SelectionService.prototype.deregister = function (selectionListener) {
        array_utils_1.remove(this.selectionListeners, selectionListener);
    };
    SelectionService.prototype.modelRootChanged = function (root) {
        this.updateSelection(root, [], []);
    };
    SelectionService.prototype.updateSelection = function (root, select, deselect) {
        var e_1, _a, e_2, _b, e_3, _c;
        var _this = this;
        if (root === undefined && select.length === 0 && deselect.length === 0) {
            return;
        }
        var prevRoot = this.root;
        var prevSelectedElementIDs = new Set(this.selectedElementIDs);
        // update root
        this.root = root;
        // update selected element IDs and collect deselected elements
        // - select all elements that are not deselected at the same time (no-op)
        // - deselect all elements that are not selected at the same time (no-op) but was selected
        var toSelect = __spread(select).filter(function (selectId) { return deselect.indexOf(selectId) === -1; });
        var toDeselect = __spread(deselect).filter(function (deselectId) { return select.indexOf(deselectId) === -1 && _this.selectedElementIDs.has(deselectId); });
        try {
            for (var toDeselect_1 = __values(toDeselect), toDeselect_1_1 = toDeselect_1.next(); !toDeselect_1_1.done; toDeselect_1_1 = toDeselect_1.next()) {
                var id = toDeselect_1_1.value;
                this.selectedElementIDs.delete(id);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (toDeselect_1_1 && !toDeselect_1_1.done && (_a = toDeselect_1.return)) _a.call(toDeselect_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var toSelect_1 = __values(toSelect), toSelect_1_1 = toSelect_1.next(); !toSelect_1_1.done; toSelect_1_1 = toSelect_1.next()) {
                var id = toSelect_1_1.value;
                this.selectedElementIDs.add(id);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (toSelect_1_1 && !toSelect_1_1.done && (_b = toSelect_1.return)) _b.call(toSelect_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        var deselectedElementIDs = new Set(toDeselect);
        try {
            // see if selected elements still exist in the updated root
            for (var _d = __values(this.selectedElementIDs), _e = _d.next(); !_e.done; _e = _d.next()) {
                var id = _e.value;
                var element = root.index.getById(id);
                if (element === undefined) {
                    this.selectedElementIDs.delete(id);
                    if (prevRoot !== undefined && prevRoot.index.getById(id)) {
                        deselectedElementIDs.add(id);
                    }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_c = _d.return)) _c.call(_d);
            }
            finally { if (e_3) throw e_3.error; }
        }
        // only send out changes if there actually are changes, i.e., the root or the selected elements changed
        var selectionChanged = prevSelectedElementIDs.size !== this.selectedElementIDs.size || !__spread(prevSelectedElementIDs).every(function (value) { return _this.selectedElementIDs.has(value); });
        if (selectionChanged) {
            // aggregate to feedback action handling all elements as only the last feedback is restored
            this.dispatchFeedback([new action_definitions_1.SelectFeedbackAction(__spread(this.selectedElementIDs), __spread(deselectedElementIDs))]);
        }
        var rootChanged = prevRoot !== root;
        if (rootChanged || selectionChanged) {
            // notify listeners after the feedback action
            this.notifyListeners(this.root, this.selectedElementIDs);
        }
    };
    SelectionService.prototype.dispatchFeedback = function (actions) {
        this.feedbackDispatcher.registerFeedback(this, actions);
    };
    SelectionService.prototype.notifyListeners = function (root, selectedElementIDs) {
        this.selectionListeners.forEach(function (listener) { return listener.selectionChanged(root, Array.from(selectedElementIDs)); });
    };
    SelectionService.prototype.getModelRoot = function () {
        return this.root;
    };
    SelectionService.prototype.getSelectedElements = function () {
        return Array.from(this.root.index.all().filter(sprotty_1.isSelected));
    };
    /**
     * QUERY METHODS
     */
    SelectionService.prototype.getSelectedElementIDs = function () {
        return this.selectedElementIDs;
    };
    SelectionService.prototype.hasSelectedElements = function () {
        return this.selectedElementIDs.size > 0;
    };
    SelectionService.prototype.isSingleSelection = function () {
        return this.selectedElementIDs.size === 1;
    };
    SelectionService.prototype.isMultiSelection = function () {
        return this.selectedElementIDs.size > 1;
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher),
        __metadata("design:type", Object)
    ], SelectionService.prototype, "feedbackDispatcher", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], SelectionService.prototype, "logger", void 0);
    SelectionService = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.GLSP_TYPES.SelectionListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], SelectionService);
    return SelectionService;
}());
exports.SelectionService = SelectionService;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js":
/*!************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js ***!
  \************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
var movement_restrictor_1 = __webpack_require__(/*! ../change-bounds/movement-restrictor */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ShowChangeBoundsToolResizeFeedbackAction = /** @class */ (function () {
    function ShowChangeBoundsToolResizeFeedbackAction(elementId) {
        this.elementId = elementId;
        this.kind = ShowChangeBoundsToolResizeFeedbackCommand.KIND;
    }
    return ShowChangeBoundsToolResizeFeedbackAction;
}());
exports.ShowChangeBoundsToolResizeFeedbackAction = ShowChangeBoundsToolResizeFeedbackAction;
var HideChangeBoundsToolResizeFeedbackAction = /** @class */ (function () {
    function HideChangeBoundsToolResizeFeedbackAction() {
        this.kind = HideChangeBoundsToolResizeFeedbackCommand.KIND;
    }
    return HideChangeBoundsToolResizeFeedbackAction;
}());
exports.HideChangeBoundsToolResizeFeedbackAction = HideChangeBoundsToolResizeFeedbackAction;
var ShowChangeBoundsToolResizeFeedbackCommand = /** @class */ (function (_super) {
    __extends(ShowChangeBoundsToolResizeFeedbackCommand, _super);
    function ShowChangeBoundsToolResizeFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ShowChangeBoundsToolResizeFeedbackCommand.prototype.execute = function (context) {
        var index = context.root.index;
        index
            .all()
            .filter(model_1.isResizable)
            .forEach(model_1.removeResizeHandles);
        if (smodel_util_1.isNotUndefined(this.action.elementId)) {
            var resizeElement = index.getById(this.action.elementId);
            if (smodel_util_1.isNotUndefined(resizeElement) && model_1.isResizable(resizeElement)) {
                model_1.addResizeHandles(resizeElement);
            }
        }
        return context.root;
    };
    ShowChangeBoundsToolResizeFeedbackCommand.KIND = "showChangeBoundsToolResizeFeedback";
    ShowChangeBoundsToolResizeFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [ShowChangeBoundsToolResizeFeedbackAction])
    ], ShowChangeBoundsToolResizeFeedbackCommand);
    return ShowChangeBoundsToolResizeFeedbackCommand;
}(model_2.FeedbackCommand));
exports.ShowChangeBoundsToolResizeFeedbackCommand = ShowChangeBoundsToolResizeFeedbackCommand;
var HideChangeBoundsToolResizeFeedbackCommand = /** @class */ (function (_super) {
    __extends(HideChangeBoundsToolResizeFeedbackCommand, _super);
    function HideChangeBoundsToolResizeFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    HideChangeBoundsToolResizeFeedbackCommand.prototype.execute = function (context) {
        var index = context.root.index;
        index
            .all()
            .filter(model_1.isResizable)
            .forEach(model_1.removeResizeHandles);
        return context.root;
    };
    HideChangeBoundsToolResizeFeedbackCommand.KIND = "hideChangeBoundsToolResizeFeedback";
    HideChangeBoundsToolResizeFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [HideChangeBoundsToolResizeFeedbackAction])
    ], HideChangeBoundsToolResizeFeedbackCommand);
    return HideChangeBoundsToolResizeFeedbackCommand;
}(model_2.FeedbackCommand));
exports.HideChangeBoundsToolResizeFeedbackCommand = HideChangeBoundsToolResizeFeedbackCommand;
/**
 * This mouse listener provides visual feedback for moving by sending client-side
 * `MoveAction`s while elements are selected and dragged. This will also update
 * their bounds, which is important, as it is not only required for rendering
 * the visual feedback but also the basis for sending the change to the server
 * (see also `tools/MoveTool`).
 */
var FeedbackMoveMouseListener = /** @class */ (function (_super) {
    __extends(FeedbackMoveMouseListener, _super);
    function FeedbackMoveMouseListener(tool) {
        var _this = _super.call(this) || this;
        _this.tool = tool;
        _this.hasDragged = false;
        _this.elementId2startPos = new Map();
        return _this;
    }
    FeedbackMoveMouseListener.prototype.mouseDown = function (target, event) {
        if (event.button === 0 && !(target instanceof model_1.SResizeHandle)) {
            var moveable = sprotty_1.findParentByFeature(target, sprotty_1.isMoveable);
            if (moveable !== undefined) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
        }
        return [];
    };
    FeedbackMoveMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            var moveAction = this.getElementMoves(target, event, false);
            if (moveAction)
                result.push(moveAction);
        }
        return result;
    };
    FeedbackMoveMouseListener.prototype.collectStartPositions = function (root) {
        var _this = this;
        root.index
            .all()
            .filter(function (element) { return sprotty_1.isSelectable(element) && element.selected; })
            .forEach(function (element) {
            if (sprotty_1.isMoveable(element)) {
                _this.elementId2startPos.set(element.id, element.position);
            }
        });
    };
    FeedbackMoveMouseListener.prototype.getElementMoves = function (target, event, isFinished) {
        var _this = this;
        if (!this.startDragPosition)
            return undefined;
        var elementMoves = [];
        var viewport = sprotty_1.findParentByFeature(target, sprotty_1.isViewport);
        var zoom = viewport ? viewport.zoom : 1;
        var delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach(function (startPosition, elementId) {
            var element = target.root.index.getById(elementId);
            if (element) {
                var toPosition = _this.snap({
                    x: startPosition.x + delta.x,
                    y: startPosition.y + delta.y
                }, element, !event.shiftKey);
                if (sprotty_1.isMoveable(element)) {
                    toPosition = _this.validateMove(startPosition, toPosition, element, isFinished);
                    elementMoves.push({
                        elementId: element.id,
                        fromPosition: {
                            x: element.position.x,
                            y: element.position.y
                        },
                        toPosition: toPosition
                    });
                }
            }
        });
        if (elementMoves.length > 0)
            return new sprotty_1.MoveAction(elementMoves, false, isFinished);
        else
            return undefined;
    };
    FeedbackMoveMouseListener.prototype.validateMove = function (startPostion, toPosition, element, isFinished) {
        var newPosition = toPosition;
        if (this.tool.movementRestrictor) {
            var valid = this.tool.movementRestrictor.validate(toPosition, element);
            var action = void 0;
            if (!valid) {
                action = movement_restrictor_1.createMovementRestrictionFeedback(element, this.tool.movementRestrictor);
                if (isFinished) {
                    newPosition = startPostion;
                }
            }
            else {
                action = movement_restrictor_1.removeMovementRestrictionFeedback(element, this.tool.movementRestrictor);
            }
            this.tool.dispatchFeedback(this, [action]);
        }
        return newPosition;
    };
    FeedbackMoveMouseListener.prototype.snap = function (position, element, isSnap) {
        if (isSnap && this.tool.snapper)
            return this.tool.snapper.snap(position, element);
        else
            return position;
    };
    FeedbackMoveMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof sprotty_1.SModelRoot && event.buttons === 0)
            this.mouseUp(target, event);
        return [];
    };
    FeedbackMoveMouseListener.prototype.mouseUp = function (target, event) {
        var result = [];
        if (this.startDragPosition) {
            var moveAction = this.getElementMoves(target, event, true);
            if (moveAction) {
                result.push(moveAction);
            }
            if (this.tool.movementRestrictor) {
                result.push(movement_restrictor_1.removeMovementRestrictionFeedback(target, this.tool.movementRestrictor));
            }
        }
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    };
    FeedbackMoveMouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    return FeedbackMoveMouseListener;
}(sprotty_1.MouseListener));
exports.FeedbackMoveMouseListener = FeedbackMoveMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js":
/*!*******************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js ***!
  \*******************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var DrawFeedbackEdgeAction = /** @class */ (function () {
    function DrawFeedbackEdgeAction(elementTypeId, sourceId, edgeSchema) {
        this.elementTypeId = elementTypeId;
        this.sourceId = sourceId;
        this.edgeSchema = edgeSchema;
        this.kind = DrawFeedbackEdgeCommand.KIND;
    }
    return DrawFeedbackEdgeAction;
}());
exports.DrawFeedbackEdgeAction = DrawFeedbackEdgeAction;
var DrawFeedbackEdgeCommand = /** @class */ (function (_super) {
    __extends(DrawFeedbackEdgeCommand, _super);
    function DrawFeedbackEdgeCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    DrawFeedbackEdgeCommand.prototype.execute = function (context) {
        var feedbackEdgeSchema = this.action.edgeSchema ? this.action.edgeSchema : exports.defaultFeedbackEdgeSchema;
        drawFeedbackEdge(context, this.action.sourceId, this.action.elementTypeId, feedbackEdgeSchema);
        return context.root;
    };
    DrawFeedbackEdgeCommand.KIND = 'drawFeedbackEdge';
    DrawFeedbackEdgeCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [DrawFeedbackEdgeAction])
    ], DrawFeedbackEdgeCommand);
    return DrawFeedbackEdgeCommand;
}(model_1.FeedbackCommand));
exports.DrawFeedbackEdgeCommand = DrawFeedbackEdgeCommand;
var RemoveFeedbackEdgeAction = /** @class */ (function () {
    function RemoveFeedbackEdgeAction() {
        this.kind = RemoveFeedbackEdgeCommand.KIND;
    }
    return RemoveFeedbackEdgeAction;
}());
exports.RemoveFeedbackEdgeAction = RemoveFeedbackEdgeAction;
var RemoveFeedbackEdgeCommand = /** @class */ (function (_super) {
    __extends(RemoveFeedbackEdgeCommand, _super);
    function RemoveFeedbackEdgeCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RemoveFeedbackEdgeCommand.prototype.execute = function (context) {
        removeFeedbackEdge(context.root);
        return context.root;
    };
    RemoveFeedbackEdgeCommand.KIND = 'removeFeedbackEdgeCommand';
    RemoveFeedbackEdgeCommand = __decorate([
        inversify_1.injectable()
    ], RemoveFeedbackEdgeCommand);
    return RemoveFeedbackEdgeCommand;
}(model_1.FeedbackCommand));
exports.RemoveFeedbackEdgeCommand = RemoveFeedbackEdgeCommand;
var FeedbackEdgeEnd = /** @class */ (function (_super) {
    __extends(FeedbackEdgeEnd, _super);
    function FeedbackEdgeEnd(sourceId, elementTypeId, feedbackEdge) {
        if (feedbackEdge === void 0) { feedbackEdge = undefined; }
        var _this = _super.call(this) || this;
        _this.sourceId = sourceId;
        _this.elementTypeId = elementTypeId;
        _this.feedbackEdge = feedbackEdge;
        _this.type = FeedbackEdgeEnd.TYPE;
        return _this;
    }
    FeedbackEdgeEnd.TYPE = 'feedback-edge-end';
    return FeedbackEdgeEnd;
}(sprotty_1.SDanglingAnchor));
exports.FeedbackEdgeEnd = FeedbackEdgeEnd;
var FeedbackEdgeEndMovingMouseListener = /** @class */ (function (_super) {
    __extends(FeedbackEdgeEndMovingMouseListener, _super);
    function FeedbackEdgeEndMovingMouseListener(anchorRegistry) {
        var _this = _super.call(this) || this;
        _this.anchorRegistry = anchorRegistry;
        return _this;
    }
    FeedbackEdgeEndMovingMouseListener.prototype.mouseMove = function (target, event) {
        var root = target.root;
        var edgeEnd = root.index.getById(feedbackEdgeEndId(root));
        if (!(edgeEnd instanceof FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {
            return [];
        }
        var edge = edgeEnd.feedbackEdge;
        var position = viewpoint_util_1.getAbsolutePosition(edgeEnd, event);
        var endAtMousePosition = sprotty_1.findChildrenAtPosition(target.root, position)
            .find(function (e) { return sprotty_1.isConnectable(e) && e.canConnect(edge, 'target'); });
        if (endAtMousePosition instanceof sprotty_1.SConnectableElement && edge.source && sprotty_1.isBoundsAware(edge.source)) {
            var anchorComputer = this.anchorRegistry.get(sprotty_1.PolylineEdgeRouter.KIND, endAtMousePosition.anchorKind);
            var anchor = anchorComputer.getAnchor(endAtMousePosition, sprotty_1.center(edge.source.bounds));
            if (sprotty_1.euclideanDistance(anchor, edgeEnd.position) > 1) {
                return [new sprotty_1.MoveAction([{ elementId: edgeEnd.id, toPosition: anchor }], false)];
            }
        }
        else {
            return [new sprotty_1.MoveAction([{ elementId: edgeEnd.id, toPosition: position }], false)];
        }
        return [];
    };
    return FeedbackEdgeEndMovingMouseListener;
}(sprotty_1.MouseListener));
exports.FeedbackEdgeEndMovingMouseListener = FeedbackEdgeEndMovingMouseListener;
function feedbackEdgeId(root) {
    return root.id + '_feedback_edge';
}
exports.feedbackEdgeId = feedbackEdgeId;
function feedbackEdgeEndId(root) {
    return root.id + '_feedback_anchor';
}
exports.feedbackEdgeEndId = feedbackEdgeEndId;
exports.defaultFeedbackEdgeSchema = {
    cssClasses: ["feedback-edge"],
    opacity: 0.3
};
function drawFeedbackEdge(context, sourceId, elementTypeId, feedbackEdgeSchema) {
    var root = context.root;
    var sourceChild = root.index.getById(sourceId);
    if (!sourceChild) {
        return;
    }
    var source = sprotty_1.findParentByFeature(sourceChild, sprotty_1.isConnectable);
    if (!source || !sprotty_1.isBoundsAware(source)) {
        return;
    }
    var edgeEnd = new FeedbackEdgeEnd(source.id, elementTypeId);
    edgeEnd.id = feedbackEdgeEndId(root);
    edgeEnd.position = viewpoint_util_1.toAbsolutePosition(source);
    feedbackEdgeSchema.id = feedbackEdgeId(root);
    feedbackEdgeSchema.type = elementTypeId;
    feedbackEdgeSchema.sourceId = source.id;
    feedbackEdgeSchema.targetId = edgeEnd.id;
    var feedbackEdge = context.modelFactory.createElement(feedbackEdgeSchema);
    if (smodel_util_1.isRoutable(feedbackEdge)) {
        edgeEnd.feedbackEdge = feedbackEdge;
        root.add(edgeEnd);
        root.add(feedbackEdge);
    }
}
exports.drawFeedbackEdge = drawFeedbackEdge;
function removeFeedbackEdge(root) {
    var feedbackEdge = root.index.getById(feedbackEdgeId(root));
    var feedbackEdgeEnd = root.index.getById(feedbackEdgeEndId(root));
    if (feedbackEdge instanceof sprotty_1.SChildElement)
        root.remove(feedbackEdge);
    if (feedbackEdgeEnd instanceof sprotty_1.SChildElement)
        root.remove(feedbackEdgeEnd);
}
exports.removeFeedbackEdge = removeFeedbackEdge;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js":
/*!*********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js ***!
  \*********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ModifyCSSFeedbackAction = /** @class */ (function () {
    function ModifyCSSFeedbackAction(elements, addClasses, removeClasses) {
        this.elements = elements;
        this.addClasses = addClasses;
        this.removeClasses = removeClasses;
        this.kind = ModifyCssFeedbackCommand.KIND;
    }
    return ModifyCSSFeedbackAction;
}());
exports.ModifyCSSFeedbackAction = ModifyCSSFeedbackAction;
var ModifyCssFeedbackCommand = /** @class */ (function (_super) {
    __extends(ModifyCssFeedbackCommand, _super);
    function ModifyCssFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ModifyCssFeedbackCommand.prototype.execute = function (context) {
        var _this = this;
        var elements = [];
        if (this.action.elements) {
            elements.push.apply(elements, __spread(this.action.elements));
        }
        else {
            elements.push(context.root);
        }
        elements.forEach(function (e) {
            if (_this.action.removeClasses) {
                smodel_util_1.removeCssClasses(e, _this.action.removeClasses);
            }
            if (_this.action.addClasses) {
                smodel_util_1.addCssClasses(e, _this.action.addClasses);
            }
        });
        return context.root;
    };
    ModifyCssFeedbackCommand.KIND = 'modifyCSSFeedback';
    ModifyCssFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [ModifyCSSFeedbackAction])
    ], ModifyCssFeedbackCommand);
    return ModifyCssFeedbackCommand;
}(model_1.FeedbackCommand));
exports.ModifyCssFeedbackCommand = ModifyCssFeedbackCommand;
var CursorCSS;
(function (CursorCSS) {
    CursorCSS["DEFAULT"] = "default-mode";
    CursorCSS["OVERLAP_FORBIDDEN"] = "overlap-forbidden-mode";
    CursorCSS["NODE_CREATION"] = "node-creation-mode";
    CursorCSS["EDGE_CREATION_SOURCE"] = "edge-creation-select-source-mode";
    CursorCSS["EDGE_CREATION_TARGET"] = "edge-creation-select-target-mode";
    CursorCSS["EDGE_RECONNECT"] = "edge-reconnect-select-target-mode";
    CursorCSS["OPERATION_NOT_ALLOWED"] = "edge-modification-not-allowed-mode";
    CursorCSS["ELEMENT_DELETION"] = "element-deletion-mode";
    CursorCSS["RESIZE"] = "resize-mode";
})(CursorCSS = exports.CursorCSS || (exports.CursorCSS = {}));
function cursorFeedbackAction(cursorCss) {
    var addCss = [];
    if (cursorCss) {
        addCss.push(cursorCss);
    }
    return new ModifyCSSFeedbackAction(undefined, addCss, Object.values(CursorCSS));
}
exports.cursorFeedbackAction = cursorFeedbackAction;
function applyCssClasses(element) {
    var classes = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        classes[_i - 1] = arguments[_i];
    }
    return new ModifyCSSFeedbackAction([element], classes, []);
}
exports.applyCssClasses = applyCssClasses;
function deleteCssClasses(element) {
    var classes = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        classes[_i - 1] = arguments[_i];
    }
    return new ModifyCSSFeedbackAction([element], [], classes);
}
exports.deleteCssClasses = deleteCssClasses;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js":
/*!******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
var change_bounds_tool_feedback_1 = __webpack_require__(/*! ./change-bounds-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js");
var creation_tool_feedback_1 = __webpack_require__(/*! ./creation-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
var css_feedback_1 = __webpack_require__(/*! ./css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
var edge_edit_tool_feedback_1 = __webpack_require__(/*! ./edge-edit-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js");
var feedback_action_dispatcher_1 = __webpack_require__(/*! ./feedback-action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js");
var view_1 = __webpack_require__(/*! ./view */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js");
var toolFeedbackModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.GLSP_TYPES.IFeedbackActionDispatcher).to(feedback_action_dispatcher_1.FeedbackActionDispatcher).inSingletonScope();
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, css_feedback_1.ModifyCssFeedbackCommand);
    // create node and edge tool feedback
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, creation_tool_feedback_1.DrawFeedbackEdgeCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, creation_tool_feedback_1.RemoveFeedbackEdgeCommand);
    sprotty_1.configureView({ bind: bind, isBound: isBound }, creation_tool_feedback_1.FeedbackEdgeEnd.TYPE, view_1.FeedbackEdgeEndView);
    // move tool feedback: we use sprotties MoveCommand as client-side visual feedback
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, sprotty_1.MoveCommand);
    // resize tool feedback
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackCommand);
    sprotty_1.configureView({ bind: bind, isBound: isBound }, model_1.SResizeHandle.TYPE, view_1.SResizeHandleView);
    // reconnect edge tool feedback
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, edge_edit_tool_feedback_1.ShowEdgeReconnectHandlesFeedbackCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, edge_edit_tool_feedback_1.DrawFeedbackEdgeSourceCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, edge_edit_tool_feedback_1.SwitchRoutingModeCommand);
    bind(sprotty_1.TYPES.IVNodePostprocessor).to(sprotty_1.LocationPostprocessor);
    bind(sprotty_1.TYPES.HiddenVNodePostprocessor).to(sprotty_1.LocationPostprocessor);
});
exports.default = toolFeedbackModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js":
/*!********************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js ***!
  \********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
var model_1 = __webpack_require__(/*! ../reconnect/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
var creation_tool_feedback_1 = __webpack_require__(/*! ./creation-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
/**
 * RECONNECT HANDLES FEEDBACK
 */
var ShowEdgeReconnectHandlesFeedbackAction = /** @class */ (function () {
    function ShowEdgeReconnectHandlesFeedbackAction(elementId) {
        this.elementId = elementId;
        this.kind = ShowEdgeReconnectHandlesFeedbackCommand.KIND;
    }
    return ShowEdgeReconnectHandlesFeedbackAction;
}());
exports.ShowEdgeReconnectHandlesFeedbackAction = ShowEdgeReconnectHandlesFeedbackAction;
var HideEdgeReconnectHandlesFeedbackAction = /** @class */ (function () {
    function HideEdgeReconnectHandlesFeedbackAction() {
        this.kind = HideEdgeReconnectHandlesFeedbackCommand.KIND;
    }
    return HideEdgeReconnectHandlesFeedbackAction;
}());
exports.HideEdgeReconnectHandlesFeedbackAction = HideEdgeReconnectHandlesFeedbackAction;
var ShowEdgeReconnectHandlesFeedbackCommand = /** @class */ (function (_super) {
    __extends(ShowEdgeReconnectHandlesFeedbackCommand, _super);
    function ShowEdgeReconnectHandlesFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ShowEdgeReconnectHandlesFeedbackCommand.prototype.execute = function (context) {
        var index = context.root.index;
        index.all().filter(smodel_util_1.isRoutable).forEach(model_1.removeReconnectHandles);
        if (smodel_util_1.isNotUndefined(this.action.elementId)) {
            var routableElement = index.getById(this.action.elementId);
            if (smodel_util_1.isNotUndefined(routableElement) && smodel_util_1.isRoutable(routableElement)) {
                model_1.addReconnectHandles(routableElement);
            }
        }
        return context.root;
    };
    ShowEdgeReconnectHandlesFeedbackCommand.KIND = 'showReconnectHandlesFeedback';
    ShowEdgeReconnectHandlesFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [ShowEdgeReconnectHandlesFeedbackAction])
    ], ShowEdgeReconnectHandlesFeedbackCommand);
    return ShowEdgeReconnectHandlesFeedbackCommand;
}(model_2.FeedbackCommand));
exports.ShowEdgeReconnectHandlesFeedbackCommand = ShowEdgeReconnectHandlesFeedbackCommand;
var HideEdgeReconnectHandlesFeedbackCommand = /** @class */ (function (_super) {
    __extends(HideEdgeReconnectHandlesFeedbackCommand, _super);
    function HideEdgeReconnectHandlesFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    HideEdgeReconnectHandlesFeedbackCommand.prototype.execute = function (context) {
        var index = context.root.index;
        index.all().filter(smodel_util_1.isRoutable).forEach(model_1.removeReconnectHandles);
        return context.root;
    };
    HideEdgeReconnectHandlesFeedbackCommand.KIND = 'hideReconnectHandlesFeedback';
    HideEdgeReconnectHandlesFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [HideEdgeReconnectHandlesFeedbackAction])
    ], HideEdgeReconnectHandlesFeedbackCommand);
    return HideEdgeReconnectHandlesFeedbackCommand;
}(model_2.FeedbackCommand));
exports.HideEdgeReconnectHandlesFeedbackCommand = HideEdgeReconnectHandlesFeedbackCommand;
/**
 * ROUTING FEEDBACK
 */
var SwitchRoutingModeAction = /** @class */ (function (_super) {
    __extends(SwitchRoutingModeAction, _super);
    function SwitchRoutingModeAction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.kind = SwitchRoutingModeCommand.KIND;
        return _this;
    }
    return SwitchRoutingModeAction;
}(sprotty_1.SwitchEditModeAction));
exports.SwitchRoutingModeAction = SwitchRoutingModeAction;
var SwitchRoutingModeCommand = /** @class */ (function (_super) {
    __extends(SwitchRoutingModeCommand, _super);
    function SwitchRoutingModeCommand(action) {
        return _super.call(this, action) || this;
    }
    SwitchRoutingModeCommand.KIND = "switchRoutingMode";
    SwitchRoutingModeCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [SwitchRoutingModeAction])
    ], SwitchRoutingModeCommand);
    return SwitchRoutingModeCommand;
}(sprotty_1.SwitchEditModeCommand));
exports.SwitchRoutingModeCommand = SwitchRoutingModeCommand;
/**
 * SOURCE AND TARGET EDGE FEEDBACK
 */
var DrawFeedbackEdgeSourceAction = /** @class */ (function () {
    function DrawFeedbackEdgeSourceAction(elementTypeId, targetId) {
        this.elementTypeId = elementTypeId;
        this.targetId = targetId;
        this.kind = DrawFeedbackEdgeSourceCommand.KIND;
    }
    return DrawFeedbackEdgeSourceAction;
}());
exports.DrawFeedbackEdgeSourceAction = DrawFeedbackEdgeSourceAction;
var DrawFeedbackEdgeSourceCommand = /** @class */ (function (_super) {
    __extends(DrawFeedbackEdgeSourceCommand, _super);
    function DrawFeedbackEdgeSourceCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    DrawFeedbackEdgeSourceCommand.prototype.execute = function (context) {
        drawFeedbackEdgeSource(context, this.action.targetId, this.action.elementTypeId);
        return context.root;
    };
    DrawFeedbackEdgeSourceCommand.KIND = 'drawFeedbackEdgeSource';
    DrawFeedbackEdgeSourceCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [DrawFeedbackEdgeSourceAction])
    ], DrawFeedbackEdgeSourceCommand);
    return DrawFeedbackEdgeSourceCommand;
}(model_2.FeedbackCommand));
exports.DrawFeedbackEdgeSourceCommand = DrawFeedbackEdgeSourceCommand;
/**
 * SOURCE AND TARGET MOUSE MOVE LISTENER
 */
var FeedbackEdgeTargetMovingMouseListener = /** @class */ (function (_super) {
    __extends(FeedbackEdgeTargetMovingMouseListener, _super);
    function FeedbackEdgeTargetMovingMouseListener(anchorRegistry) {
        var _this = _super.call(this, anchorRegistry) || this;
        _this.anchorRegistry = anchorRegistry;
        return _this;
    }
    return FeedbackEdgeTargetMovingMouseListener;
}(creation_tool_feedback_1.FeedbackEdgeEndMovingMouseListener));
exports.FeedbackEdgeTargetMovingMouseListener = FeedbackEdgeTargetMovingMouseListener;
var FeedbackEdgeSourceMovingMouseListener = /** @class */ (function (_super) {
    __extends(FeedbackEdgeSourceMovingMouseListener, _super);
    function FeedbackEdgeSourceMovingMouseListener(anchorRegistry) {
        var _this = _super.call(this) || this;
        _this.anchorRegistry = anchorRegistry;
        return _this;
    }
    FeedbackEdgeSourceMovingMouseListener.prototype.mouseMove = function (target, event) {
        var root = target.root;
        var edgeEnd = root.index.getById(creation_tool_feedback_1.feedbackEdgeEndId(root));
        if (!(edgeEnd instanceof creation_tool_feedback_1.FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {
            return [];
        }
        var edge = edgeEnd.feedbackEdge;
        var position = viewpoint_util_1.getAbsolutePosition(edgeEnd, event);
        var endAtMousePosition = sprotty_1.findChildrenAtPosition(target.root, position)
            .find(function (e) { return sprotty_1.isConnectable(e) && e.canConnect(edge, 'source'); });
        if (endAtMousePosition instanceof sprotty_1.SConnectableElement && edge.target && sprotty_1.isBoundsAware(edge.target)) {
            var anchorComputer = this.anchorRegistry.get(sprotty_1.PolylineEdgeRouter.KIND, endAtMousePosition.anchorKind);
            var anchor = anchorComputer.getAnchor(endAtMousePosition, sprotty_1.center(edge.target.bounds));
            if (sprotty_1.euclideanDistance(anchor, edgeEnd.position) > 1) {
                return [new sprotty_1.MoveAction([{ elementId: edgeEnd.id, toPosition: anchor }], false)];
            }
        }
        else {
            return [new sprotty_1.MoveAction([{ elementId: edgeEnd.id, toPosition: position }], false)];
        }
        return [];
    };
    return FeedbackEdgeSourceMovingMouseListener;
}(sprotty_1.MouseListener));
exports.FeedbackEdgeSourceMovingMouseListener = FeedbackEdgeSourceMovingMouseListener;
var FeedbackEdgeRouteMovingMouseListener = /** @class */ (function (_super) {
    __extends(FeedbackEdgeRouteMovingMouseListener, _super);
    function FeedbackEdgeRouteMovingMouseListener(edgeRouterRegistry) {
        var _this = _super.call(this) || this;
        _this.edgeRouterRegistry = edgeRouterRegistry;
        _this.hasDragged = false;
        return _this;
    }
    FeedbackEdgeRouteMovingMouseListener.prototype.mouseDown = function (target, event) {
        var result = [];
        if (event.button === 0) {
            var routingHandle = sprotty_1.findParentByFeature(target, smodel_util_1.isRoutingHandle);
            if (routingHandle !== undefined) {
                result.push(new SwitchRoutingModeAction([target.id], []));
                this.lastDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.lastDragPosition = undefined;
            }
            this.hasDragged = false;
        }
        return result;
    };
    FeedbackEdgeRouteMovingMouseListener.prototype.mouseMove = function (target, event) {
        var _this = this;
        var result = [];
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.lastDragPosition) {
            var viewport = sprotty_1.findParentByFeature(target, sprotty_1.isViewport);
            this.hasDragged = true;
            var zoom = viewport ? viewport.zoom : 1;
            var dx_1 = (event.pageX - this.lastDragPosition.x) / zoom;
            var dy_1 = (event.pageY - this.lastDragPosition.y) / zoom;
            var handleMoves_1 = [];
            target.root.index.all()
                .filter(function (element) { return sprotty_1.isSelected(element); })
                .forEach(function (element) {
                if (smodel_util_1.isRoutingHandle(element)) {
                    var point = _this.getHandlePosition(element);
                    if (point !== undefined) {
                        handleMoves_1.push({
                            elementId: element.id,
                            fromPosition: point,
                            toPosition: {
                                x: point.x + dx_1,
                                y: point.y + dy_1
                            }
                        });
                    }
                }
            });
            this.lastDragPosition = { x: event.pageX, y: event.pageY };
            if (handleMoves_1.length > 0)
                result.push(new sprotty_1.MoveAction(handleMoves_1, false));
        }
        return result;
    };
    FeedbackEdgeRouteMovingMouseListener.prototype.getHandlePosition = function (handle) {
        if (this.edgeRouterRegistry) {
            var parent_1 = handle.parent;
            if (!smodel_util_1.isRoutable(parent_1))
                return undefined;
            var router = this.edgeRouterRegistry.get(parent_1.routerKind);
            var route = router.route(parent_1);
            return router.getHandlePosition(parent_1, route, handle);
        }
        return undefined;
    };
    FeedbackEdgeRouteMovingMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof sprotty_1.SModelRoot && event.buttons === 0)
            this.mouseUp(target, event);
        return [];
    };
    FeedbackEdgeRouteMovingMouseListener.prototype.mouseUp = function (target, event) {
        this.hasDragged = false;
        this.lastDragPosition = undefined;
        return [];
    };
    FeedbackEdgeRouteMovingMouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    return FeedbackEdgeRouteMovingMouseListener;
}(sprotty_1.MouseListener));
exports.FeedbackEdgeRouteMovingMouseListener = FeedbackEdgeRouteMovingMouseListener;
/**
 * UTILITY FUNCTIONS
 */
function drawFeedbackEdgeSource(context, targetId, elementTypeId) {
    var root = context.root;
    var targetChild = root.index.getById(targetId);
    if (!targetChild) {
        return;
    }
    var target = sprotty_1.findParentByFeature(targetChild, sprotty_1.isConnectable);
    if (!target || !sprotty_1.isBoundsAware(target)) {
        return;
    }
    var edgeEnd = new creation_tool_feedback_1.FeedbackEdgeEnd(target.id, elementTypeId);
    edgeEnd.id = creation_tool_feedback_1.feedbackEdgeEndId(root);
    edgeEnd.position = { x: target.bounds.x, y: target.bounds.y };
    var feedbackEdgeSchema = {
        type: 'edge',
        id: creation_tool_feedback_1.feedbackEdgeId(root),
        sourceId: edgeEnd.id,
        targetId: target.id,
        opacity: 0.3
    };
    var feedbackEdge = context.modelFactory.createElement(feedbackEdgeSchema);
    if (smodel_util_1.isRoutable(feedbackEdge)) {
        edgeEnd.feedbackEdge = feedbackEdge;
        root.add(edgeEnd);
        root.add(feedbackEdge);
    }
}


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js":
/*!***********************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js ***!
  \***********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var FeedbackActionDispatcher = /** @class */ (function () {
    function FeedbackActionDispatcher(actionDispatcher, logger) {
        this.actionDispatcher = actionDispatcher;
        this.logger = logger;
        this.feedbackEmitters = new Map;
    }
    FeedbackActionDispatcher.prototype.registerFeedback = function (feedbackEmitter, actions) {
        this.feedbackEmitters.set(feedbackEmitter, actions);
        this.dispatch(actions, feedbackEmitter);
    };
    FeedbackActionDispatcher.prototype.deregisterFeedback = function (feedbackEmitter, actions) {
        this.feedbackEmitters.delete(feedbackEmitter);
        this.dispatch(actions, feedbackEmitter);
    };
    FeedbackActionDispatcher.prototype.dispatch = function (actions, feedbackEmitter) {
        var _this = this;
        this.actionDispatcher()
            .then(function (dispatcher) { return dispatcher.dispatchAll(actions); })
            .then(function () { return _this.logger.info(_this, "Dispatched feedback actions for " + feedbackEmitter); })
            .catch(function (reason) { return _this.logger.error(_this, 'Failed to dispatch feedback actions', reason); });
    };
    FeedbackActionDispatcher.prototype.getRegisteredFeedback = function () {
        var result = [];
        this.feedbackEmitters.forEach(function (value, key) { return result.push.apply(result, __spread(value)); });
        return result;
    };
    FeedbackActionDispatcher.prototype.getRegisteredFeedbackEmitters = function (action) {
        var result = [];
        this.feedbackEmitters.forEach(function (value, key) {
            if (value.find(function (a) { return a === action; })) {
                result.push(key);
            }
        });
        return result;
    };
    FeedbackActionDispatcher = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.IActionDispatcherProvider)),
        __param(1, inversify_1.inject(sprotty_1.TYPES.ILogger)),
        __metadata("design:paramtypes", [Function, Object])
    ], FeedbackActionDispatcher);
    return FeedbackActionDispatcher;
}());
exports.FeedbackActionDispatcher = FeedbackActionDispatcher;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var FeedbackCommand = /** @class */ (function (_super) {
    __extends(FeedbackCommand, _super);
    function FeedbackCommand() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // used by the `FeedbackAwareUpdateModelCommand`
        _this.priority = 0;
        return _this;
    }
    FeedbackCommand.prototype.undo = function (context) {
        return context.root;
    };
    FeedbackCommand.prototype.redo = function (context) {
        return context.root;
    };
    return FeedbackCommand;
}(sprotty_1.Command));
exports.FeedbackCommand = FeedbackCommand;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var snabbdom = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
var JSX = { createElement: snabbdom.svg };
/**
* This view is used for the invisible end of the feedback edge.
* A feedback edge is shown as a visual feedback when creating edges.
*/
var FeedbackEdgeEndView = /** @class */ (function () {
    function FeedbackEdgeEndView() {
    }
    FeedbackEdgeEndView.prototype.render = function (model, context) {
        var position = model.position || sprotty_1.ORIGIN_POINT;
        return JSX.createElement("g", { x: position.x, y: position.y });
    };
    FeedbackEdgeEndView = __decorate([
        inversify_1.injectable()
    ], FeedbackEdgeEndView);
    return FeedbackEdgeEndView;
}());
exports.FeedbackEdgeEndView = FeedbackEdgeEndView;
var SResizeHandleView = /** @class */ (function () {
    function SResizeHandleView() {
    }
    SResizeHandleView.prototype.render = function (handle, context) {
        var position = this.getPosition(handle);
        if (position !== undefined) {
            var node = JSX.createElement("circle", { "class-sprotty-resize-handle": true, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
            sprotty_1.setAttr(node, 'data-kind', handle.location);
            return node;
        }
        // Fallback: Create an empty group
        return JSX.createElement("g", null);
    };
    SResizeHandleView.prototype.getPosition = function (handle) {
        var parent = handle.parent;
        if (model_1.isResizable(parent)) {
            if (handle.location === model_1.ResizeHandleLocation.TopLeft) {
                return { x: 0, y: 0 };
            }
            else if (handle.location === model_1.ResizeHandleLocation.TopRight) {
                return { x: parent.bounds.width, y: 0 };
            }
            else if (handle.location === model_1.ResizeHandleLocation.BottomLeft) {
                return { x: 0, y: parent.bounds.height };
            }
            else if (handle.location === model_1.ResizeHandleLocation.BottomRight) {
                return { x: parent.bounds.width, y: parent.bounds.height };
            }
        }
        return undefined;
    };
    SResizeHandleView.prototype.getRadius = function () {
        return 7;
    };
    SResizeHandleView = __decorate([
        inversify_1.injectable()
    ], SResizeHandleView);
    return SResizeHandleView;
}());
exports.SResizeHandleView = SResizeHandleView;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! ../../../css/tool-palette.css */ "../../../node_modules/@eclipse-glsp/client/css/tool-palette.css");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var tool_palette_1 = __webpack_require__(/*! ./tool-palette */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js");
var toolPaletteModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(tool_palette_1.ToolPalette).toSelf().inSingletonScope();
    bind(sprotty_1.TYPES.IUIExtension).toService(tool_palette_1.ToolPalette);
    sprotty_1.configureActionHandler({ bind: bind, isBound: isBound }, tool_palette_1.EnableToolPaletteAction.KIND, tool_palette_1.ToolPalette);
    sprotty_1.configureActionHandler({ bind: bind, isBound: isBound }, sprotty_1.EnableDefaultToolsAction.KIND, tool_palette_1.ToolPalette);
});
exports.default = toolPaletteModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/palette-item.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-palette/palette-item.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
function isPaletteItem(object) {
    return sprotty_1.isLabeledAction(object) && "id" in object && "sortString" in object;
}
exports.isPaletteItem = isPaletteItem;
var PaletteItem;
(function (PaletteItem) {
    function getTriggerAction(item) {
        if (item) {
            var initiAction = item.actions.filter(function (a) { return operation_1.isTriggerElementTypeCreationAction(a); })
                .map(function (a) { return a; });
            return initiAction.length > 0 ? initiAction[0] : undefined;
        }
        return undefined;
    }
    PaletteItem.getTriggerAction = getTriggerAction;
})(PaletteItem = exports.PaletteItem || (exports.PaletteItem = {}));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var context_actions_1 = __webpack_require__(/*! ../../base/actions/context-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js");
var editor_context_1 = __webpack_require__(/*! ../../base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var delete_tool_1 = __webpack_require__(/*! ../tools/delete-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js");
var validate_1 = __webpack_require__(/*! ../validation/validate */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js");
var CLICKED_CSS_CLASS = "clicked";
var SEARCH_ICON = "fa-search";
var PALETTE_ICON = "fa-palette";
var CHEVRON_DOWN = "fa-chevron-down";
var PALETTE_HEIGHT = "500px";
var EnableToolPaletteAction = /** @class */ (function () {
    function EnableToolPaletteAction() {
        this.kind = EnableToolPaletteAction_1.KIND;
    }
    EnableToolPaletteAction_1 = EnableToolPaletteAction;
    var EnableToolPaletteAction_1;
    EnableToolPaletteAction.KIND = "enableToolPalette";
    EnableToolPaletteAction = EnableToolPaletteAction_1 = __decorate([
        inversify_1.injectable()
    ], EnableToolPaletteAction);
    return EnableToolPaletteAction;
}());
exports.EnableToolPaletteAction = EnableToolPaletteAction;
var ToolPalette = /** @class */ (function (_super) {
    __extends(ToolPalette, _super);
    function ToolPalette() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.paletteItemsCopy = [];
        return _this;
    }
    ToolPalette_1 = ToolPalette;
    ToolPalette.prototype.id = function () { return ToolPalette_1.ID; };
    ToolPalette.prototype.containerClass = function () { return ToolPalette_1.ID; };
    ToolPalette.prototype.postConstruct = function () {
        this.editorContext.register(this);
    };
    ToolPalette.prototype.initialize = function () {
        if (!this.paletteItems) {
            return false;
        }
        return _super.prototype.initialize.call(this);
    };
    ToolPalette.prototype.initializeContents = function (containerElement) {
        this.createHeader();
        this.createBody();
    };
    ToolPalette.prototype.onBeforeShow = function (containerElement, root) {
        this.modelRootId = root.id;
        this.containerElement.style.maxHeight = PALETTE_HEIGHT;
    };
    ToolPalette.prototype.addMinimizePaletteButton = function () {
        var _this = this;
        var baseDiv = document.getElementById(this.options.baseDiv);
        var minPaletteDiv = document.createElement("div");
        minPaletteDiv.classList.add("minimize-palette-button");
        this.containerElement.classList.add("collapsible-palette");
        if (baseDiv) {
            var insertedDiv = baseDiv.insertBefore(minPaletteDiv, baseDiv.firstChild);
            var minimizeIcon_1 = createIcon(["fas", CHEVRON_DOWN]);
            minimizeIcon_1.onclick = function (ev) {
                if (_this.containerElement.style.maxHeight !== "0px") {
                    _this.containerElement.style.maxHeight = "0px";
                }
                else {
                    _this.containerElement.style.maxHeight = PALETTE_HEIGHT;
                }
                changeCSSClass(minimizeIcon_1, PALETTE_ICON);
                changeCSSClass(minimizeIcon_1, "fa");
                changeCSSClass(minimizeIcon_1, "fas");
                changeCSSClass(minimizeIcon_1, CHEVRON_DOWN);
            };
            insertedDiv.appendChild(minimizeIcon_1);
        }
    };
    ToolPalette.prototype.createBody = function () {
        var _this = this;
        var bodyDiv = document.createElement("div");
        bodyDiv.classList.add("palette-body");
        this.paletteItems.sort(compare)
            .forEach(function (item) {
            if (item.children) {
                var group_1 = createToolGroup(item);
                item.children.sort(compare).forEach(function (child) { return group_1.appendChild(_this.createToolButton(child)); });
                bodyDiv.appendChild(group_1);
            }
            else {
                bodyDiv.appendChild(_this.createToolButton(item));
            }
        });
        if (this.paletteItems.length === 0) {
            var noResultsDiv = document.createElement("div");
            noResultsDiv.innerText = "No results found.";
            noResultsDiv.classList.add("tool-button");
            bodyDiv.appendChild(noResultsDiv);
        }
        // Remove existing body to refresh filtered entries
        if (this.bodyDiv) {
            this.containerElement.removeChild(this.bodyDiv);
        }
        this.containerElement.appendChild(bodyDiv);
        this.bodyDiv = bodyDiv;
    };
    ToolPalette.prototype.createHeader = function () {
        var _this = this;
        this.addMinimizePaletteButton();
        var headerCompartment = document.createElement("div");
        headerCompartment.classList.add("palette-header");
        // Title header
        var header = document.createElement("div");
        header.classList.add("header-icon");
        header.appendChild(createIcon(["fa", "fa-palette"]));
        header.insertAdjacentText("beforeend", "Palette");
        headerCompartment.append(header);
        // Header Tools Compartment
        var headerTools = document.createElement("div");
        headerTools.classList.add("header-tools");
        // Create button for DefaultTools
        this.defaultToolsButton = createIcon(["fas", "fa-mouse-pointer", "fa-xs", "clicked"]);
        this.defaultToolsButton.id = "btn_default_tools";
        this.defaultToolsButton.onclick = this.onClickStaticToolButton(this.defaultToolsButton);
        headerTools.appendChild(this.defaultToolsButton);
        this.lastActivebutton = this.defaultToolsButton;
        // Create button for MouseDeleteTool
        var deleteToolButton = createIcon(["fas", "fa-eraser", "fa-xs"]);
        deleteToolButton.onclick = this.onClickStaticToolButton(deleteToolButton, delete_tool_1.MouseDeleteTool.ID);
        headerTools.appendChild(deleteToolButton);
        // Create button for ValidationTool
        var validateActionButton = createIcon(["fas", "fa-check-square", "fa-xs"]);
        validateActionButton.onclick = function (ev) {
            var modelIds = [_this.modelRootId];
            _this.actionDispatcher.dispatch(new validate_1.RequestMarkersAction(modelIds));
        };
        headerTools.appendChild(validateActionButton);
        // Create button for Search
        var searchIcon = createIcon(["fas", SEARCH_ICON, "state-icon", "fa-xs"]);
        searchIcon.onclick = function (ev) {
            var searchField = document.getElementById(_this.containerElement.id + "_search_field");
            if (searchField) {
                if (searchField.style.display === "inline") {
                    searchField.style.display = "none";
                }
                else {
                    searchField.style.display = "inline";
                    searchField.focus();
                }
            }
        };
        searchIcon.classList.add("search-icon");
        this.searchField = document.createElement("input");
        this.searchField.classList.add("search-input");
        this.searchField.id = this.containerElement.id + "_search_field";
        this.searchField.type = "text";
        this.searchField.placeholder = " Search...";
        this.searchField.style.display = "none";
        this.searchField.onkeyup = function () { return _this.requestFilterUpdate(_this.searchField.value); };
        this.searchField.onkeydown = function (ev) { return _this.clearOnEspace(ev); };
        headerTools.appendChild(searchIcon);
        headerCompartment.appendChild(headerTools);
        headerCompartment.appendChild(this.searchField);
        this.containerElement.appendChild(headerCompartment);
    };
    ToolPalette.prototype.createToolButton = function (item) {
        var button = document.createElement("div");
        button.classList.add("tool-button");
        button.innerHTML = item.label;
        button.onclick = this.onClickCreateToolButton(button, item);
        return button;
    };
    ToolPalette.prototype.onClickCreateToolButton = function (button, item) {
        var _this = this;
        return function (ev) {
            if (!_this.editorContext.isReadonly) {
                _this.actionDispatcher.dispatchAll(item.actions);
                _this.changeActiveButton(button);
                _this.restoreFocus();
            }
        };
    };
    ToolPalette.prototype.onClickStaticToolButton = function (button, toolId) {
        var _this = this;
        return function (ev) {
            if (!_this.editorContext.isReadonly) {
                var action = toolId ? new sprotty_1.EnableToolsAction([toolId]) : new sprotty_1.EnableDefaultToolsAction();
                _this.actionDispatcher.dispatch(action);
                _this.changeActiveButton(button);
                _this.restoreFocus();
            }
        };
    };
    ToolPalette.prototype.changeActiveButton = function (button) {
        if (this.lastActivebutton) {
            this.lastActivebutton.classList.remove(CLICKED_CSS_CLASS);
        }
        if (button) {
            button.classList.add(CLICKED_CSS_CLASS);
            this.lastActivebutton = button;
        }
        else {
            this.defaultToolsButton.classList.add(CLICKED_CSS_CLASS);
            this.lastActivebutton = this.defaultToolsButton;
        }
    };
    ToolPalette.prototype.handle = function (action) {
        var _this = this;
        if (action.kind === EnableToolPaletteAction.KIND) {
            var requestAction = new context_actions_1.RequestContextActions(ToolPalette_1.ID, {
                selectedElementIds: []
            });
            this.actionDispatcher.requestUntil(requestAction).then(function (response) {
                if (context_actions_1.isSetContextActionsAction(response)) {
                    _this.paletteItems = response.actions.map(function (e) { return e; });
                    _this.actionDispatcher.dispatch(new sprotty_1.SetUIExtensionVisibilityAction(ToolPalette_1.ID, !_this.editorContext.isReadonly));
                }
            });
        }
        else if (action instanceof sprotty_1.EnableToolsAction && action.toolIds.includes(ToolPalette_1.ID)) {
            this.changeActiveButton();
        }
    };
    ToolPalette.prototype.editModeChanged = function (oldValue, newValue) {
        this.actionDispatcher.dispatch(new sprotty_1.SetUIExtensionVisibilityAction(ToolPalette_1.ID, !this.editorContext.isReadonly));
    };
    ToolPalette.prototype.clearOnEspace = function (event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            this.searchField.value = '';
            this.requestFilterUpdate('');
        }
    };
    ToolPalette.prototype.handleSetContextActions = function (action) {
        this.paletteItems = action.actions.map(function (e) { return e; });
        this.createBody();
    };
    ToolPalette.prototype.requestFilterUpdate = function (filter) {
        var e_1, _a;
        // Initialize the copy if it's empty
        if (this.paletteItemsCopy.length === 0) {
            // Creating deep copy
            this.paletteItemsCopy = JSON.parse(JSON.stringify(this.paletteItems));
        }
        // Reset the paletteItems before searching
        this.paletteItems = JSON.parse(JSON.stringify(this.paletteItemsCopy));
        // Filter the entries
        var filteredPaletteItems = [];
        var _loop_1 = function (itemGroup) {
            if (itemGroup.children) {
                // Fetch the labels according to the filter
                var matchingChildren = itemGroup.children.filter(function (child) { return child.label.toLowerCase().includes(filter.toLowerCase()); });
                // Add the itemgroup containing the correct entries
                if (matchingChildren.length > 0) {
                    // Clear existing children
                    itemGroup.children.splice(0, itemGroup.children.length);
                    // Push the matching children
                    matchingChildren.forEach(function (child) { return itemGroup.children.push(child); });
                    filteredPaletteItems.push(itemGroup);
                }
            }
        };
        try {
            for (var _b = __values(this.paletteItems), _c = _b.next(); !_c.done; _c = _b.next()) {
                var itemGroup = _c.value;
                _loop_1(itemGroup);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.paletteItems = filteredPaletteItems;
        this.createBody();
    };
    var ToolPalette_1;
    ToolPalette.ID = "tool-palette";
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
    ], ToolPalette.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IToolManager),
        __metadata("design:type", Object)
    ], ToolPalette.prototype, "toolManager", void 0);
    __decorate([
        inversify_1.inject(editor_context_1.EditorContextService),
        __metadata("design:type", editor_context_1.EditorContextService)
    ], ToolPalette.prototype, "editorContext", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], ToolPalette.prototype, "postConstruct", null);
    ToolPalette = ToolPalette_1 = __decorate([
        inversify_1.injectable()
    ], ToolPalette);
    return ToolPalette;
}(sprotty_1.AbstractUIExtension));
exports.ToolPalette = ToolPalette;
function compare(a, b) {
    var sortStringBased = a.sortString.localeCompare(b.sortString);
    if (sortStringBased !== 0) {
        return sortStringBased;
    }
    return a.label.localeCompare(b.label);
}
exports.compare = compare;
function createIcon(cssClasses) {
    var _a;
    var icon = document.createElement("i");
    (_a = icon.classList).add.apply(_a, __spread(cssClasses));
    return icon;
}
exports.createIcon = createIcon;
function createToolGroup(item) {
    var group = document.createElement("div");
    group.classList.add("tool-group");
    group.id = item.id;
    var header = document.createElement("div");
    header.classList.add("group-header");
    if (item.icon) {
        header.appendChild(createIcon(["fas", item.icon]));
    }
    header.insertAdjacentText('beforeend', item.label);
    header.ondblclick = function (ev) {
        var css = "collapsed";
        changeCSSClass(group, css);
        Array.from(group.children).forEach(function (child) { return changeCSSClass(child, css); });
        window.getSelection().removeAllRanges();
    };
    group.appendChild(header);
    return group;
}
exports.createToolGroup = createToolGroup;
function changeCSSClass(element, css) {
    element.classList.contains(css) ? element.classList.remove(css) :
        element.classList.add(css);
}
exports.changeCSSClass = changeCSSClass;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var editor_context_1 = __webpack_require__(/*! ../../base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var BaseGLSPTool = /** @class */ (function () {
    function BaseGLSPTool() {
    }
    Object.defineProperty(BaseGLSPTool.prototype, "isEditTool", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    BaseGLSPTool.prototype.dispatchFeedback = function (feedbackEmitter, actions) {
        this.feedbackDispatcher.registerFeedback(feedbackEmitter, actions);
    };
    BaseGLSPTool.prototype.dispatchActions = function (actions) {
        this.actionDispatcher.dispatchAll(actions);
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher),
        __metadata("design:type", Object)
    ], BaseGLSPTool.prototype, "feedbackDispatcher", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], BaseGLSPTool.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.MouseTool),
        __metadata("design:type", Object)
    ], BaseGLSPTool.prototype, "mouseTool", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.KeyTool),
        __metadata("design:type", sprotty_1.KeyTool)
    ], BaseGLSPTool.prototype, "keyTool", void 0);
    __decorate([
        inversify_1.inject(editor_context_1.EditorContextService),
        __metadata("design:type", editor_context_1.EditorContextService)
    ], BaseGLSPTool.prototype, "editorContext", void 0);
    BaseGLSPTool = __decorate([
        inversify_1.injectable()
    ], BaseGLSPTool);
    return BaseGLSPTool;
}());
exports.BaseGLSPTool = BaseGLSPTool;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var layout_utils_1 = __webpack_require__(/*! ../../utils/layout-utils */ "../../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var model_1 = __webpack_require__(/*! ../change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
var movement_restrictor_1 = __webpack_require__(/*! ../change-bounds/movement-restrictor */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js");
var selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var change_bounds_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/change-bounds-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js");
var css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
var base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
var drag_aware_mouse_listener_1 = __webpack_require__(/*! ./drag-aware-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/drag-aware-mouse-listener.js");
/**
 * The change bounds tool has the license to move multiple elements or resize a single element by implementing the ChangeBounds operation.
 * In contrast to Sprotty's implementation this tool only sends a `ChangeBoundsOperationAction` when an operation has finished and does not
 * provide client-side live updates to improve performance.
 *
 * | Operation | Client Update    | Server Update
 * +-----------+------------------+----------------------------
 * | Move      | MoveAction       | ChangeBoundsOperationAction
 * | Resize    | SetBoundsAction  | ChangeBoundsOperationAction
 *
 * To provide a visual client updates during move we install the `FeedbackMoveMouseListener` and to provide visual client updates during resize
 * and send the server updates we install the `ChangeBoundsListener`.
 */
var ChangeBoundsTool = /** @class */ (function (_super) {
    __extends(ChangeBoundsTool, _super);
    function ChangeBoundsTool() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = ChangeBoundsTool_1.ID;
        return _this;
    }
    ChangeBoundsTool_1 = ChangeBoundsTool;
    ChangeBoundsTool.prototype.enable = function () {
        // install feedback move mouse listener for client-side move updates
        this.feedbackMoveMouseListener = this.createMoveMouseListener();
        this.mouseTool.register(this.feedbackMoveMouseListener);
        // install change bounds listener for client-side resize updates and server-side updates
        this.changeBoundsListener = this.createChangeBoundsListener();
        this.mouseTool.register(this.changeBoundsListener);
        this.selectionService.register(this.changeBoundsListener);
        // register feedback
        this.feedbackDispatcher.registerFeedback(this, [new change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackAction]);
    };
    ChangeBoundsTool.prototype.createMoveMouseListener = function () {
        return new change_bounds_tool_feedback_1.FeedbackMoveMouseListener(this);
    };
    ChangeBoundsTool.prototype.createChangeBoundsListener = function () {
        return new ChangeBoundsListener(this);
    };
    ChangeBoundsTool.prototype.disable = function () {
        this.mouseTool.deregister(this.changeBoundsListener);
        this.selectionService.deregister(this.changeBoundsListener);
        this.mouseTool.deregister(this.feedbackMoveMouseListener);
        this.feedbackDispatcher.deregisterFeedback(this.feedbackMoveMouseListener, []);
        this.feedbackDispatcher.deregisterFeedback(this.changeBoundsListener, [new change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackAction]);
    };
    var ChangeBoundsTool_1;
    ChangeBoundsTool.ID = "glsp.change-bounds-tool";
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.SelectionService),
        __metadata("design:type", selection_service_1.SelectionService)
    ], ChangeBoundsTool.prototype, "selectionService", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", sprotty_1.EdgeRouterRegistry)
    ], ChangeBoundsTool.prototype, "edgeRouterRegistry", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ISnapper), inversify_1.optional(),
        __metadata("design:type", Object)
    ], ChangeBoundsTool.prototype, "snapper", void 0);
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IMovementRestrictor), inversify_1.optional(),
        __metadata("design:type", Object)
    ], ChangeBoundsTool.prototype, "movementRestrictor", void 0);
    ChangeBoundsTool = ChangeBoundsTool_1 = __decorate([
        inversify_1.injectable()
    ], ChangeBoundsTool);
    return ChangeBoundsTool;
}(base_glsp_tool_1.BaseGLSPTool));
exports.ChangeBoundsTool = ChangeBoundsTool;
var ChangeBoundsListener = /** @class */ (function (_super) {
    __extends(ChangeBoundsListener, _super);
    function ChangeBoundsListener(tool) {
        var _this = _super.call(this) || this;
        _this.tool = tool;
        _this.positionDelta = { x: 0, y: 0 };
        return _this;
    }
    ChangeBoundsListener.prototype.mouseDown = function (target, event) {
        _super.prototype.mouseDown.call(this, target, event);
        if (event.button !== 0) {
            return [];
        }
        // check if we have a resize handle (only single-selection)
        if (this.activeResizeElementId && target instanceof model_1.SResizeHandle) {
            this.activeResizeHandle = target;
        }
        else {
            this.setActiveResizeElement(target);
        }
        if (this.activeResizeElementId) {
            this.initPosition(event);
        }
        else {
            this.reset();
        }
        return [];
    };
    ChangeBoundsListener.prototype.mouseMove = function (target, event) {
        _super.prototype.mouseMove.call(this, target, event);
        if (this.isMouseDrag && this.activeResizeHandle) {
            // rely on the FeedbackMoveMouseListener to update the element bounds of selected elements
            // consider resize handles ourselves
            var actions = [css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.RESIZE), css_feedback_1.applyCssClasses(this.activeResizeHandle, ChangeBoundsListener.CSS_CLASS_ACTIVE)];
            var positionUpdate = this.updatePosition(target, event);
            if (positionUpdate) {
                var resizeActions = this.handleResizeOnClient(positionUpdate);
                actions.push.apply(actions, __spread(resizeActions));
            }
            return actions;
        }
        return [];
    };
    ChangeBoundsListener.prototype.draggingMouseUp = function (target, event) {
        if (this.lastDragPosition === undefined) {
            this.resetPosition();
            return [];
        }
        var actions = [];
        if (this.activeResizeHandle) {
            // Resize
            actions.push.apply(actions, __spread(this.handleResize(this.activeResizeHandle)));
        }
        else {
            // Move
            actions.push.apply(actions, __spread(this.handleMoveOnServer(target)));
        }
        this.resetPosition();
        return actions;
    };
    ChangeBoundsListener.prototype.handleMoveOnServer = function (target) {
        var operations = [];
        operations.push.apply(operations, __spread(this.handleMoveElementsOnServer(target)));
        operations.push.apply(operations, __spread(this.handleMoveRoutingPointsOnServer(target)));
        return [new operation_1.CompoundOperation(operations)];
    };
    ChangeBoundsListener.prototype.handleMoveElementsOnServer = function (target) {
        var _this = this;
        var result = [];
        var newBounds = [];
        smodel_util_1.forEachElement(target, smodel_util_1.isNonRoutableSelectedMovableBoundsAware, function (element) {
            _this.createElementAndBounds(element).forEach(function (bounds) { return newBounds.push(bounds); });
        });
        if (newBounds.length > 0) {
            result.push(new operation_1.ChangeBoundsOperation(newBounds));
        }
        return result;
    };
    ChangeBoundsListener.prototype.handleMoveRoutingPointsOnServer = function (target) {
        var _this = this;
        var result = [];
        var newRoutingPoints = [];
        smodel_util_1.forEachElement(target, smodel_util_1.isNonRoutableSelectedMovableBoundsAware, function (element) {
            //  If client routing is enabled -> delegate routingpoints of connected edges to server
            if (_this.tool.edgeRouterRegistry && element instanceof sprotty_1.SConnectableElement) {
                element.incomingEdges.map(smodel_util_1.toElementAndRoutingPoints).forEach(function (ear) { return newRoutingPoints.push(ear); });
                element.outgoingEdges.map(smodel_util_1.toElementAndRoutingPoints).forEach(function (ear) { return newRoutingPoints.push(ear); });
            }
        });
        if (newRoutingPoints.length > 0) {
            result.push(new operation_1.ChangeRoutingPointsOperation(newRoutingPoints));
        }
        return result;
    };
    ChangeBoundsListener.prototype.handleResize = function (activeResizeHandle) {
        var actions = [];
        actions.push(css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.DEFAULT));
        actions.push(css_feedback_1.deleteCssClasses(activeResizeHandle, ChangeBoundsListener.CSS_CLASS_ACTIVE));
        var resizeElement = sprotty_1.findParentByFeature(activeResizeHandle, model_1.isResizable);
        if (this.isActiveResizeElement(resizeElement)) {
            this.createChangeBoundsAction(resizeElement).forEach(function (action) { return actions.push(action); });
        }
        return actions;
    };
    ChangeBoundsListener.prototype.selectionChanged = function (root, selectedElements) {
        var e_1, _a;
        if (this.activeResizeElementId) {
            if (selectedElements.includes(this.activeResizeElementId)) {
                // our active element is still selected, nothing to do
                return;
            }
            try {
                // try to find some other selected element and mark that active
                for (var _b = __values(selectedElements.reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var elementId = _c.value;
                    var element = root.index.getById(elementId);
                    if (element && this.setActiveResizeElement(element)) {
                        return;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.reset();
        }
    };
    ChangeBoundsListener.prototype.setActiveResizeElement = function (target) {
        // check if we have a selected, moveable element (multi-selection allowed)
        var moveableElement = sprotty_1.findParentByFeature(target, model_1.isBoundsAwareMoveable);
        if (sprotty_1.isSelected(moveableElement)) {
            // only allow one element to have the element resize handles
            this.activeResizeElementId = moveableElement.id;
            this.tool.dispatchFeedback(this, [new change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackAction(this.activeResizeElementId)]);
            return true;
        }
        return false;
    };
    ChangeBoundsListener.prototype.isActiveResizeElement = function (element) {
        return element !== undefined && element.id === this.activeResizeElementId;
    };
    ChangeBoundsListener.prototype.initPosition = function (event) {
        this.lastDragPosition = { x: event.pageX, y: event.pageY };
        if (this.activeResizeHandle) {
            var resizeElement = sprotty_1.findParentByFeature(this.activeResizeHandle, model_1.isResizable);
            this.initialBounds = { x: resizeElement.bounds.x, y: resizeElement.bounds.y, width: resizeElement.bounds.width, height: resizeElement.bounds.height };
        }
    };
    ChangeBoundsListener.prototype.updatePosition = function (target, event) {
        if (this.lastDragPosition) {
            var newDragPosition = { x: event.pageX, y: event.pageY };
            var viewport = sprotty_1.findParentByFeature(target, sprotty_1.isViewport);
            var zoom = viewport ? viewport.zoom : 1;
            var dx = (event.pageX - this.lastDragPosition.x) / zoom;
            var dy = (event.pageY - this.lastDragPosition.y) / zoom;
            var deltaToLastPosition = { x: dx, y: dy };
            this.lastDragPosition = newDragPosition;
            // update position delta with latest delta
            this.positionDelta.x += deltaToLastPosition.x;
            this.positionDelta.y += deltaToLastPosition.y;
            // snap our delta and only send update if the position actually changes
            // otherwise accumulate delta until we do snap to an update
            var positionUpdate = this.snap(this.positionDelta, target, !event.shiftKey);
            if (positionUpdate.x === 0 && positionUpdate.y === 0) {
                return undefined;
            }
            // we update our position so we need to reset our delta
            this.positionDelta.x = 0;
            this.positionDelta.y = 0;
            return positionUpdate;
        }
        return undefined;
    };
    ChangeBoundsListener.prototype.reset = function () {
        this.tool.dispatchFeedback(this, [new change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackAction()]);
        this.tool.dispatchActions([css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.DEFAULT)]);
        this.resetPosition();
    };
    ChangeBoundsListener.prototype.resetPosition = function () {
        this.activeResizeHandle = undefined;
        this.lastDragPosition = undefined;
        this.positionDelta = { x: 0, y: 0 };
    };
    ChangeBoundsListener.prototype.handleResizeOnClient = function (positionUpdate) {
        if (!this.activeResizeHandle) {
            return [];
        }
        var resizeElement = sprotty_1.findParentByFeature(this.activeResizeHandle, model_1.isResizable);
        if (this.isActiveResizeElement(resizeElement)) {
            switch (this.activeResizeHandle.location) {
                case model_1.ResizeHandleLocation.TopLeft:
                    return this.handleTopLeftResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.TopRight:
                    return this.handleTopRightResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.BottomLeft:
                    return this.handleBottomLeftResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.BottomRight:
                    return this.handleBottomRightResize(resizeElement, positionUpdate);
            }
        }
        return [];
    };
    ChangeBoundsListener.prototype.handleTopLeftResize = function (resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x + positionUpdate.x, resizeElement.bounds.y + positionUpdate.y, resizeElement.bounds.width - positionUpdate.x, resizeElement.bounds.height - positionUpdate.y);
    };
    ChangeBoundsListener.prototype.handleTopRightResize = function (resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x, resizeElement.bounds.y + positionUpdate.y, resizeElement.bounds.width + positionUpdate.x, resizeElement.bounds.height - positionUpdate.y);
    };
    ChangeBoundsListener.prototype.handleBottomLeftResize = function (resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x + positionUpdate.x, resizeElement.bounds.y, resizeElement.bounds.width - positionUpdate.x, resizeElement.bounds.height + positionUpdate.y);
    };
    ChangeBoundsListener.prototype.handleBottomRightResize = function (resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x, resizeElement.bounds.y, resizeElement.bounds.width + positionUpdate.x, resizeElement.bounds.height + positionUpdate.y);
    };
    ChangeBoundsListener.prototype.createChangeBoundsAction = function (element) {
        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {
            return [new operation_1.ChangeBoundsOperation([smodel_util_1.toElementAndBounds(element)])];
        }
        else if (this.initialBounds) {
            var actions = [];
            if (this.tool.movementRestrictor) {
                actions.push(movement_restrictor_1.removeMovementRestrictionFeedback(element, this.tool.movementRestrictor));
            }
            actions.push(new sprotty_1.SetBoundsAction([{ elementId: element.id, newPosition: this.initialBounds, newSize: this.initialBounds }]));
            return actions;
        }
        return [];
    };
    ChangeBoundsListener.prototype.createElementAndBounds = function (element) {
        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {
            return [smodel_util_1.toElementAndBounds(element)];
        }
        return [];
    };
    ChangeBoundsListener.prototype.createSetBoundsAction = function (element, x, y, width, height) {
        var newPosition = { x: x, y: y };
        var newSize = { width: width, height: height };
        var result = [];
        if (this.isValidBoundChange(element, newPosition, newSize)) {
            if (this.tool.movementRestrictor) {
                result.push(movement_restrictor_1.removeMovementRestrictionFeedback(element, this.tool.movementRestrictor));
            }
            result.push(new sprotty_1.SetBoundsAction([{ elementId: element.id, newPosition: newPosition, newSize: newSize }]));
        }
        else if (this.isValidSize(element, newSize)) {
            if (this.tool.movementRestrictor) {
                result.push(movement_restrictor_1.createMovementRestrictionFeedback(element, this.tool.movementRestrictor));
            }
            result.push(new sprotty_1.SetBoundsAction([{ elementId: element.id, newPosition: newPosition, newSize: newSize }]));
        }
        return result;
    };
    ChangeBoundsListener.prototype.snap = function (position, element, isSnap) {
        return isSnap && this.tool.snapper
            ? this.tool.snapper.snap(position, element)
            : { x: position.x, y: position.y };
    };
    ChangeBoundsListener.prototype.isValidBoundChange = function (element, newPosition, newSize) {
        return this.isValidSize(element, newSize) && this.isValidMove(element, newPosition);
    };
    ChangeBoundsListener.prototype.isValidSize = function (element, size) {
        return layout_utils_1.isValidSize(element, size);
    };
    ChangeBoundsListener.prototype.isValidMove = function (element, newPosition) {
        return layout_utils_1.isValidMove(element, newPosition, this.tool.movementRestrictor);
    };
    ChangeBoundsListener.CSS_CLASS_ACTIVE = 'active';
    return ChangeBoundsListener;
}(drag_aware_mouse_listener_1.DragAwareMouseListener));
exports.ChangeBoundsListener = ChangeBoundsListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/creation-tool.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/creation-tool.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
var model_1 = __webpack_require__(/*! ../hints/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
var creation_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/creation-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
var css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
var base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
var drag_aware_mouse_listener_1 = __webpack_require__(/*! ./drag-aware-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/drag-aware-mouse-listener.js");
var NodeCreationTool = /** @class */ (function (_super) {
    __extends(NodeCreationTool, _super);
    function NodeCreationTool() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = NodeCreationTool_1.ID = "unknown";
        return _this;
    }
    NodeCreationTool_1 = NodeCreationTool;
    NodeCreationTool.prototype.enable = function () {
        if (this.triggerAction === undefined) {
            throw new TypeError("Could not enable tool " + this.id + ".The triggerAction cannot be undefined.");
        }
        this.creationToolMouseListener = new NodeCreationToolMouseListener(this.triggerAction, this);
        this.mouseTool.register(this.creationToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.NODE_CREATION)]);
    };
    NodeCreationTool.prototype.disable = function () {
        this.mouseTool.deregister(this.creationToolMouseListener);
        this.feedbackDispatcher.deregisterFeedback(this, [css_feedback_1.cursorFeedbackAction()]);
    };
    NodeCreationTool.prototype.handle = function (action) {
        if (operation_1.isTriggerNodeCreationAction(action)) {
            this.triggerAction = action;
            return new sprotty_1.EnableToolsAction([this.id]);
        }
    };
    var NodeCreationTool_1;
    NodeCreationTool.ID = "tool_create_node";
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ISnapper), inversify_1.optional(),
        __metadata("design:type", Object)
    ], NodeCreationTool.prototype, "snapper", void 0);
    NodeCreationTool = NodeCreationTool_1 = __decorate([
        inversify_1.injectable()
    ], NodeCreationTool);
    return NodeCreationTool;
}(base_glsp_tool_1.BaseGLSPTool));
exports.NodeCreationTool = NodeCreationTool;
var NodeCreationToolMouseListener = /** @class */ (function (_super) {
    __extends(NodeCreationToolMouseListener, _super);
    function NodeCreationToolMouseListener(triggerAction, tool) {
        var _this = _super.call(this) || this;
        _this.triggerAction = triggerAction;
        _this.tool = tool;
        return _this;
    }
    NodeCreationToolMouseListener.prototype.creationAllowed = function (elementTypeId) {
        return this.container && this.container.isContainableElement(this.elementTypeId);
    };
    Object.defineProperty(NodeCreationToolMouseListener.prototype, "elementTypeId", {
        get: function () {
            return this.triggerAction.elementTypeId;
        },
        enumerable: true,
        configurable: true
    });
    NodeCreationToolMouseListener.prototype.nonDraggingMouseUp = function (target, event) {
        var result = [];
        if (this.creationAllowed(this.elementTypeId)) {
            var containerId = this.container ? this.container.id : undefined;
            var location_1 = viewpoint_util_1.getAbsolutePosition(target, event);
            if (this.tool.snapper) {
                // Create a 0-bounds proxy element for snapping
                var elementProxy = new sprotty_1.SNode();
                elementProxy.size = { width: 0, height: 0 };
                location_1 = this.tool.snapper.snap(location_1, elementProxy);
            }
            result.push(new operation_1.CreateNodeOperation(this.elementTypeId, location_1, containerId, this.triggerAction.args));
            if (!sprotty_1.isCtrlOrCmd(event)) {
                result.push(new sprotty_1.EnableDefaultToolsAction());
            }
        }
        return result;
    };
    NodeCreationToolMouseListener.prototype.mouseOver = function (target, event) {
        var currentContainer = sprotty_1.findParentByFeature(target, model_1.isContainable);
        if (!this.container || currentContainer !== this.container) {
            this.container = currentContainer;
            var feedback = this.creationAllowed(this.elementTypeId)
                ? css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.NODE_CREATION) :
                css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED);
            this.tool.dispatchFeedback(this, [feedback]);
        }
        return [];
    };
    NodeCreationToolMouseListener = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [operation_1.TriggerNodeCreationAction, NodeCreationTool])
    ], NodeCreationToolMouseListener);
    return NodeCreationToolMouseListener;
}(drag_aware_mouse_listener_1.DragAwareMouseListener));
exports.NodeCreationToolMouseListener = NodeCreationToolMouseListener;
/**
 * Tool to create connections in a Diagram, by selecting a source and target node.
 */
var EdgeCreationTool = /** @class */ (function (_super) {
    __extends(EdgeCreationTool, _super);
    function EdgeCreationTool() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.id = EdgeCreationTool_1.ID;
        return _this;
    }
    EdgeCreationTool_1 = EdgeCreationTool;
    EdgeCreationTool.prototype.enable = function () {
        if (this.triggerAction === undefined) {
            throw new TypeError("Could not enable tool " + this.id + ".The triggerAction cannot be undefined.");
        }
        this.creationToolMouseListener = new EdgeCreationToolMouseListener(this.triggerAction, this);
        this.mouseTool.register(this.creationToolMouseListener);
        this.feedbackEndMovingMouseListener = new creation_tool_feedback_1.FeedbackEdgeEndMovingMouseListener(this.anchorRegistry);
        this.mouseTool.register(this.feedbackEndMovingMouseListener);
        this.dispatchFeedback(this, [css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)]);
    };
    EdgeCreationTool.prototype.disable = function () {
        this.mouseTool.deregister(this.creationToolMouseListener);
        this.mouseTool.deregister(this.feedbackEndMovingMouseListener);
        this.feedbackDispatcher.deregisterFeedback(this, [new creation_tool_feedback_1.RemoveFeedbackEdgeAction(), css_feedback_1.cursorFeedbackAction()]);
    };
    EdgeCreationTool.prototype.handle = function (action) {
        if (operation_1.isTriggerElementTypeCreationAction(action)) {
            this.triggerAction = action;
            return new sprotty_1.EnableToolsAction([this.id]);
        }
    };
    var EdgeCreationTool_1;
    EdgeCreationTool.ID = "tool_create_edge";
    __decorate([
        inversify_1.inject(sprotty_1.AnchorComputerRegistry),
        __metadata("design:type", sprotty_1.AnchorComputerRegistry)
    ], EdgeCreationTool.prototype, "anchorRegistry", void 0);
    EdgeCreationTool = EdgeCreationTool_1 = __decorate([
        inversify_1.injectable()
    ], EdgeCreationTool);
    return EdgeCreationTool;
}(base_glsp_tool_1.BaseGLSPTool));
exports.EdgeCreationTool = EdgeCreationTool;
var EdgeCreationToolMouseListener = /** @class */ (function (_super) {
    __extends(EdgeCreationToolMouseListener, _super);
    function EdgeCreationToolMouseListener(triggerAction, tool) {
        var _this = _super.call(this) || this;
        _this.triggerAction = triggerAction;
        _this.tool = tool;
        _this.allowedTarget = false;
        _this.proxyEdge = new sprotty_1.SEdge();
        _this.proxyEdge.type = triggerAction.elementTypeId;
        return _this;
    }
    EdgeCreationToolMouseListener.prototype.reinitialize = function () {
        this.source = undefined;
        this.target = undefined;
        this.currentTarget = undefined;
        this.allowedTarget = false;
        this.tool.dispatchFeedback(this, [new creation_tool_feedback_1.RemoveFeedbackEdgeAction()]);
    };
    EdgeCreationToolMouseListener.prototype.nonDraggingMouseUp = function (element, event) {
        var result = [];
        if (event.button === 0) {
            if (!this.isSourceSelected()) {
                if (this.currentTarget && this.allowedTarget) {
                    this.source = this.currentTarget.id;
                    this.tool.dispatchFeedback(this, [new creation_tool_feedback_1.DrawFeedbackEdgeAction(this.triggerAction.elementTypeId, this.source)]);
                }
            }
            else {
                if (this.currentTarget && this.allowedTarget) {
                    this.target = this.currentTarget.id;
                }
            }
            if (this.isSourceSelected() && this.isTargetSelected()) {
                result.push(new operation_1.CreateEdgeOperation(this.triggerAction.elementTypeId, this.source, this.target, this.triggerAction.args));
                if (!sprotty_1.isCtrlOrCmd(event)) {
                    result.push(new sprotty_1.EnableDefaultToolsAction());
                }
                else {
                    this.reinitialize();
                }
            }
        }
        else if (event.button === 2) {
            result.push(new sprotty_1.EnableDefaultToolsAction());
        }
        return result;
    };
    EdgeCreationToolMouseListener.prototype.isSourceSelected = function () {
        return this.source !== undefined;
    };
    EdgeCreationToolMouseListener.prototype.isTargetSelected = function () {
        return this.target !== undefined;
    };
    EdgeCreationToolMouseListener.prototype.mouseOver = function (target, event) {
        var newCurrentTarget = sprotty_1.findParentByFeature(target, sprotty_1.isConnectable);
        if (newCurrentTarget !== this.currentTarget) {
            this.currentTarget = newCurrentTarget;
            if (this.currentTarget) {
                if (!this.isSourceSelected()) {
                    this.allowedTarget = this.isAllowedSource(newCurrentTarget);
                }
                else if (!this.isTargetSelected()) {
                    this.allowedTarget = this.isAllowedTarget(newCurrentTarget);
                }
                if (this.allowedTarget) {
                    var action = !this.isSourceSelected() ? css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.EDGE_CREATION_SOURCE) :
                        css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.EDGE_CREATION_TARGET);
                    return [action];
                }
            }
            return [css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)];
        }
        return [];
    };
    EdgeCreationToolMouseListener.prototype.isAllowedSource = function (element) {
        return element !== undefined && sprotty_1.isConnectable(element) && element.canConnect(this.proxyEdge, "source");
    };
    EdgeCreationToolMouseListener.prototype.isAllowedTarget = function (element) {
        return element !== undefined && sprotty_1.isConnectable(element) && element.canConnect(this.proxyEdge, "target");
    };
    EdgeCreationToolMouseListener = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [operation_1.TriggerEdgeCreationAction, EdgeCreationTool])
    ], EdgeCreationToolMouseListener);
    return EdgeCreationToolMouseListener;
}(drag_aware_mouse_listener_1.DragAwareMouseListener));
exports.EdgeCreationToolMouseListener = EdgeCreationToolMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js":
/*!************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js ***!
  \************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
/**
 * Deletes selected elements when hitting the `Del` key.
 */
var DelKeyDeleteTool = /** @class */ (function () {
    function DelKeyDeleteTool(keytool) {
        this.keytool = keytool;
        this.id = DelKeyDeleteTool_1.ID;
        this.isEditTool = true;
        this.deleteKeyListener = new DeleteKeyListener();
    }
    DelKeyDeleteTool_1 = DelKeyDeleteTool;
    DelKeyDeleteTool.prototype.enable = function () {
        this.keytool.register(this.deleteKeyListener);
    };
    DelKeyDeleteTool.prototype.disable = function () {
        this.keytool.deregister(this.deleteKeyListener);
    };
    var DelKeyDeleteTool_1;
    DelKeyDeleteTool.ID = "glsp.delete-keyboard";
    DelKeyDeleteTool = DelKeyDeleteTool_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.KeyTool)),
        __metadata("design:paramtypes", [sprotty_1.KeyTool])
    ], DelKeyDeleteTool);
    return DelKeyDeleteTool;
}());
exports.DelKeyDeleteTool = DelKeyDeleteTool;
var DeleteKeyListener = /** @class */ (function (_super) {
    __extends(DeleteKeyListener, _super);
    function DeleteKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeleteKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Delete')) {
            var deleteElementIds = Array.from(element.root.index.all().filter(function (e) { return sprotty_1.isDeletable(e) && sprotty_1.isSelectable(e) && e.selected; })
                .filter(function (e) { return e.id !== e.root.id; }).map(function (e) { return e.id; }));
            return [new operation_1.DeleteElementOperation(deleteElementIds)];
        }
        return [];
    };
    DeleteKeyListener = __decorate([
        inversify_1.injectable()
    ], DeleteKeyListener);
    return DeleteKeyListener;
}(sprotty_1.KeyListener));
exports.DeleteKeyListener = DeleteKeyListener;
/**
 * Deletes selected elements when clicking on them.
 */
var MouseDeleteTool = /** @class */ (function () {
    function MouseDeleteTool(mouseTool, feedbackDispatcher) {
        this.mouseTool = mouseTool;
        this.feedbackDispatcher = feedbackDispatcher;
        this.id = MouseDeleteTool_1.ID;
        this.deleteToolMouseListener = new DeleteToolMouseListener();
        this.isEditTool = true;
    }
    MouseDeleteTool_1 = MouseDeleteTool;
    MouseDeleteTool.prototype.enable = function () {
        this.mouseTool.register(this.deleteToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.ELEMENT_DELETION)]);
    };
    MouseDeleteTool.prototype.disable = function () {
        this.mouseTool.deregister(this.deleteToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [css_feedback_1.cursorFeedbackAction()]);
    };
    var MouseDeleteTool_1;
    MouseDeleteTool.ID = "glsp.delete-mouse";
    MouseDeleteTool = MouseDeleteTool_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.GLSP_TYPES.MouseTool)),
        __param(1, inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher)),
        __metadata("design:paramtypes", [Object, Object])
    ], MouseDeleteTool);
    return MouseDeleteTool;
}());
exports.MouseDeleteTool = MouseDeleteTool;
var DeleteToolMouseListener = /** @class */ (function (_super) {
    __extends(DeleteToolMouseListener, _super);
    function DeleteToolMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DeleteToolMouseListener.prototype.mouseUp = function (target, event) {
        if (!sprotty_1.isDeletable(target)) {
            return [];
        }
        var result = [];
        result.push(new operation_1.DeleteElementOperation([target.id]));
        if (!sprotty_1.isCtrlOrCmd(event)) {
            result.push(new sprotty_1.EnableDefaultToolsAction());
        }
        return result;
    };
    DeleteToolMouseListener = __decorate([
        inversify_1.injectable()
    ], DeleteToolMouseListener);
    return DeleteToolMouseListener;
}(sprotty_1.MouseListener));
exports.DeleteToolMouseListener = DeleteToolMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var change_bounds_tool_1 = __webpack_require__(/*! ./change-bounds-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js");
var creation_tool_1 = __webpack_require__(/*! ./creation-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/creation-tool.js");
var delete_tool_1 = __webpack_require__(/*! ./delete-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js");
var edge_edit_tool_1 = __webpack_require__(/*! ./edge-edit-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js");
var toolsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    // Register default tools
    bind(types_1.GLSP_TYPES.IDefaultTool).to(change_bounds_tool_1.ChangeBoundsTool);
    bind(types_1.GLSP_TYPES.IDefaultTool).to(edge_edit_tool_1.EdgeEditTool);
    bind(types_1.GLSP_TYPES.IDefaultTool).to(delete_tool_1.DelKeyDeleteTool);
    // Register  tools
    bind(types_1.GLSP_TYPES.ITool).to(delete_tool_1.MouseDeleteTool);
    bind(creation_tool_1.NodeCreationTool).toSelf().inSingletonScope();
    bind(creation_tool_1.EdgeCreationTool).toSelf().inSingletonScope();
    bind(types_1.GLSP_TYPES.ITool).toService(creation_tool_1.EdgeCreationTool);
    bind(types_1.GLSP_TYPES.ITool).toService(creation_tool_1.NodeCreationTool);
    sprotty_1.configureActionHandler({ bind: bind, isBound: isBound }, operation_1.TriggerNodeCreationAction.KIND, creation_tool_1.NodeCreationTool);
    sprotty_1.configureActionHandler({ bind: bind, isBound: isBound }, operation_1.TriggerEdgeCreationAction.KIND, creation_tool_1.EdgeCreationTool);
});
exports.default = toolsModule;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/drag-aware-mouse-listener.js":
/*!**************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/drag-aware-mouse-listener.js ***!
  \**************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
/**
 * A mouse listener that is aware of prior mouse dragging.
 *
 * Therefore, this listener distinguishes between mouse up events after dragging and
 * mouse up events without prior dragging. Subclasses may override the methods
 * `draggingMouseUp` and/or `nonDraggingMouseUp` to react to only these specific kinds
 * of mouse up events.
 */
var DragAwareMouseListener = /** @class */ (function (_super) {
    __extends(DragAwareMouseListener, _super);
    function DragAwareMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isMouseDown = false;
        _this._isMouseDrag = false;
        return _this;
    }
    DragAwareMouseListener.prototype.mouseDown = function (target, event) {
        this._isMouseDown = true;
        return [];
    };
    DragAwareMouseListener.prototype.mouseMove = function (target, event) {
        if (this._isMouseDown) {
            this._isMouseDrag = true;
        }
        return [];
    };
    DragAwareMouseListener.prototype.mouseUp = function (element, event) {
        this._isMouseDown = false;
        if (this._isMouseDrag) {
            this._isMouseDrag = false;
            return this.draggingMouseUp(element, event);
        }
        return this.nonDraggingMouseUp(element, event);
    };
    DragAwareMouseListener.prototype.nonDraggingMouseUp = function (element, event) {
        return [];
    };
    DragAwareMouseListener.prototype.draggingMouseUp = function (element, event) {
        return [];
    };
    Object.defineProperty(DragAwareMouseListener.prototype, "isMouseDrag", {
        get: function () {
            return this._isMouseDrag;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DragAwareMouseListener.prototype, "isMouseDown", {
        get: function () {
            return this._isMouseDown;
        },
        enumerable: true,
        configurable: true
    });
    return DragAwareMouseListener;
}(sprotty_1.MouseListener));
exports.DragAwareMouseListener = DragAwareMouseListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var operation_1 = __webpack_require__(/*! ../../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var model_1 = __webpack_require__(/*! ../reconnect/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
var selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var creation_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/creation-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
var css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
var edge_edit_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/edge-edit-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js");
var drag_aware_mouse_listener_1 = __webpack_require__(/*! ./drag-aware-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/drag-aware-mouse-listener.js");
var EdgeEditTool = /** @class */ (function () {
    function EdgeEditTool(selectionService, mouseTool, feedbackDispatcher, anchorRegistry, edgeRouterRegistry) {
        this.selectionService = selectionService;
        this.mouseTool = mouseTool;
        this.feedbackDispatcher = feedbackDispatcher;
        this.anchorRegistry = anchorRegistry;
        this.edgeRouterRegistry = edgeRouterRegistry;
        this.id = EdgeEditTool_1.ID;
    }
    EdgeEditTool_1 = EdgeEditTool;
    EdgeEditTool.prototype.enable = function () {
        this.edgeEditListener = new EdgeEditListener(this);
        this.mouseTool.register(this.edgeEditListener);
        this.selectionService.register(this.edgeEditListener);
        // install feedback move mouse listener for client-side move updates
        this.feedbackEdgeSourceMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeSourceMovingMouseListener(this.anchorRegistry);
        this.feedbackEdgeTargetMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeTargetMovingMouseListener(this.anchorRegistry);
        this.feedbackMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeRouteMovingMouseListener(this.edgeRouterRegistry);
    };
    EdgeEditTool.prototype.registerFeedbackListeners = function () {
        this.mouseTool.register(this.feedbackMovingListener);
        this.mouseTool.register(this.feedbackEdgeSourceMovingListener);
        this.mouseTool.register(this.feedbackEdgeTargetMovingListener);
    };
    EdgeEditTool.prototype.deregisterFeedbackListeners = function () {
        this.mouseTool.deregister(this.feedbackEdgeSourceMovingListener);
        this.mouseTool.deregister(this.feedbackEdgeTargetMovingListener);
        this.mouseTool.deregister(this.feedbackMovingListener);
    };
    EdgeEditTool.prototype.disable = function () {
        this.edgeEditListener.reset();
        this.selectionService.deregister(this.edgeEditListener);
        this.deregisterFeedbackListeners();
        this.mouseTool.deregister(this.edgeEditListener);
    };
    EdgeEditTool.prototype.dispatchFeedback = function (actions) {
        this.feedbackDispatcher.registerFeedback(this, actions);
    };
    var EdgeEditTool_1;
    EdgeEditTool.ID = "glsp.edge-edit-tool";
    EdgeEditTool = EdgeEditTool_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.GLSP_TYPES.SelectionService)),
        __param(1, inversify_1.inject(types_1.GLSP_TYPES.MouseTool)),
        __param(2, inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher)),
        __param(3, inversify_1.inject(sprotty_1.AnchorComputerRegistry)),
        __param(4, inversify_1.inject(sprotty_1.EdgeRouterRegistry)), __param(4, inversify_1.optional()),
        __metadata("design:paramtypes", [selection_service_1.SelectionService, Object, Object, sprotty_1.AnchorComputerRegistry,
            sprotty_1.EdgeRouterRegistry])
    ], EdgeEditTool);
    return EdgeEditTool;
}());
exports.EdgeEditTool = EdgeEditTool;
var EdgeEditListener = /** @class */ (function (_super) {
    __extends(EdgeEditListener, _super);
    function EdgeEditListener(tool) {
        var _this = _super.call(this) || this;
        _this.tool = tool;
        return _this;
    }
    EdgeEditListener.prototype.isValidEdge = function (edge) {
        return edge !== undefined && edge.id !== creation_tool_feedback_1.feedbackEdgeId(edge.root) && sprotty_1.isSelected(edge);
    };
    EdgeEditListener.prototype.setEdgeSelected = function (edge) {
        if (this.edge && this.edge.id !== edge.id) {
            // reset from a previously selected edge
            this.reset();
        }
        this.edge = edge;
        // note: order is important here as we want the reconnect handles to cover the routing handles
        var feedbackActions = [];
        if (sprotty_1.canEditRouting(edge)) {
            feedbackActions.push(new edge_edit_tool_feedback_1.SwitchRoutingModeAction([this.edge.id], []));
        }
        if (model_1.isReconnectable(edge)) {
            feedbackActions.push(new edge_edit_tool_feedback_1.ShowEdgeReconnectHandlesFeedbackAction(this.edge.id));
        }
        this.tool.dispatchFeedback(feedbackActions);
    };
    EdgeEditListener.prototype.isEdgeSelected = function () {
        return this.edge !== undefined && sprotty_1.isSelected(this.edge);
    };
    EdgeEditListener.prototype.setReconnectHandleSelected = function (edge, reconnectHandle) {
        if (this.edge && this.edge.target && this.edge.source) {
            if (model_1.isSourceRoutingHandle(edge, reconnectHandle)) {
                this.tool.dispatchFeedback([new edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction(),
                    css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.EDGE_RECONNECT),
                    new edge_edit_tool_feedback_1.DrawFeedbackEdgeSourceAction(this.edge.type, this.edge.targetId)]);
                this.reconnectMode = "NEW_SOURCE";
            }
            else if (model_1.isTargetRoutingHandle(edge, reconnectHandle)) {
                this.tool.dispatchFeedback([new edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction(),
                    css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.EDGE_CREATION_TARGET),
                    new creation_tool_feedback_1.DrawFeedbackEdgeAction(this.edge.type, this.edge.sourceId)]);
                this.reconnectMode = "NEW_TARGET";
            }
        }
    };
    EdgeEditListener.prototype.isReconnecting = function () {
        return this.reconnectMode !== undefined;
    };
    EdgeEditListener.prototype.isReconnectingNewSource = function () {
        return this.reconnectMode === "NEW_SOURCE";
    };
    EdgeEditListener.prototype.setRoutingHandleSelected = function (edge, routingHandle) {
        if (this.edge && this.edge.target && this.edge.source) {
            this.routingHandle = routingHandle;
        }
    };
    EdgeEditListener.prototype.requiresReconnect = function (sourceId, targetId) {
        return this.edge !== undefined && (this.edge.sourceId !== sourceId || this.edge.targetId !== targetId);
    };
    EdgeEditListener.prototype.setNewConnectable = function (connectable) {
        this.newConnectable = connectable;
    };
    EdgeEditListener.prototype.isReadyToReconnect = function () {
        return this.edge && this.isReconnecting() && this.newConnectable !== undefined;
    };
    EdgeEditListener.prototype.isReadyToReroute = function () {
        return this.routingHandle !== undefined;
    };
    EdgeEditListener.prototype.mouseDown = function (target, event) {
        var result = _super.prototype.mouseDown.call(this, target, event);
        if (event.button === 0) {
            var reconnectHandle = sprotty_1.findParentByFeature(target, model_1.isReconnectHandle);
            var routingHandle = !reconnectHandle ? sprotty_1.findParentByFeature(target, smodel_util_1.isRoutingHandle) : undefined;
            var edge = sprotty_1.findParentByFeature(target, smodel_util_1.isRoutable);
            if (this.isEdgeSelected() && edge && reconnectHandle) {
                // PHASE 2 Reconnect: Select reconnect handle on selected edge
                this.setReconnectHandleSelected(edge, reconnectHandle);
            }
            else if (this.isEdgeSelected() && edge && routingHandle) {
                // PHASE 2 Reroute: Select routing handle on selected edge
                this.setRoutingHandleSelected(edge, routingHandle);
            }
            else if (this.isValidEdge(edge)) {
                // PHASE 1: Select edge
                this.tool.registerFeedbackListeners();
                this.setEdgeSelected(edge);
            }
        }
        else if (event.button === 2) {
            this.reset();
        }
        return result;
    };
    EdgeEditListener.prototype.mouseMove = function (target, event) {
        var result = _super.prototype.mouseMove.call(this, target, event);
        if (this.isMouseDrag) {
            // reset any selected connectables when we are dragging, maybe the user is just panning
            this.setNewConnectable(undefined);
        }
        return result;
    };
    EdgeEditListener.prototype.mouseUp = function (target, event) {
        var result = _super.prototype.mouseUp.call(this, target, event);
        if (!this.isReadyToReconnect() && !this.isReadyToReroute()) {
            return result;
        }
        if (this.edge && this.newConnectable) {
            var sourceId = this.isReconnectingNewSource() ? this.newConnectable.id : this.edge.sourceId;
            var targetId = this.isReconnectingNewSource() ? this.edge.targetId : this.newConnectable.id;
            if (this.requiresReconnect(sourceId, targetId)) {
                result.push(new operation_1.ReconnectEdgeOperation(this.edge.id, sourceId, targetId));
            }
            this.reset();
        }
        else if (this.edge && this.routingHandle) {
            // we need to re-retrieve the edge as it might have changed due to a server udpate since we do not reset the state between reroute actions
            var latestEdge = target.index.getById(this.edge.id);
            if (latestEdge && smodel_util_1.isRoutable(latestEdge)) {
                result.push(new operation_1.ChangeRoutingPointsOperation([{ elementId: latestEdge.id, newRoutingPoints: latestEdge.routingPoints }]));
                this.routingHandle = undefined;
            }
        }
        return result;
    };
    EdgeEditListener.prototype.mouseOver = function (target, event) {
        if (this.edge && this.isReconnecting()) {
            var currentTarget = sprotty_1.findParentByFeature(target, sprotty_1.isConnectable);
            if (!this.newConnectable || currentTarget !== this.newConnectable) {
                this.setNewConnectable(currentTarget);
                if (currentTarget) {
                    if ((this.reconnectMode === 'NEW_SOURCE' && currentTarget.canConnect(this.edge, "source")) ||
                        (this.reconnectMode === 'NEW_TARGET' && currentTarget.canConnect(this.edge, "target"))) {
                        this.tool.dispatchFeedback([css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.EDGE_RECONNECT)]);
                        return [];
                    }
                }
                this.tool.dispatchFeedback([css_feedback_1.cursorFeedbackAction(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)]);
            }
        }
        return [];
    };
    EdgeEditListener.prototype.selectionChanged = function (root, selectedElements) {
        var e_1, _a;
        if (this.edge) {
            if (selectedElements.indexOf(this.edge.id) > -1) {
                // our active edge is still selected, nothing to do
                return;
            }
            if (this.isReconnecting()) {
                // we are reconnecting, so we may have clicked on a potential target
                return;
            }
            try {
                // try to find some other selected element and mark that active
                for (var _b = __values(selectedElements.reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var elementId = _c.value;
                    var element = root.index.getById(elementId);
                    if (element) {
                        var edge = sprotty_1.findParentByFeature(element, smodel_util_1.isRoutable);
                        if (this.isValidEdge(edge)) {
                            // PHASE 1: Select edge
                            this.setEdgeSelected(edge);
                            return;
                        }
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.reset();
        }
    };
    EdgeEditListener.prototype.reset = function () {
        this.resetFeedback();
        this.resetData();
    };
    EdgeEditListener.prototype.resetData = function () {
        this.edge = undefined;
        this.reconnectMode = undefined;
        this.newConnectable = undefined;
        this.routingHandle = undefined;
    };
    EdgeEditListener.prototype.resetFeedback = function () {
        var result = [];
        if (this.edge) {
            result.push(new edge_edit_tool_feedback_1.SwitchRoutingModeAction([], [this.edge.id]));
        }
        result.push.apply(result, __spread([new edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction(),
            css_feedback_1.cursorFeedbackAction(), new creation_tool_feedback_1.RemoveFeedbackEdgeAction()]));
        this.tool.dispatchFeedback(result);
        this.tool.deregisterFeedbackListeners();
    };
    return EdgeEditListener;
}(drag_aware_mouse_listener_1.DragAwareMouseListener));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/undo-redo/model.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/undo-redo/model.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var GlspUndoAction = /** @class */ (function () {
    function GlspUndoAction() {
        this.kind = GlspUndoAction.KIND;
    }
    GlspUndoAction.KIND = 'glspUndo';
    return GlspUndoAction;
}());
exports.GlspUndoAction = GlspUndoAction;
var GlspRedoAction = /** @class */ (function () {
    function GlspRedoAction() {
        this.kind = GlspRedoAction.KIND;
    }
    GlspRedoAction.KIND = 'glspRedo';
    return GlspRedoAction;
}());
exports.GlspRedoAction = GlspRedoAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var marker_navigator_1 = __webpack_require__(/*! ./marker-navigator */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js");
var validate_1 = __webpack_require__(/*! ./validate */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js");
exports.validationModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, validate_1.SetMarkersCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, validate_1.ApplyMarkersCommand);
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, validate_1.ClearMarkersCommand);
    bind(validate_1.ValidationFeedbackEmitter).toSelf().inSingletonScope();
});
exports.markerNavigatorModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(marker_navigator_1.SModelElementComparator).to(marker_navigator_1.LeftToRightTopToBottomComparator).inSingletonScope();
    bind(marker_navigator_1.MarkerNavigator).toSelf().inSingletonScope();
    sprotty_1.configureCommand({ bind: bind, isBound: isBound }, marker_navigator_1.NavigateToMarkerCommand);
});
/**
 * This module is not required if the diagram is deployed in Theia but only intended to be used
 * in a standalone deployment of GLSP. If the GLSP diagram is in Theia use the Theia-native
 * `registerMarkerNavigationCommands()` in `glsp-theia-integration` instead.
 */
exports.markerNavigatorContextMenuModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.GLSP_TYPES.IContextMenuProvider).to(marker_navigator_1.MarkerNavigatorContextMenuItemProvider).inSingletonScope();
    bind(sprotty_1.TYPES.KeyListener).to(marker_navigator_1.MarkerNavigatorKeyListener).inSingletonScope();
});


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js":
/*!**********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var marker_1 = __webpack_require__(/*! ../../utils/marker */ "../../../node_modules/@eclipse-glsp/client/lib/utils/marker.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var action_definitions_1 = __webpack_require__(/*! ../select/action-definitions */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/action-definitions.js");
var selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var NavigateToMarkerAction = /** @class */ (function () {
    function NavigateToMarkerAction(direction, selectedElementIds, severities) {
        if (direction === void 0) { direction = 'next'; }
        if (severities === void 0) { severities = MarkerNavigator.ALL_SEVERITIES; }
        this.direction = direction;
        this.selectedElementIds = selectedElementIds;
        this.severities = severities;
        this.kind = NavigateToMarkerAction.KIND;
    }
    NavigateToMarkerAction.KIND = 'navigateToMarker';
    return NavigateToMarkerAction;
}());
exports.NavigateToMarkerAction = NavigateToMarkerAction;
var SModelElementComparator = /** @class */ (function () {
    function SModelElementComparator() {
    }
    SModelElementComparator.prototype.compare = function (one, other) {
        return 0;
    };
    return SModelElementComparator;
}());
exports.SModelElementComparator = SModelElementComparator;
/** Specifies the order of two selectable and bounds-aware elements left-to-right and top-to-bottom. */
var LeftToRightTopToBottomComparator = /** @class */ (function () {
    function LeftToRightTopToBottomComparator() {
    }
    LeftToRightTopToBottomComparator.prototype.compare = function (one, other) {
        var boundsOne = sprotty_1.findParentByFeature(one, smodel_util_1.isSelectableAndBoundsAware);
        var boundsOther = sprotty_1.findParentByFeature(other, smodel_util_1.isSelectableAndBoundsAware);
        if (boundsOne && boundsOther) {
            if (boundsOne.bounds.y !== boundsOther.bounds.y) {
                return boundsOne.bounds.y - boundsOther.bounds.y;
            }
            if (boundsOne.bounds.x !== boundsOther.bounds.x) {
                return boundsOne.bounds.x - boundsOther.bounds.x;
            }
        }
        return 0;
    };
    LeftToRightTopToBottomComparator = __decorate([
        inversify_1.injectable()
    ], LeftToRightTopToBottomComparator);
    return LeftToRightTopToBottomComparator;
}());
exports.LeftToRightTopToBottomComparator = LeftToRightTopToBottomComparator;
/**
 * Specifies the next/previous marker in a graph model.
 *
 * This navigator uses a `MarkerComparator` to determine the order of markers. It can also return next/previous
 */
var MarkerNavigator = /** @class */ (function () {
    function MarkerNavigator() {
    }
    MarkerNavigator.prototype.next = function (root, current, predicate) {
        if (predicate === void 0) { predicate = marker_1.MarkerPredicates.ALL; }
        var markers = this.getMarkers(root, predicate);
        if (current === undefined) {
            return markers.length > 0 ? markers[0] : undefined;
        }
        return markers[this.getNextIndex(current, markers) % markers.length];
    };
    MarkerNavigator.prototype.previous = function (root, current, predicate) {
        if (predicate === void 0) { predicate = marker_1.MarkerPredicates.ALL; }
        var markers = this.getMarkers(root, predicate);
        if (current === undefined) {
            return markers.length > 0 ? markers[0] : undefined;
        }
        return markers[this.getPreviousIndex(current, markers) % markers.length];
    };
    MarkerNavigator.prototype.getMarkers = function (root, predicate) {
        var markers = marker_1.collectIssueMarkers(root);
        return markers.filter(predicate).sort(this.markerComparator.compare);
    };
    MarkerNavigator.prototype.getNextIndex = function (current, markers) {
        for (var index = 0; index < markers.length; index++) {
            if (this.markerComparator.compare(markers[index], current) > 0) {
                return index;
            }
        }
        return 0;
    };
    MarkerNavigator.prototype.getPreviousIndex = function (current, markers) {
        for (var index = markers.length - 1; index >= 0; index--) {
            if (this.markerComparator.compare(markers[index], current) < 0) {
                return index;
            }
        }
        return markers.length - 1;
    };
    MarkerNavigator.ALL_SEVERITIES = ['error', 'warning', 'info'];
    __decorate([
        inversify_1.inject(SModelElementComparator),
        __metadata("design:type", SModelElementComparator)
    ], MarkerNavigator.prototype, "markerComparator", void 0);
    MarkerNavigator = __decorate([
        inversify_1.injectable()
    ], MarkerNavigator);
    return MarkerNavigator;
}());
exports.MarkerNavigator = MarkerNavigator;
var NavigateToMarkerCommand = /** @class */ (function (_super) {
    __extends(NavigateToMarkerCommand, _super);
    function NavigateToMarkerCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    NavigateToMarkerCommand.prototype.execute = function (context) {
        var root = context.root;
        var selected = this.getSelectedElements(root);
        var target = this.getTarget(selected, root);
        if (target === undefined) {
            return root;
        }
        var selectableTarget = sprotty_1.findParentByFeature(target, sprotty_1.isSelectable);
        if (selectableTarget) {
            var deselect = selected.map(function (e) { return e.id; }).filter(function (id) { return id !== selectableTarget.id; });
            this.selectCommand = new action_definitions_1.SelectCommand(new sprotty_1.SelectAction([selectableTarget.id], deselect), this.selectionService);
            this.centerCommand = new sprotty_1.CenterCommand(new sprotty_1.CenterAction([selectableTarget.id]));
            this.centerCommand.execute(context);
            return this.selectCommand.execute(context);
        }
        return root;
    };
    NavigateToMarkerCommand.prototype.getSelectedElements = function (root) {
        var selectedIds = [];
        if (this.action.selectedElementIds !== undefined && this.action.selectedElementIds.length > 0) {
            selectedIds = this.action.selectedElementIds;
        }
        else {
            selectedIds = Array.from(this.selectionService.getSelectedElementIDs());
        }
        return selectedIds.map(function (id) { return root.index.getById(id); }).filter(sprotty_1.isSelectable);
    };
    NavigateToMarkerCommand.prototype.getTarget = function (selected, root) {
        var _this = this;
        var selectedBoundsAware = selected.filter(sprotty_1.isBoundsAware).sort(this.markerComparator.compare);
        var currentTopmost = selectedBoundsAware.length > 0 ? selectedBoundsAware[0] : undefined;
        if (this.action.direction === 'previous') {
            return this.markerNavigator.previous(root, currentTopmost, function (marker) { return _this.matchesSeverities(marker); });
        }
        else {
            return this.markerNavigator.next(root, currentTopmost, function (marker) { return _this.matchesSeverities(marker); });
        }
    };
    NavigateToMarkerCommand.prototype.matchesSeverities = function (marker) {
        var _this = this;
        return marker.issues.find(function (issue) { return _this.action.severities.includes(issue.severity); }) !== undefined;
    };
    NavigateToMarkerCommand.prototype.undo = function (context) {
        if (this.selectCommand) {
            context.root = this.selectCommand.undo(context);
        }
        return this.centerCommand ? this.centerCommand.undo(context) : context.root;
    };
    NavigateToMarkerCommand.prototype.redo = function (context) {
        if (this.selectCommand) {
            context.root = this.selectCommand.redo(context);
        }
        return this.centerCommand ? this.centerCommand.redo(context) : context.root;
    };
    NavigateToMarkerCommand.KIND = NavigateToMarkerAction.KIND;
    __decorate([
        inversify_1.inject(SModelElementComparator),
        __metadata("design:type", SModelElementComparator)
    ], NavigateToMarkerCommand.prototype, "markerComparator", void 0);
    __decorate([
        inversify_1.inject(MarkerNavigator),
        __metadata("design:type", MarkerNavigator)
    ], NavigateToMarkerCommand.prototype, "markerNavigator", void 0);
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.SelectionService),
        __metadata("design:type", selection_service_1.SelectionService)
    ], NavigateToMarkerCommand.prototype, "selectionService", void 0);
    NavigateToMarkerCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [NavigateToMarkerAction])
    ], NavigateToMarkerCommand);
    return NavigateToMarkerCommand;
}(sprotty_1.Command));
exports.NavigateToMarkerCommand = NavigateToMarkerCommand;
var MarkerNavigatorContextMenuItemProvider = /** @class */ (function () {
    function MarkerNavigatorContextMenuItemProvider() {
    }
    MarkerNavigatorContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var selectedElementIds = Array.from(this.selectionService.getSelectedElementIDs());
        var hasMarkers = marker_1.collectIssueMarkers(root).length > 0;
        return Promise.resolve([
            {
                id: "navigate", label: "Go to", group: "navigate", actions: [],
                children: [
                    {
                        id: "next-marker", label: "Next marker", group: "marker",
                        actions: [new NavigateToMarkerAction('next', selectedElementIds)],
                        isEnabled: function () { return hasMarkers; }
                    },
                    {
                        id: "previous-marker", label: "Previous marker", group: "marker",
                        actions: [new NavigateToMarkerAction('previous', selectedElementIds)],
                        isEnabled: function () { return hasMarkers; }
                    }
                ]
            }
        ]);
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.SelectionService),
        __metadata("design:type", selection_service_1.SelectionService)
    ], MarkerNavigatorContextMenuItemProvider.prototype, "selectionService", void 0);
    MarkerNavigatorContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], MarkerNavigatorContextMenuItemProvider);
    return MarkerNavigatorContextMenuItemProvider;
}());
exports.MarkerNavigatorContextMenuItemProvider = MarkerNavigatorContextMenuItemProvider;
var MarkerNavigatorKeyListener = /** @class */ (function (_super) {
    __extends(MarkerNavigatorKeyListener, _super);
    function MarkerNavigatorKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MarkerNavigatorKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Period', 'ctrl')) {
            return [new NavigateToMarkerAction('next')];
        }
        else if (keyboard_1.matchesKeystroke(event, 'Comma', 'ctrl')) {
            return [new NavigateToMarkerAction('previous')];
        }
        return [];
    };
    MarkerNavigatorKeyListener = __decorate([
        inversify_1.injectable()
    ], MarkerNavigatorKeyListener);
    return MarkerNavigatorKeyListener;
}(sprotty_1.KeyListener));
exports.MarkerNavigatorKeyListener = MarkerNavigatorKeyListener;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/features/validation/validate.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var editor_context_1 = __webpack_require__(/*! ../../base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js");
var marker_1 = __webpack_require__(/*! ../../utils/marker */ "../../../node_modules/@eclipse-glsp/client/lib/utils/marker.js");
var smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
var hover_1 = __webpack_require__(/*! ../hover/hover */ "../../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js");
var model_1 = __webpack_require__(/*! ../tool-feedback/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
/**
* Action to retrieve markers for a model
*/
var RequestMarkersAction = /** @class */ (function () {
    function RequestMarkersAction(elementsIDs) {
        if (elementsIDs === void 0) { elementsIDs = []; }
        this.elementsIDs = elementsIDs;
        this.kind = RequestMarkersAction.KIND;
    }
    RequestMarkersAction.KIND = 'requestMarkers';
    return RequestMarkersAction;
}());
exports.RequestMarkersAction = RequestMarkersAction;
/**
 * Feedback emitter sending actions for visualizing model validation feedback and
 * re-establishing this feedback visualization after the model has been updated.
 */
var ValidationFeedbackEmitter = /** @class */ (function () {
    function ValidationFeedbackEmitter() {
    }
    /**
     * Register the action that should be emitted for visualizing validation feedback.
     * @param action the action that should be emitted when the model is updated and that will visualize the model validation feedback.
     */
    ValidationFeedbackEmitter.prototype.registerValidationFeedbackAction = function (action) {
        // De-register old action responsible for applying markers and re-applying them when the model is updated
        this.feedbackActionDispatcher.deregisterFeedback(this, []);
        // Clear existing markers
        if (this.registeredAction !== undefined) {
            var clearMarkersAction_1 = new ClearMarkersAction(this.registeredAction.markers);
            this.actionDispatcher().then(function (dispatcher) { return dispatcher.dispatch(clearMarkersAction_1); });
        }
        // Register new action responsible for applying markers and re-applying them when the model is updated
        this.feedbackActionDispatcher.registerFeedback(this, [action]);
        this.registeredAction = action;
    };
    __decorate([
        inversify_1.inject(types_1.GLSP_TYPES.IFeedbackActionDispatcher),
        __metadata("design:type", Object)
    ], ValidationFeedbackEmitter.prototype, "feedbackActionDispatcher", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], ValidationFeedbackEmitter.prototype, "actionDispatcher", void 0);
    ValidationFeedbackEmitter = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], ValidationFeedbackEmitter);
    return ValidationFeedbackEmitter;
}());
exports.ValidationFeedbackEmitter = ValidationFeedbackEmitter;
/**
 * Action to set markers for a model
 */
var SetMarkersAction = /** @class */ (function () {
    function SetMarkersAction(markers) {
        this.markers = markers;
        this.kind = SetMarkersCommand.KIND;
    }
    return SetMarkersAction;
}());
exports.SetMarkersAction = SetMarkersAction;
function isSetMarkersAction(action) {
    return SetMarkersCommand.KIND === action.kind && ('markers' in action);
}
exports.isSetMarkersAction = isSetMarkersAction;
/**
 * Manages current markers for the outside of the GLSP.
 *
 * Typically this is rebound by the surrounding tool, e.g. Theia, to be aware of
 * and propagate current markers.
 */
var ExternalMarkerManager = /** @class */ (function () {
    function ExternalMarkerManager() {
    }
    ExternalMarkerManager.prototype.connect = function (actionDispatcher) {
        this.actionDispatcher = actionDispatcher;
    };
    ExternalMarkerManager.prototype.removeMarkers = function (markers) {
        if (this.actionDispatcher) {
            this.actionDispatcher.dispatch(new ClearMarkersAction(markers));
        }
    };
    ExternalMarkerManager = __decorate([
        inversify_1.injectable()
    ], ExternalMarkerManager);
    return ExternalMarkerManager;
}());
exports.ExternalMarkerManager = ExternalMarkerManager;
/**
 * Command for handling `SetMarkersAction`
 */
var SetMarkersCommand = /** @class */ (function (_super) {
    __extends(SetMarkersCommand, _super);
    function SetMarkersCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetMarkersCommand.prototype.execute = function (context) {
        return __awaiter(this, void 0, void 0, function () {
            var markers, uri, applyMarkersAction;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        markers = this.action.markers;
                        return [4 /*yield*/, this.editorContextService.getSourceUri()];
                    case 1:
                        uri = _a.sent();
                        if (this.externalMarkerManager)
                            this.externalMarkerManager.setMarkers(markers, uri);
                        applyMarkersAction = new ApplyMarkersAction(markers);
                        this.validationFeedbackEmitter.registerValidationFeedbackAction(applyMarkersAction);
                        return [2 /*return*/, context.root];
                }
            });
        });
    };
    SetMarkersCommand.prototype.undo = function (context) {
        return context.root;
    };
    SetMarkersCommand.prototype.redo = function (context) {
        return this.execute(context);
    };
    SetMarkersCommand.KIND = 'setMarkers';
    __decorate([
        inversify_1.inject(ValidationFeedbackEmitter),
        __metadata("design:type", ValidationFeedbackEmitter)
    ], SetMarkersCommand.prototype, "validationFeedbackEmitter", void 0);
    __decorate([
        inversify_1.inject(ExternalMarkerManager), inversify_1.optional(),
        __metadata("design:type", ExternalMarkerManager)
    ], SetMarkersCommand.prototype, "externalMarkerManager", void 0);
    __decorate([
        inversify_1.inject(editor_context_1.EditorContextService),
        __metadata("design:type", editor_context_1.EditorContextService)
    ], SetMarkersCommand.prototype, "editorContextService", void 0);
    SetMarkersCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetMarkersAction])
    ], SetMarkersCommand);
    return SetMarkersCommand;
}(sprotty_1.Command));
exports.SetMarkersCommand = SetMarkersCommand;
/**
 * Action for applying makers to a model
 */
var ApplyMarkersAction = /** @class */ (function () {
    function ApplyMarkersAction(markers) {
        this.markers = markers;
        this.kind = ApplyMarkersCommand.KIND;
    }
    ApplyMarkersAction = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [Array])
    ], ApplyMarkersAction);
    return ApplyMarkersAction;
}());
exports.ApplyMarkersAction = ApplyMarkersAction;
/**
 * Command for handling `ApplyMarkersAction`
 */
var ApplyMarkersCommand = /** @class */ (function (_super) {
    __extends(ApplyMarkersCommand, _super);
    function ApplyMarkersCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.priority = 0;
        return _this;
    }
    ApplyMarkersCommand.prototype.execute = function (context) {
        var e_1, _a;
        var markers = this.action.markers;
        try {
            for (var markers_1 = __values(markers), markers_1_1 = markers_1.next(); !markers_1_1.done; markers_1_1 = markers_1.next()) {
                var marker = markers_1_1.value;
                var modelElement = context.root.index.getById(marker.elementId);
                if (modelElement instanceof sprotty_1.SParentElement) {
                    var issueMarker = getOrCreateSIssueMarker(modelElement);
                    var issue = createSIssue(marker);
                    issueMarker.issues.push(issue);
                    addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (markers_1_1 && !markers_1_1.done && (_a = markers_1.return)) _a.call(markers_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return context.root;
    };
    ApplyMarkersCommand.prototype.undo = function (context) {
        return context.root;
    };
    ApplyMarkersCommand.prototype.redo = function (context) {
        return this.execute(context);
    };
    ApplyMarkersCommand.KIND = "applyMarkers";
    ApplyMarkersCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [ApplyMarkersAction])
    ], ApplyMarkersCommand);
    return ApplyMarkersCommand;
}(model_1.FeedbackCommand));
exports.ApplyMarkersCommand = ApplyMarkersCommand;
function addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker) {
    var maxSeverityCSSClass = hover_1.getSeverity(issueMarker);
    if (!modelElement.cssClasses) {
        modelElement.cssClasses = [maxSeverityCSSClass];
    }
    else {
        modelElement.cssClasses = modelElement.cssClasses.filter(function (value) { return !value.match('info|warning|error'); });
        modelElement.cssClasses.push(maxSeverityCSSClass);
    }
}
function removeCSSClassFromIssueParent(modelElement, issueMarker) {
    smodel_util_1.removeCssClasses(modelElement, [hover_1.getSeverity(issueMarker)]);
}
/**
 * Retrieves the `SIssueMarker` contained by the provided model element as
 * direct child or a newly instantiated `SIssueMarker` if no child
 * `SIssueMarker` exists.
 * @param modelElement for which the `SIssueMarker` should be retrieved or created.
 * @returns the child `SIssueMarker` or a new `SIssueMarker` if no such child exists.
 */
function getOrCreateSIssueMarker(modelElement) {
    var issueMarker;
    issueMarker = getSIssueMarker(modelElement);
    if (issueMarker === undefined) {
        issueMarker = new GIssueMarker();
        issueMarker.type = "marker";
        issueMarker.issues = new Array();
        modelElement.add(issueMarker);
    }
    return issueMarker;
}
/**
 * Retrieves the `SIssueMarker` contained by the provided model element as
 * direct child or `undefined` if such an `SIssueMarker` does not exist.
 * @param modelElement for which the `SIssueMarker` should be retrieved.
 * @returns the child `SIssueMarker` or `undefined` if no such child exists.
 */
function getSIssueMarker(modelElement) {
    var e_2, _a;
    var issueMarker;
    try {
        for (var _b = __values(modelElement.children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            if (child instanceof sprotty_1.SIssueMarker) {
                issueMarker = child;
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_2) throw e_2.error; }
    }
    return issueMarker;
}
/**
 * Creates an `SIssue` with `severity` and `message` set according to
 * the `kind` and `description` of the provided `Marker`.
 * @param marker `Marker` for that an `SIssue` should be created.
 * @returns the created `SIssue`.
 */
function createSIssue(marker) {
    var issue = new sprotty_1.SIssue();
    issue.message = marker.description;
    switch (marker.kind) {
        case marker_1.MarkerKind.ERROR: {
            issue.severity = 'error';
            break;
        }
        case marker_1.MarkerKind.INFO: {
            issue.severity = 'info';
            break;
        }
        case marker_1.MarkerKind.WARNING: {
            issue.severity = 'warning';
            break;
        }
    }
    return issue;
}
/**
 * Action for clearing makers of a model
 */
var ClearMarkersAction = /** @class */ (function () {
    function ClearMarkersAction(markers) {
        this.markers = markers;
        this.kind = ClearMarkersCommand.KIND;
    }
    ClearMarkersAction = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [Array])
    ], ClearMarkersAction);
    return ClearMarkersAction;
}());
exports.ClearMarkersAction = ClearMarkersAction;
/**
 * Command for handling `ClearMarkersAction`
 */
var ClearMarkersCommand = /** @class */ (function (_super) {
    __extends(ClearMarkersCommand, _super);
    function ClearMarkersCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ClearMarkersCommand.prototype.execute = function (context) {
        var e_3, _a;
        var markers = this.action.markers;
        try {
            for (var markers_2 = __values(markers), markers_2_1 = markers_2.next(); !markers_2_1.done; markers_2_1 = markers_2.next()) {
                var marker = markers_2_1.value;
                var modelElement = context.root.index.getById(marker.elementId);
                if (modelElement instanceof sprotty_1.SParentElement) {
                    var issueMarker = getSIssueMarker(modelElement);
                    if (issueMarker !== undefined) {
                        removeCSSClassFromIssueParent(modelElement, issueMarker);
                        for (var index = 0; index < issueMarker.issues.length; ++index) {
                            var issue = issueMarker.issues[index];
                            if (issue.message === marker.description) {
                                issueMarker.issues.splice(index--, 1);
                            }
                        }
                        if (issueMarker.issues.length === 0) {
                            modelElement.remove(issueMarker);
                        }
                        else {
                            addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker);
                        }
                    }
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (markers_2_1 && !markers_2_1.done && (_a = markers_2.return)) _a.call(markers_2);
            }
            finally { if (e_3) throw e_3.error; }
        }
        return context.root;
    };
    ClearMarkersCommand.prototype.undo = function (context) {
        return context.root;
    };
    ClearMarkersCommand.prototype.redo = function (context) {
        return this.execute(context);
    };
    ClearMarkersCommand.KIND = "clearMarkers";
    ClearMarkersCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(sprotty_1.TYPES.Action)),
        __metadata("design:paramtypes", [ClearMarkersAction])
    ], ClearMarkersCommand);
    return ClearMarkersCommand;
}(sprotty_1.Command));
exports.ClearMarkersCommand = ClearMarkersCommand;
var GIssueMarker = /** @class */ (function (_super) {
    __extends(GIssueMarker, _super);
    function GIssueMarker() {
        var _this = _super.call(this) || this;
        _this.features = new Set(sprotty_1.SDecoration.DEFAULT_FEATURES);
        return _this;
    }
    return GIssueMarker;
}(sprotty_1.SIssueMarker));
exports.GIssueMarker = GIssueMarker;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/index.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/index.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var di_config_1 = __webpack_require__(/*! ./base/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/base/di.config.js");
exports.defaultGLSPModule = di_config_1.default;
var di_config_2 = __webpack_require__(/*! ./features/command-palette/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js");
exports.glspCommandPaletteModule = di_config_2.default;
var di_config_3 = __webpack_require__(/*! ./features/context-menu/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js");
exports.glspContextMenuModule = di_config_3.default;
var di_config_4 = __webpack_require__(/*! ./features/copy-paste/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js");
exports.copyPasteContextMenuModule = di_config_4.copyPasteContextMenuModule;
exports.glspServerCopyPasteModule = di_config_4.glspServerCopyPasteModule;
var di_config_5 = __webpack_require__(/*! ./features/decoration/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js");
exports.glspDecorationModule = di_config_5.default;
var di_config_6 = __webpack_require__(/*! ./features/edit-label/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js");
exports.glspEditLabelModule = di_config_6.default;
var di_config_7 = __webpack_require__(/*! ./features/execute/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/di.config.js");
exports.executeCommandModule = di_config_7.default;
var di_config_8 = __webpack_require__(/*! ./features/hints/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js");
exports.modelHintsModule = di_config_8.default;
var di_config_9 = __webpack_require__(/*! ./features/hover/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js");
exports.glspHoverModule = di_config_9.default;
var di_config_10 = __webpack_require__(/*! ./features/layout/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js");
exports.layoutCommandsModule = di_config_10.default;
var di_config_11 = __webpack_require__(/*! ./features/mouse-tool/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js");
exports.glspMouseToolModule = di_config_11.default;
var di_config_12 = __webpack_require__(/*! ./features/navigation/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js");
exports.navigationModule = di_config_12.navigationModule;
var di_config_13 = __webpack_require__(/*! ./features/save/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/save/di.config.js");
exports.saveModule = di_config_13.default;
var di_config_14 = __webpack_require__(/*! ./features/select/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/select/di.config.js");
exports.glspSelectModule = di_config_14.default;
var di_config_15 = __webpack_require__(/*! ./features/tool-feedback/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js");
exports.toolFeedbackModule = di_config_15.default;
var di_config_16 = __webpack_require__(/*! ./features/tool-palette/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js");
exports.paletteModule = di_config_16.default;
var di_config_17 = __webpack_require__(/*! ./features/tools/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
exports.toolsModule = di_config_17.default;
var di_config_18 = __webpack_require__(/*! ./features/validation/di.config */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js");
exports.markerNavigatorModule = di_config_18.markerNavigatorModule;
exports.validationModule = di_config_18.validationModule;
__export(__webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js"));
__export(__webpack_require__(/*! ./base/model/update-model-command */ "../../../node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js"));
__export(__webpack_require__(/*! ./base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js"));
__export(__webpack_require__(/*! ./base/command-stack */ "../../../node_modules/@eclipse-glsp/client/lib/base/command-stack.js"));
__export(__webpack_require__(/*! ./base/action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js"));
__export(__webpack_require__(/*! ./base/model-initialization-constraint */ "../../../node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js"));
__export(__webpack_require__(/*! ./base/editor-context */ "../../../node_modules/@eclipse-glsp/client/lib/base/editor-context.js"));
__export(__webpack_require__(/*! ./base/selection-clearing-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js"));
__export(__webpack_require__(/*! ./base/source-uri-aware */ "../../../node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js"));
__export(__webpack_require__(/*! ./base/actions/context-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js"));
__export(__webpack_require__(/*! ./base/actions/edit-mode-action */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js"));
__export(__webpack_require__(/*! ./features/change-bounds/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js"));
__export(__webpack_require__(/*! ./features/change-bounds/movement-restrictor */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js"));
__export(__webpack_require__(/*! ./features/change-bounds/snap */ "../../../node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js"));
__export(__webpack_require__(/*! ./features/tool-palette/palette-item */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/palette-item.js"));
__export(__webpack_require__(/*! ./features/context-menu/delete-element-context-menu */ "../../../node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js"));
__export(__webpack_require__(/*! ./features/command-palette/server-command-palette-provider */ "../../../node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js"));
__export(__webpack_require__(/*! ./features/copy-paste/copy-paste-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js"));
__export(__webpack_require__(/*! ./features/decoration/decoration-placer */ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js"));
__export(__webpack_require__(/*! ./features/decoration/view */ "../../../node_modules/@eclipse-glsp/client/lib/features/decoration/view.js"));
__export(__webpack_require__(/*! ./features/edit-label/edit-label-validator */ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js"));
__export(__webpack_require__(/*! ./features/edit-label/edit-label-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js"));
__export(__webpack_require__(/*! ./features/execute/execute-command */ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/execute-command.js"));
__export(__webpack_require__(/*! ./features/execute/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/model.js"));
__export(__webpack_require__(/*! ./features/hints/request-type-hints-action */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/request-type-hints-action.js"));
__export(__webpack_require__(/*! ./features/hints/type-hints */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js"));
__export(__webpack_require__(/*! ./features/hints/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js"));
__export(__webpack_require__(/*! ./features/hover/hover */ "../../../node_modules/@eclipse-glsp/client/lib/features/hover/hover.js"));
__export(__webpack_require__(/*! ./features/layout/layout-commands */ "../../../node_modules/@eclipse-glsp/client/lib/features/layout/layout-commands.js"));
__export(__webpack_require__(/*! ./features/mouse-tool/mouse-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js"));
__export(__webpack_require__(/*! ./features/navigation/external-navigate-to-target-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/external-navigate-to-target-handler.js"));
__export(__webpack_require__(/*! ./features/navigation/navigation-action-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js"));
__export(__webpack_require__(/*! ./features/navigation/navigation-target-resolver */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js"));
__export(__webpack_require__(/*! ./features/validation/marker-navigator */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js"));
__export(__webpack_require__(/*! ./features/rank/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/rank/model.js"));
__export(__webpack_require__(/*! ./features/reconnect/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js"));
__export(__webpack_require__(/*! ./features/save/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/save/model.js"));
__export(__webpack_require__(/*! ./features/save/save */ "../../../node_modules/@eclipse-glsp/client/lib/features/save/save.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/change-bounds-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/creation-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/css-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/edge-edit-tool-feedback */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/feedback-action-dispatcher */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js"));
__export(__webpack_require__(/*! ./features/tool-feedback/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js"));
__export(__webpack_require__(/*! ./features/tool-palette/tool-palette */ "../../../node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js"));
__export(__webpack_require__(/*! ./features/tools/change-bounds-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js"));
__export(__webpack_require__(/*! ./features/tools/creation-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/creation-tool.js"));
__export(__webpack_require__(/*! ./features/tools/delete-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js"));
__export(__webpack_require__(/*! ./features/tools/drag-aware-mouse-listener */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/drag-aware-mouse-listener.js"));
__export(__webpack_require__(/*! ./features/tools/edge-edit-tool */ "../../../node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js"));
__export(__webpack_require__(/*! ./features/undo-redo/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/undo-redo/model.js"));
__export(__webpack_require__(/*! ./features/validation/validate */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js"));
__export(__webpack_require__(/*! ./lib/model */ "../../../node_modules/@eclipse-glsp/client/lib/lib/model.js"));
__export(__webpack_require__(/*! ./base/auto-complete/auto-complete-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js"));
__export(__webpack_require__(/*! ./base/auto-complete/auto-complete-widget */ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js"));
__export(__webpack_require__(/*! ./base/auto-complete/validation-decorator */ "../../../node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js"));
__export(__webpack_require__(/*! ./base/actions/edit-validation-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-validation-actions.js"));
__export(__webpack_require__(/*! ./base/types */ "../../../node_modules/@eclipse-glsp/client/lib/base/types.js"));
__export(__webpack_require__(/*! ./utils/array-utils */ "../../../node_modules/@eclipse-glsp/client/lib/utils/array-utils.js"));
__export(__webpack_require__(/*! ./utils/marker */ "../../../node_modules/@eclipse-glsp/client/lib/utils/marker.js"));
__export(__webpack_require__(/*! ./utils/smodel-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js"));
__export(__webpack_require__(/*! ./utils/viewpoint-util */ "../../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js"));
__export(__webpack_require__(/*! ./model-source/websocket-diagram-server */ "../../../node_modules/@eclipse-glsp/client/lib/model-source/websocket-diagram-server.js"));
__export(__webpack_require__(/*! ./model-source/glsp-server-status */ "../../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-server-status.js"));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/lib/model.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/lib/model.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var lib_1 = __webpack_require__(/*! sprotty/lib */ "../../../node_modules/sprotty/lib/index.js");
var model_1 = __webpack_require__(/*! ../features/hints/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
var model_2 = __webpack_require__(/*! ../features/save/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/save/model.js");
var GLSPGraph = /** @class */ (function (_super) {
    __extends(GLSPGraph, _super);
    function GLSPGraph() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.dirty = false;
        return _this;
    }
    GLSPGraph.prototype.isContainableElement = function (input) {
        return true;
    };
    GLSPGraph.DEFAULT_FEATURES = [lib_1.viewportFeature, lib_1.exportFeature, model_2.saveFeature, model_1.containerFeature];
    return GLSPGraph;
}(lib_1.SGraph));
exports.GLSPGraph = GLSPGraph;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/model-source/glsp-server-status.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/model-source/glsp-server-status.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var GLSPServerStatusAction = /** @class */ (function (_super) {
    __extends(GLSPServerStatusAction, _super);
    function GLSPServerStatusAction() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.timeout = -1;
        return _this;
    }
    return GLSPServerStatusAction;
}(sprotty_1.ServerStatusAction));
exports.GLSPServerStatusAction = GLSPServerStatusAction;
function isGLSPServerStatusAction(serverStatusAction) {
    return serverStatusAction.timeout !== undefined;
}
exports.isGLSPServerStatusAction = isGLSPServerStatusAction;
var ServerMessageAction = /** @class */ (function () {
    function ServerMessageAction() {
        this.kind = ServerMessageAction.KIND;
        this.details = '';
        this.timeout = -1;
    }
    ServerMessageAction.KIND = 'serverMessage';
    return ServerMessageAction;
}());
exports.ServerMessageAction = ServerMessageAction;
function isServerMessageAction(action) {
    return ServerMessageAction.KIND === action.kind && 'severity' in action && 'message' in action;
}
exports.isServerMessageAction = isServerMessageAction;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/model-source/websocket-diagram-server.js":
/*!***********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/model-source/websocket-diagram-server.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var rpc = __webpack_require__(/*! vscode-ws-jsonrpc */ "../../../node_modules/vscode-ws-jsonrpc/lib/index.js");
var vscode_ws_jsonrpc_1 = __webpack_require__(/*! vscode-ws-jsonrpc */ "../../../node_modules/vscode-ws-jsonrpc/lib/index.js");
var context_actions_1 = __webpack_require__(/*! ../base/actions/context-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/context-actions.js");
var execute_command_1 = __webpack_require__(/*! ../features/execute/execute-command */ "../../../node_modules/@eclipse-glsp/client/lib/features/execute/execute-command.js");
var request_type_hints_action_1 = __webpack_require__(/*! ../features/hints/request-type-hints-action */ "../../../node_modules/@eclipse-glsp/client/lib/features/hints/request-type-hints-action.js");
var operation_1 = __webpack_require__(/*! ../base/operations/operation */ "../../../node_modules/@eclipse-glsp/client/lib/base/operations/operation.js");
var save_1 = __webpack_require__(/*! ../features/save/save */ "../../../node_modules/@eclipse-glsp/client/lib/features/save/save.js");
var model_1 = __webpack_require__(/*! ../features/undo-redo/model */ "../../../node_modules/@eclipse-glsp/client/lib/features/undo-redo/model.js");
var validate_1 = __webpack_require__(/*! ../features/validation/validate */ "../../../node_modules/@eclipse-glsp/client/lib/features/validation/validate.js");
var edit_label_validator_1 = __webpack_require__(/*! ../features/edit-label/edit-label-validator */ "../../../node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js");
var copy_paste_actions_1 = __webpack_require__(/*! ../features/copy-paste/copy-paste-actions */ "../../../node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-actions.js");
var edit_validation_actions_1 = __webpack_require__(/*! ../base/actions/edit-validation-actions */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-validation-actions.js");
var navigation_action_handler_1 = __webpack_require__(/*! ../features/navigation/navigation-action-handler */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js");
var navigation_target_resolver_1 = __webpack_require__(/*! ../features/navigation/navigation-target-resolver */ "../../../node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
var edit_mode_action_1 = __webpack_require__(/*! ../base/actions/edit-mode-action */ "../../../node_modules/@eclipse-glsp/client/lib/base/actions/edit-mode-action.js");
var receivedFromServerProperty = '__receivedFromServer';
var GLSPWebsocketDiagramServer = /** @class */ (function (_super) {
    __extends(GLSPWebsocketDiagramServer, _super);
    function GLSPWebsocketDiagramServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GLSPWebsocketDiagramServer.prototype.listen = function (webSocket) {
        var _this = this;
        rpc.listen({
            webSocket: webSocket,
            onConnection: function (connection) {
                connection.listen();
                connection.onNotification(ActionMessageNotification.type, function (message) { return _this.messageReceived(message); });
                _this.connection = connection;
            }
        });
    };
    GLSPWebsocketDiagramServer.prototype.sendMessage = function (message) {
        if (this.connection) {
            this.connection.sendNotification(ActionMessageNotification.type, message);
        }
        else {
            throw new Error('WebSocket is not connected');
        }
    };
    GLSPWebsocketDiagramServer.prototype.initialize = function (registry) {
        registerDefaultGLSPServerActions(registry, this);
        this.clientId = this.viewerOptions.baseDiv;
    };
    GLSPWebsocketDiagramServer.prototype.handle = function (action) {
        if (action instanceof sprotty_1.RequestModelAction && action.options !== undefined)
            this._sourceUri = action.options.sourceUri;
        return _super.prototype.handle.call(this, action);
    };
    GLSPWebsocketDiagramServer.prototype.handleLocally = function (action) {
        if (edit_mode_action_1.isSetEditModeAction(action)) {
            return this.handleSetEditModeAction(action);
        }
        return _super.prototype.handleLocally.call(this, action);
    };
    GLSPWebsocketDiagramServer.prototype.handleComputedBounds = function (action) {
        return true;
    };
    GLSPWebsocketDiagramServer.prototype.handleSetEditModeAction = function (action) {
        return action[receivedFromServerProperty] !== true;
    };
    GLSPWebsocketDiagramServer.prototype.getSourceURI = function () {
        return this._sourceUri;
    };
    GLSPWebsocketDiagramServer = __decorate([
        inversify_1.injectable()
    ], GLSPWebsocketDiagramServer);
    return GLSPWebsocketDiagramServer;
}(sprotty_1.DiagramServer));
exports.GLSPWebsocketDiagramServer = GLSPWebsocketDiagramServer;
function registerDefaultGLSPServerActions(registry, diagramServer) {
    registry.register(save_1.SaveModelAction.KIND, diagramServer);
    registry.register(model_1.GlspUndoAction.KIND, diagramServer);
    registry.register(model_1.GlspRedoAction.KIND, diagramServer);
    registry.register(operation_1.CreateEdgeOperation.KIND, diagramServer);
    registry.register(operation_1.ReconnectEdgeOperation.KIND, diagramServer);
    registry.register(operation_1.ChangeRoutingPointsOperation.KIND, diagramServer);
    registry.register(operation_1.CreateNodeOperation.KIND, diagramServer);
    registry.register(operation_1.ChangeBoundsOperation.KIND, diagramServer);
    registry.register(operation_1.DeleteElementOperation.KIND, diagramServer);
    registry.register(execute_command_1.ExecuteServerCommandAction.KIND, diagramServer);
    registry.register(request_type_hints_action_1.RequestTypeHintsAction.KIND, diagramServer);
    registry.register(sprotty_1.ComputedBoundsAction.KIND, diagramServer);
    registry.register(sprotty_1.RequestBoundsCommand.KIND, diagramServer);
    registry.register(sprotty_1.RequestPopupModelAction.KIND, diagramServer);
    registry.register(sprotty_1.ServerStatusAction.KIND, diagramServer);
    registry.register(sprotty_1.RequestModelAction.KIND, diagramServer);
    registry.register(sprotty_1.ExportSvgAction.KIND, diagramServer);
    registry.register(context_actions_1.RequestContextActions.KIND, diagramServer);
    registry.register(edit_label_validator_1.ValidateLabelEditAction.KIND, diagramServer);
    registry.register(validate_1.RequestMarkersAction.KIND, diagramServer);
    registry.register(sprotty_1.LayoutAction.KIND, diagramServer);
    registry.register(sprotty_1.ApplyLabelEditAction.KIND, diagramServer);
    registry.register(copy_paste_actions_1.RequestClipboardDataAction.KIND, diagramServer);
    registry.register(copy_paste_actions_1.PasteOperationAction.KIND, diagramServer);
    registry.register(copy_paste_actions_1.CutOperationAction.KIND, diagramServer);
    registry.register(edit_validation_actions_1.RequestEditValidationAction.KIND, diagramServer);
    registry.register(navigation_action_handler_1.RequestNavigationTargetsAction.KIND, diagramServer);
    registry.register(navigation_target_resolver_1.ResolveNavigationTargetAction.KIND, diagramServer);
    registry.register(operation_1.CompoundOperation.KIND, diagramServer);
    registry.register(edit_mode_action_1.SetEditModeAction.KIND, diagramServer);
    // Register an empty handler for SwitchEditMode, to avoid runtime exceptions.
    // We don't want to support SwitchEditMode, but sprotty still sends some corresponding
    // actions.
    registry.register(sprotty_1.SwitchEditModeCommand.KIND, { handle: function (action) { return undefined; } });
}
exports.registerDefaultGLSPServerActions = registerDefaultGLSPServerActions;
var ActionMessageNotification;
(function (ActionMessageNotification) {
    ActionMessageNotification.type = new vscode_ws_jsonrpc_1.NotificationType('process');
})(ActionMessageNotification || (ActionMessageNotification = {}));


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/utils/array-utils.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/utils/array-utils.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function remove(array, value) {
    var index = array.indexOf(value);
    if (index >= 0) {
        array.splice(index, 1);
        return true;
    }
    return false;
}
exports.remove = remove;
function distinctAdd(array, value) {
    if (!array.includes(value)) {
        array.push(value);
        return true;
    }
    return false;
}
exports.distinctAdd = distinctAdd;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function minWidth(element) {
    var layoutOptions = getLayoutOptions(element);
    if (layoutOptions !== undefined && typeof layoutOptions.minWidth === 'number') {
        return layoutOptions.minWidth;
    }
    return 1;
}
exports.minWidth = minWidth;
function minHeight(element) {
    var layoutOptions = getLayoutOptions(element);
    if (layoutOptions !== undefined && typeof layoutOptions.minHeight === 'number') {
        return layoutOptions.minHeight;
    }
    return 1;
}
exports.minHeight = minHeight;
function getLayoutOptions(element) {
    var layoutOptions = element.layoutOptions;
    if (layoutOptions !== undefined) {
        return layoutOptions;
    }
    return undefined;
}
exports.getLayoutOptions = getLayoutOptions;
function isValidSize(element, size) {
    return size.width >= minWidth(element) && size.height >= minHeight(element);
}
exports.isValidSize = isValidSize;
function isValidMove(element, newPosition, movementRestrictor) {
    if (movementRestrictor) {
        return movementRestrictor.validate(newPosition, element);
    }
    return true;
}
exports.isValidMove = isValidMove;
function toValidElementMove(element, move, movementRestrictor) {
    if (!isValidMove(element, move.toPosition, movementRestrictor)) {
        return;
    }
    return move;
}
exports.toValidElementMove = toValidElementMove;
function toValidElementAndBounds(element, bounds, movementRestrictor) {
    if (!isValidMove(element, bounds.newPosition, movementRestrictor)) {
        return;
    }
    var elementMinWidth = minWidth(element);
    if (bounds.newSize.width < elementMinWidth) {
        bounds.newSize.width = elementMinWidth;
    }
    var elementMinHeight = minHeight(element);
    if (bounds.newSize.height < elementMinHeight) {
        bounds.newSize.height = elementMinHeight;
    }
    return bounds;
}
exports.toValidElementAndBounds = toValidElementAndBounds;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/utils/marker.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/utils/marker.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var MarkerKind;
(function (MarkerKind) {
    MarkerKind.INFO = "info";
    MarkerKind.WARNING = "warning";
    MarkerKind.ERROR = "error";
})(MarkerKind = exports.MarkerKind || (exports.MarkerKind = {}));
var MarkerPredicates;
(function (MarkerPredicates) {
    MarkerPredicates.ALL = function () { return true; };
    MarkerPredicates.ERRORS = function (marker) { return hasIssueWithSeverity(marker, MarkerKind.ERROR); };
    MarkerPredicates.WARNINGS = function (marker) { return hasIssueWithSeverity(marker, MarkerKind.WARNING); };
    MarkerPredicates.INFOS = function (marker) { return hasIssueWithSeverity(marker, MarkerKind.INFO); };
    function hasIssueWithSeverity(marker, severity) {
        return marker.issues.find(function (issue) { return issue.severity === severity; }) !== undefined;
    }
    MarkerPredicates.hasIssueWithSeverity = hasIssueWithSeverity;
})(MarkerPredicates = exports.MarkerPredicates || (exports.MarkerPredicates = {}));
function collectIssueMarkers(root) {
    var e_1, _a;
    var markers = [];
    try {
        for (var _b = __values(root.children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            if (child instanceof sprotty_1.SIssueMarker) {
                markers.push(child);
            }
            markers.push.apply(markers, __spread(collectIssueMarkers(child)));
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return markers;
}
exports.collectIssueMarkers = collectIssueMarkers;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
function getIndex(element) {
    return element.root.index;
}
exports.getIndex = getIndex;
function forEachElement(element, predicate, runnable) {
    getIndex(element).all()
        .filter(predicate)
        .forEach(runnable);
}
exports.forEachElement = forEachElement;
function getMatchingElements(element, predicate) {
    var matching = [];
    forEachElement(element, predicate, function (item) { return matching.push(item); });
    return matching;
}
exports.getMatchingElements = getMatchingElements;
function hasSelectedElements(element) {
    return getSelectedElementCount(element) > 0;
}
exports.hasSelectedElements = hasSelectedElements;
function getSelectedElementCount(element) {
    var selected = 0;
    getIndex(element).all()
        .filter(sprotty_1.isSelected)
        .forEach(function (e) { return selected = selected + 1; });
    return selected;
}
exports.getSelectedElementCount = getSelectedElementCount;
function isNotUndefined(element) {
    return element !== undefined;
}
exports.isNotUndefined = isNotUndefined;
function addCssClasses(root, cssClasses) {
    var e_1, _a;
    if (root.cssClasses === undefined) {
        root.cssClasses = [];
    }
    try {
        for (var cssClasses_1 = __values(cssClasses), cssClasses_1_1 = cssClasses_1.next(); !cssClasses_1_1.done; cssClasses_1_1 = cssClasses_1.next()) {
            var cssClass = cssClasses_1_1.value;
            if (root.cssClasses.indexOf(cssClass) < 0) {
                root.cssClasses.push(cssClass);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (cssClasses_1_1 && !cssClasses_1_1.done && (_a = cssClasses_1.return)) _a.call(cssClasses_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
exports.addCssClasses = addCssClasses;
function removeCssClasses(root, cssClasses) {
    var e_2, _a;
    if (root.cssClasses === undefined || root.cssClasses.length === 0) {
        return;
    }
    try {
        for (var cssClasses_2 = __values(cssClasses), cssClasses_2_1 = cssClasses_2.next(); !cssClasses_2_1.done; cssClasses_2_1 = cssClasses_2.next()) {
            var cssClass = cssClasses_2_1.value;
            var index = root.cssClasses.indexOf(cssClass);
            if (index !== -1) {
                root.cssClasses.splice(root.cssClasses.indexOf(cssClass), 1);
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (cssClasses_2_1 && !cssClasses_2_1.done && (_a = cssClasses_2.return)) _a.call(cssClasses_2);
        }
        finally { if (e_2) throw e_2.error; }
    }
}
exports.removeCssClasses = removeCssClasses;
function isNonRoutableSelectedMovableBoundsAware(element) {
    return isNonRoutableSelectedBoundsAware(element) && sprotty_1.isMoveable(element);
}
exports.isNonRoutableSelectedMovableBoundsAware = isNonRoutableSelectedMovableBoundsAware;
function isNonRoutableSelectedBoundsAware(element) {
    return sprotty_1.isBoundsAware(element) && sprotty_1.isSelected(element) && !isRoutable(element);
}
exports.isNonRoutableSelectedBoundsAware = isNonRoutableSelectedBoundsAware;
function isRoutable(element) {
    return element instanceof sprotty_1.SRoutableElement && element.routingPoints !== undefined;
}
exports.isRoutable = isRoutable;
function isRoutingHandle(element) {
    return element !== undefined && element instanceof sprotty_1.SRoutingHandle;
}
exports.isRoutingHandle = isRoutingHandle;
function isSelectableAndBoundsAware(element) {
    return sprotty_1.isSelectable(element) && sprotty_1.isBoundsAware(element);
}
exports.isSelectableAndBoundsAware = isSelectableAndBoundsAware;
function toElementAndBounds(element) {
    return {
        elementId: element.id,
        newPosition: {
            x: element.bounds.x,
            y: element.bounds.y
        },
        newSize: {
            width: element.bounds.width,
            height: element.bounds.height
        }
    };
}
exports.toElementAndBounds = toElementAndBounds;
function toElementAndRoutingPoints(element) {
    return {
        elementId: element.id,
        newRoutingPoints: element.routingPoints
    };
}
exports.toElementAndRoutingPoints = toElementAndRoutingPoints;
/**
 * Checks if the model is compatible with the passed type string.
 * (either has the same type or a subtype of this type)
 */
function hasCompatibleType(input, type) {
    var inputType = getElementTypeId(input);
    return inputType === type ? true : inputType.split(":").includes(type);
}
exports.hasCompatibleType = hasCompatibleType;
function getElementTypeId(input) {
    if (typeof input === 'string') {
        return input;
    }
    else {
        return input["type"];
    }
}
exports.getElementTypeId = getElementTypeId;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js":
/*!******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
/**
 * Return the position corresponding to this mouse event (Browser coordinates)
 * in the diagram coordinates system (i.e. relative to the Diagram's 0;0 point)
 *
 * This functions takes into account the following transformations:
 * - Location of the Diagram Canvas inside of the browser's page
 * - Current viewport Scroll and Zoom
 *
 * @param target
 *  An element from the diagram
 * @param mouseEvent
 *  A mouseEvent
 */
function getAbsolutePosition(target, mouseEvent) {
    var xPos = mouseEvent.pageX, yPos = mouseEvent.pageY;
    var canvasBounds = target.root.canvasBounds;
    xPos -= canvasBounds.x;
    yPos -= canvasBounds.y;
    var viewport = sprotty_1.findParentByFeature(target, sprotty_1.isViewport);
    var zoom = viewport ? viewport.zoom : 1;
    if (viewport) {
        var scroll_1 = { x: viewport.scroll.x, y: viewport.scroll.y };
        xPos += scroll_1.x * zoom;
        yPos += scroll_1.y * zoom;
        xPos /= zoom;
        yPos /= zoom;
    }
    xPos;
    return {
        x: xPos,
        y: yPos
    };
}
exports.getAbsolutePosition = getAbsolutePosition;
/**
 * Translates the bounds of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsoluteBounds(element) {
    var location = sprotty_1.isAlignable(element) ? element.alignment : sprotty_1.ORIGIN_POINT;
    var x = location.x;
    var y = location.y;
    var width = element.bounds.width;
    var height = element.bounds.height;
    return sprotty_1.translateBounds({ x: x, y: y, width: width, height: height }, element, element.root);
}
exports.toAbsoluteBounds = toAbsoluteBounds;
/**
 * Translates the position of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsolutePosition(target) {
    return toAbsoluteBounds(target);
}
exports.toAbsolutePosition = toAbsolutePosition;
/**
 * Translates the size of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsoluteSize(target) {
    return toAbsoluteBounds(target);
}
exports.toAbsoluteSize = toAbsoluteSize;


/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/bytesToUuid.js":
/*!****************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/bytesToUuid.js ***!
  \****************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
}

/* harmony default export */ __webpack_exports__["default"] = (bytesToUuid);

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/index.js":
/*!**********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/index.js ***!
  \**********************************************************************************************************************************************/
/*! exports provided: v1, v3, v4, v5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v1", function() { return _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v3", function() { return _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v4", function() { return _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v5.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "v5", function() { return _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });






/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/md5.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/md5.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
function md5(bytes) {
  if (typeof bytes == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Array(msg.length);

    for (var i = 0; i < msg.length; i++) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
/*
 * Convert an array of little-endian words to an array of bytes
 */


function md5ToHexEncodedArray(input) {
  var i;
  var x;
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';
  var hex;

  for (i = 0; i < length32; i += 8) {
    x = input[i >> 5] >>> i % 32 & 0xff;
    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
    output.push(hex);
  }

  return output;
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[(len + 64 >>> 9 << 4) + 14] = len;
  var i;
  var olda;
  var oldb;
  var oldc;
  var oldd;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (i = 0; i < x.length; i += 16) {
    olda = a;
    oldb = b;
    oldc = c;
    oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }

  return [a, b, c, d];
}
/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


function bytesToWords(input) {
  var i;
  var output = [];
  output[(input.length >> 2) - 1] = undefined;

  for (i = 0; i < output.length; i += 1) {
    output[i] = 0;
  }

  var length8 = input.length * 8;

  for (i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
  }

  return output;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xffff;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}

function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}

function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}

function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}

function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* harmony default export */ __webpack_exports__["default"] = (md5);

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/rng.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/rng.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return rng; });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
// find the complete implementation of crypto (msCrypto) on IE11.
var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);
var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

function rng() {
  if (!getRandomValues) {
    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/sha1.js":
/*!*********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/sha1.js ***!
  \*********************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Array(msg.length);

    for (var i = 0; i < msg.length; i++) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var i = 0; i < N; i++) {
    M[i] = new Array(16);

    for (var j = 0; j < 16; j++) {
      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];
    }
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var i = 0; i < N; i++) {
    var W = new Array(80);

    for (var t = 0; t < 16; t++) {
      W[t] = M[i][t];
    }

    for (var t = 16; t < 80; t++) {
      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var t = 0; t < 80; t++) {
      var s = Math.floor(t / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ __webpack_exports__["default"] = (sha1);

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v1.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v1.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/bytesToUuid.js");

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : Object(_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
}

/* harmony default export */ __webpack_exports__["default"] = (v1);

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v3.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v3.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/md5.js");


var v3 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (v3);

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v35.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v35.js ***!
  \********************************************************************************************************************************************/
/*! exports provided: DNS, URL, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DNS", function() { return DNS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "URL", function() { return URL; });
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/bytesToUuid.js");


function uuidToBytes(uuid) {
  // Note: We assume we're being passed a valid uuid string
  var bytes = [];
  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {
    bytes.push(parseInt(hex, 16));
  });
  return bytes;
}

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = new Array(str.length);

  for (var i = 0; i < str.length; i++) {
    bytes[i] = str.charCodeAt(i);
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ __webpack_exports__["default"] = (function (name, version, hashfunc) {
  var generateUUID = function generateUUID(value, namespace, buf, offset) {
    var off = buf && offset || 0;
    if (typeof value == 'string') value = stringToBytes(value);
    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);
    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');
    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3

    var bytes = hashfunc(namespace.concat(value));
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      for (var idx = 0; idx < 16; ++idx) {
        buf[off + idx] = bytes[idx];
      }
    }

    return buf || Object(_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__["default"])(bytes);
  }; // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name;
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
});

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v4.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v4.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/bytesToUuid.js");



function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }

  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || Object(_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
}

/* harmony default export */ __webpack_exports__["default"] = (v4);

/***/ }),

/***/ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v5.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v5.js ***!
  \*******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "../../../node_modules/@eclipse-glsp/client/node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = Object(_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (v5);

/***/ }),

/***/ "../../../node_modules/autocompleter/autocomplete.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/autocompleter/autocomplete.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? module.exports = factory() :
  undefined;
}(this, function () { 'use strict';

  /*
   * https://github.com/kraaden/autocomplete
   * Copyright (c) 2016 Denys Krasnoshchok
   * MIT License
   */
  function autocomplete(settings) {
      // just an alias to minimize JS file size
      var doc = document;
      var container = doc.createElement("div");
      var containerStyle = container.style;
      var userAgent = navigator.userAgent;
      var mobileFirefox = userAgent.indexOf("Firefox") !== -1 && userAgent.indexOf("Mobile") !== -1;
      var debounceWaitMs = settings.debounceWaitMs || 0;
      var preventSubmit = settings.preventSubmit || false;
      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead
      var keyUpEventName = mobileFirefox ? "input" : "keyup";
      var items = [];
      var inputValue = "";
      var minLen = 2;
      var showOnFocus = settings.showOnFocus;
      var selected;
      var keypressCounter = 0;
      var debounceTimer;
      if (settings.minLength !== undefined) {
          minLen = settings.minLength;
      }
      if (!settings.input) {
          throw new Error("input undefined");
      }
      var input = settings.input;
      container.className = "autocomplete " + (settings.className || "");
      containerStyle.position = "fixed";
      /**
       * Detach the container from DOM
       */
      function detach() {
          var parent = container.parentNode;
          if (parent) {
              parent.removeChild(container);
          }
      }
      /**
       * Clear debouncing timer if assigned
       */
      function clearDebounceTimer() {
          if (debounceTimer) {
              window.clearTimeout(debounceTimer);
          }
      }
      /**
       * Attach the container to DOM
       */
      function attach() {
          if (!container.parentNode) {
              doc.body.appendChild(container);
          }
      }
      /**
       * Check if container for autocomplete is displayed
       */
      function containerDisplayed() {
          return !!container.parentNode;
      }
      /**
       * Clear autocomplete state and hide container
       */
      function clear() {
          keypressCounter++;
          items = [];
          inputValue = "";
          selected = undefined;
          detach();
      }
      /**
       * Update autocomplete position
       */
      function updatePosition() {
          if (!containerDisplayed()) {
              return;
          }
          containerStyle.height = "auto";
          containerStyle.width = input.offsetWidth + "px";
          var inputRect = input.getBoundingClientRect();
          var top = inputRect.top + input.offsetHeight;
          var maxHeight = window.innerHeight - top;
          if (maxHeight < 0) {
              maxHeight = 0;
          }
          containerStyle.top = top + "px";
          containerStyle.bottom = "";
          containerStyle.left = inputRect.left + "px";
          containerStyle.maxHeight = maxHeight + "px";
          if (settings.customize) {
              settings.customize(input, inputRect, container, maxHeight);
          }
      }
      /**
       * Redraw the autocomplete div element with suggestions
       */
      function update() {
          // delete all children from autocomplete DOM container
          while (container.firstChild) {
              container.removeChild(container.firstChild);
          }
          // function for rendering autocomplete suggestions
          var render = function (item, currentValue) {
              var itemElement = doc.createElement("div");
              itemElement.textContent = item.label || "";
              return itemElement;
          };
          if (settings.render) {
              render = settings.render;
          }
          // function to render autocomplete groups
          var renderGroup = function (groupName, currentValue) {
              var groupDiv = doc.createElement("div");
              groupDiv.textContent = groupName;
              return groupDiv;
          };
          if (settings.renderGroup) {
              renderGroup = settings.renderGroup;
          }
          var fragment = doc.createDocumentFragment();
          var prevGroup = "#9?$";
          items.forEach(function (item) {
              if (item.group && item.group !== prevGroup) {
                  prevGroup = item.group;
                  var groupDiv = renderGroup(item.group, inputValue);
                  if (groupDiv) {
                      groupDiv.className += " group";
                      fragment.appendChild(groupDiv);
                  }
              }
              var div = render(item, inputValue);
              if (div) {
                  div.addEventListener("click", function (ev) {
                      settings.onSelect(item, input);
                      clear();
                      ev.preventDefault();
                      ev.stopPropagation();
                  });
                  if (item === selected) {
                      div.className += " selected";
                  }
                  fragment.appendChild(div);
              }
          });
          container.appendChild(fragment);
          if (items.length < 1) {
              if (settings.emptyMsg) {
                  var empty = doc.createElement("div");
                  empty.className = "empty";
                  empty.textContent = settings.emptyMsg;
                  container.appendChild(empty);
              }
              else {
                  clear();
                  return;
              }
          }
          attach();
          updatePosition();
          updateScroll();
      }
      function updateIfDisplayed() {
          if (containerDisplayed()) {
              update();
          }
      }
      function resizeEventHandler() {
          updateIfDisplayed();
      }
      function scrollEventHandler(e) {
          if (e.target !== container) {
              updateIfDisplayed();
          }
          else {
              e.preventDefault();
          }
      }
      function keyupEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
              var key = ignore_1[_i];
              if (keyCode === key) {
                  return;
              }
          }
          // the down key is used to open autocomplete
          if (keyCode === 40 /* Down */ && containerDisplayed()) {
              return;
          }
          startFetch(0 /* Keyboard */);
      }
      /**
       * Automatically move scroll bar if selected item is not visible
       */
      function updateScroll() {
          var elements = container.getElementsByClassName("selected");
          if (elements.length > 0) {
              var element = elements[0];
              // make group visible
              var previous = element.previousElementSibling;
              if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                  element = previous;
              }
              if (element.offsetTop < container.scrollTop) {
                  container.scrollTop = element.offsetTop;
              }
              else {
                  var selectBottom = element.offsetTop + element.offsetHeight;
                  var containerBottom = container.scrollTop + container.offsetHeight;
                  if (selectBottom > containerBottom) {
                      container.scrollTop += selectBottom - containerBottom;
                  }
              }
          }
      }
      /**
       * Select the previous item in suggestions
       */
      function selectPrev() {
          if (items.length < 1) {
              selected = undefined;
          }
          else {
              if (selected === items[0]) {
                  selected = items[items.length - 1];
              }
              else {
                  for (var i = items.length - 1; i > 0; i--) {
                      if (selected === items[i] || i === 1) {
                          selected = items[i - 1];
                          break;
                      }
                  }
              }
          }
      }
      /**
       * Select the next item in suggestions
       */
      function selectNext() {
          if (items.length < 1) {
              selected = undefined;
          }
          if (!selected || selected === items[items.length - 1]) {
              selected = items[0];
              return;
          }
          for (var i = 0; i < (items.length - 1); i++) {
              if (selected === items[i]) {
                  selected = items[i + 1];
                  break;
              }
          }
      }
      function keydownEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
              var containerIsDisplayed = containerDisplayed();
              if (keyCode === 27 /* Esc */) {
                  clear();
              }
              else {
                  if (!containerDisplayed || items.length < 1) {
                      return;
                  }
                  keyCode === 38 /* Up */
                      ? selectPrev()
                      : selectNext();
                  update();
              }
              ev.preventDefault();
              if (containerIsDisplayed) {
                  ev.stopPropagation();
              }
              return;
          }
          if (keyCode === 13 /* Enter */) {
              if (selected) {
                  settings.onSelect(selected, input);
                  clear();
              }
              if (preventSubmit) {
                  ev.preventDefault();
              }
          }
      }
      function focusEventHandler() {
          if (showOnFocus) {
              startFetch(1 /* Focus */);
          }
      }
      function startFetch(trigger) {
          // if multiple keys were pressed, before we get update from server,
          // this may cause redrawing our autocomplete multiple times after the last key press.
          // to avoid this, the number of times keyboard was pressed will be
          // saved and checked before redraw our autocomplete box.
          var savedKeypressCounter = ++keypressCounter;
          var val = input.value;
          if (val.length >= minLen || trigger === 1 /* Focus */) {
              clearDebounceTimer();
              debounceTimer = window.setTimeout(function () {
                  settings.fetch(val, function (elements) {
                      if (keypressCounter === savedKeypressCounter && elements) {
                          items = elements;
                          inputValue = val;
                          selected = items.length > 0 ? items[0] : undefined;
                          update();
                      }
                  }, 0 /* Keyboard */);
              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
          }
          else {
              clear();
          }
      }
      function blurEventHandler() {
          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
          setTimeout(function () {
              if (doc.activeElement !== input) {
                  clear();
              }
          }, 200);
      }
      /**
       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
       */
      container.addEventListener("mousedown", function (evt) {
          evt.stopPropagation();
          evt.preventDefault();
      });
      /**
       * This function will remove DOM elements and clear event handlers
       */
      function destroy() {
          input.removeEventListener("focus", focusEventHandler);
          input.removeEventListener("keydown", keydownEventHandler);
          input.removeEventListener(keyUpEventName, keyupEventHandler);
          input.removeEventListener("blur", blurEventHandler);
          window.removeEventListener("resize", resizeEventHandler);
          doc.removeEventListener("scroll", scrollEventHandler, true);
          clearDebounceTimer();
          clear();
          // prevent the update call if there are pending AJAX requests
          keypressCounter++;
      }
      // setup event handlers
      input.addEventListener("keydown", keydownEventHandler);
      input.addEventListener(keyUpEventName, keyupEventHandler);
      input.addEventListener("blur", blurEventHandler);
      input.addEventListener("focus", focusEventHandler);
      window.addEventListener("resize", resizeEventHandler);
      doc.addEventListener("scroll", scrollEventHandler, true);
      return {
          destroy: destroy
      };
  }

  return autocomplete;

}));


/***/ }),

/***/ "../../../node_modules/balloon-css/balloon.min.css":
/*!*********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/balloon-css/balloon.min.css ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../css-loader/dist/cjs.js!./balloon.min.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/balloon-css/balloon.min.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/base64-js/index.js":
/*!************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/base64-js/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "../../../node_modules/buffer/index.js":
/*!*********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/buffer/index.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "../../../node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "../../../node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "../../../node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../../../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/css/diagram.css":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp-examples/workflow-sprotty/css/diagram.css ***!
  \**********************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty-graph {\n    font-size: 15pt;\n    border: none;\n    height: 100%;\n}\n\n.sprotty-popup {\n    z-index: 1;\n}\n\n.sprotty-text {\n    font-size: 12pt;\n    text-anchor: middle\n}\n\n.sprotty-node {\n    stroke-width: 0;\n    font-weight: bold;\n}\n\n.sprotty-node.mouseover:not(.selected) {\n    stroke-width: 3;\n}\n\n.sprotty-comp {\n    line-height: 3px;\n    font-weight: normal;\n    text-align: left;\n}\n\n.sprotty-label {\n    stroke-width: 0;\n    fill: #000;\n    font-weight: inherit;\n    text-align: inherit;\n    font-size: 100%;\n}\n\n.sprotty-label.heading {\n    font-weight: bold;\n}\n\n.sprotty-icon {\n    fill: black;\n    stroke-width: 0;\n}\n\n.sprotty-label.icon {\n    fill: #fff;\n}\n\n.sprotty-button {\n    fill: #152;\n    stroke-width: 0;\n}\n\n.sprotty-edge {\n    fill: none;\n    stroke-width: 2px;\n}\n\n.sprotty-edge.selected {\n    stroke-width: 4px;\n}\n\n.sprotty-edge.mouseover:not(.selected) {\n    stroke-width: 3px;\n}\n\n.sprotty-edge>.sprotty-routing-handle {\n    r: 7px;\n    fill: #884;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-edge>.sprotty-routing-handle[data-kind='line'] {\n    opacity: 0.35;\n}\n\n.sprotty-edge>.sprotty-routing-handle.selected {\n    fill: #66a;\n}\n\n.sprotty-edge>.sprotty-routing-handle.mouseover {\n    stroke: #112;\n    stroke-width: 1;\n}\n\n.sprotty-missing {\n    stroke-width: 1;\n    stroke: #f00;\n    fill: #f00;\n    font-size: 14pt;\n    text-anchor: middle;\n}\n\n.sprotty-node:not(.selected) {\n    stroke-width: 1px;\n}\n\n.sprotty-node.task.automated {\n    fill: gray;\n}\n\n.sprotty-node.task.manual {\n    fill: lightblue;\n}\n\ntext {\n    stroke-width: 0;\n    stroke: #000;\n    fill: #000;\n    font-family: sans-serif;\n    font-size: 8pt;\n    text-anchor: middle;\n}\n\n.sprotty-edge.weighted.low, .sprotty-edge.weighted.low .arrow {\n    stroke: lightblue\n}\n\n.sprotty-edge.weighted.low .arrow {\n    fill: lightblue;\n}\n\n.sprotty-edge.weighted, .sprotty-edge.weighted .arrow, .sprotty-edge.weighted.medium, .sprotty-edge.weighted.medium .arrow {\n    stroke: rgb(53, 53, 226);\n}\n\n.sprotty-edge.weighted .arrow, .sprotty-edge.weighted.medium .arrow {\n    fill: rgb(53, 53, 226);\n}\n\n.sprotty-edge.weighted.high, .sprotty-edge.weighted.high .arrow {\n    stroke: darkblue\n}\n\n.sprotty-edge.weighted.high .arrow {\n    fill: darkblue;\n}\n\npolygon.sprotty-node {\n    fill: white;\n    stroke-width: 1pt;\n}\n\n.sprotty-node.selected {\n    stroke-width: 4;\n}\n\nsvg {\n    border-style: solid;\n    border-width: 1px;\n    border-color: #bbb;\n}\n\n.label-edit input {\n    margin-top: -1px;\n    margin-left: -5px;\n}\n\ng .movement-not-allowed>.sprotty-node {\n    stroke: var(--glsp-error-foreground)!important;\n}\n\n.sprotty-resize-handle.movement-not-allowed {\n    stroke: var(--glsp-error-foreground)!important;\n    fill: var(--glsp-error-foreground)!important;\n}\n\n.error>.sprotty-node {\n    stroke: var(--glsp-error-foreground)!important;\n}\n\n.warning>.sprotty-node {\n    stroke: var(--glsp-warning-foreground)!important;\n}\n\n.info>.sprotty-node {\n    stroke: var(--glsp-info-foreground)!important;\n}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/command-palette.css":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/command-palette.css ***!
  \***********************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.command-palette {\n    transition: opacity 0.3s linear;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions {\n    background: white;\n    z-index: 1000;\n    overflow: auto;\n    box-sizing: border-box;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions .icon {\n    padding-right: 0.3em;\n}\n\n.command-palette-suggestions em {\n    font-weight: bold;\n    font-style: normal;\n}\n\n.command-palette-suggestions>div {\n    padding: 0 4px;\n}\n\n.command-palette-suggestions .group {\n    background: #eee;\n}\n\n.command-palette-suggestions>div:hover:not(.group), .command-palette-suggestions>div.selected {\n    cursor: pointer;\n}\n\n.command-palette-suggestions>div:hover:not(.group) {\n    background: #e0e0e0;\n}\n\n.command-palette-suggestions>div.selected {\n    background: #bbdefb;\n}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/decoration.css":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/decoration.css ***!
  \******************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ":root {\n    --glsp-error-foreground: var(--theia-editorError-foreground);\n    --glsp-warning-foreground: var(--theia-editorWarning-foreground);\n    --glsp-info-foreground: var(--theia-editorInfo-foreground);\n}\n\n.sprotty-issue-background {\n    fill: var(--theia-editor-background);\n}\n\n.sprotty-issue.sprotty-error {\n    fill: var(--glsp-error-foreground);\n}\n\n.sprotty-issue.sprotty-warning {\n    fill: var(--glsp-warning-foreground);\n}\n\n.sprotty-issue.sprotty-info {\n    fill: var(--glsp-info-foreground);\n}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/glsp-sprotty.css":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/glsp-sprotty.css ***!
  \********************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty {\n    padding: 0px;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n}\n\n.sprotty svg text::selection {\n    background: none;\n}\n\n.sprotty-hidden {\n    display: block;\n    position: absolute;\n    width: 0px;\n    height: 0px;\n}\n\n.sprotty-popup {\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    position: absolute;\n    background: white;\n    border-radius: 5px;\n    border: 1px solid;\n    max-width: 400px;\n    min-width: 100px;\n}\n\n.sprotty-popup>div {\n    margin: 10px;\n}\n\n.sprotty-popup-closed {\n    display: none;\n}\n\n.sprotty-resize-handle {\n    /* radius does not work in Firefox */\n    r: 7px;\n    fill: #884;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-resize-handle.selected {\n    fill: #66a;\n}\n\n.sprotty-resize-handle.active {\n    fill: var(--theia-menu-selectionBackground);\n}\n\n.sprotty-resize-handle.mouseover {\n    stroke: #112;\n    stroke-width: 1;\n}\n\n.node-creation-mode {\n    cursor: copy;\n}\n\n.overlap-forbidden-mode {\n    cursor: not-allowed;\n}\n\n.default-mode {\n    cursor: default;\n}\n\n.edge-modification-not-allowed-mode {\n    cursor: no-drop;\n}\n\n.edge-creation-select-source-mode {\n    cursor: pointer;\n}\n\n.edge-creation-select-target-mode, .edge-reconnect-select-target-mode {\n    cursor: crosshair;\n}\n\n.resize-mode {\n    cursor: none;\n}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/@eclipse-glsp/client/css/tool-palette.css":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/@eclipse-glsp/client/css/tool-palette.css ***!
  \********************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Imports
exports.push([module.i, "@import url(https://use.fontawesome.com/releases/v5.6.3/css/all.css);", ""]);

// Module
exports.push([module.i, "/********************************************************************************\n * Copyright (c) 2019 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n/* Css for main container */\n\n.tool-palette {\n    position: absolute;\n    right: 25px;\n    top: 25px;\n    text-align: center;\n    width: 180px;\n    display: block;\n    z-index: 1000;\n    border-style: solid;\n    border-width: 0px;\n    border-color: #bbb;\n    border-radius: 5px;\n    color: black;\n    user-select: none;\n    /* supported by Chrome and Opera */\n    -webkit-user-select: none;\n    /* Safari */\n    -khtml-user-select: none;\n    /* Konqueror HTML */\n    -moz-user-select: none;\n    /* Firefox */\n    -ms-user-select: none;\n    /* Internet Explorer/Edge */\n}\n\n/* Css for header compartment */\n\n.palette-header {\n    padding: 0.4em;\n    text-align: left;\n    font-size: 1.15em;\n    font-weight: bold;\n    background: #CCCCCC;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.header-icon i {\n    margin-right: 0.2em\n}\n\n.header-tools i {\n    border: 1px solid #CCCCCC;\n    padding: 0.2em;\n    margin-right: 0.2em;\n}\n\n.header-tools i:hover {\n    background: #DFDFDF;\n}\n\n.header-tools .clicked {\n    background: #BDDAEF;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n}\n\n/*Css for palette body compartment */\n\n.palette-body {\n    background: rgba(100, 100, 100, 0.2);\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.tool-group {\n    text-align: left;\n    background: #EDEDEE;\n}\n\n.group-header {\n    font-weight: bold;\n    background: #CCCCCC;\n}\n\n.group-header:hover {\n    background: #AAAAAA;\n}\n\n.group-header i {\n    padding: 0.4em;\n}\n\n.tool-button {\n    background: #EDEDEE;\n    padding: 0.4em;\n}\n\n.tool-button:hover {\n    background: #DFDFDF;\n}\n\n.tool-button.clicked {\n    background: #BDDAEF;\n}\n\n.tool-button.collapsed {\n    display: none;\n}\n\n.collapsible-palette {\n    overflow: auto;\n    transition: max-height 0.2s ease-out;\n}\n\n.minimize-palette-button {\n    position: absolute;\n    right: 12px;\n    top: 25px;\n    z-index: 1000;\n}\n\n.search-input {\n    background: var(--theia-input-background);\n    color: var(--theia-input-foreground);\n    border: var(--theia-border-width) solid var(--theia-input-border);\n    font-family: var(--theia-ui-font-family);\n    font-size: var(--theia-ui-font-size1);\n    line-height: var(--theia-content-line-height);\n    padding-left: 3px;\n    width: 150px;\n    margin-left: 5px;\n}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/balloon-css/balloon.min.css":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/balloon-css/balloon.min.css ***!
  \******************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "button[data-balloon]{overflow:visible}[data-balloon]{position:relative;cursor:pointer}[data-balloon]:after{filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;font-family:sans-serif !important;font-weight:normal !important;font-style:normal !important;text-shadow:none !important;font-size:12px !important;background:rgba(17,17,17,0.9);border-radius:4px;color:#fff;content:attr(data-balloon);padding:.5em 1em;position:absolute;white-space:nowrap;z-index:10}[data-balloon]:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(0)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;content:'';position:absolute;z-index:10}[data-balloon]:hover:before,[data-balloon]:hover:after,[data-balloon][data-balloon-visible]:before,[data-balloon][data-balloon-visible]:after{filter:alpha(opacity=100);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";-moz-opacity:1;-khtml-opacity:1;opacity:1;pointer-events:auto}[data-balloon]:not([data-balloon-pos]):after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):hover:after,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon]:not([data-balloon-pos]):hover:before,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon].font-awesome:after{font-family:FontAwesome, sans-serif !important}[data-balloon][data-balloon-break]:after{white-space:pre}[data-balloon][data-balloon-blunt]:before,[data-balloon][data-balloon-blunt]:after{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}[data-balloon][data-balloon-pos=\"up\"]:after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:hover:after,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up\"]:hover:before,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:after{bottom:100%;left:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:before{bottom:100%;left:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:hover:after,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:hover:before,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:after{bottom:100%;right:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:before{bottom:100%;right:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:hover:after,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:hover:before,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down']:after{left:50%;margin-top:11px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;left:50%;margin-top:5px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:hover:after,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down']:hover:before,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down-left']:after{left:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;left:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:hover:after,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-left']:hover:before,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:after{right:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;right:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:hover:after,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:hover:before,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='left']:after{margin-right:11px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(-90 18 18)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:6px;height:18px;margin-right:5px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:hover:after,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='left']:hover:before,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:after{left:100%;margin-left:11px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(90 6 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:6px;height:18px;left:100%;margin-left:5px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:hover:after,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:hover:before,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-length='small']:after{white-space:normal;width:80px}[data-balloon][data-balloon-length='medium']:after{white-space:normal;width:150px}[data-balloon][data-balloon-length='large']:after{white-space:normal;width:260px}[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:380px}@media screen and (max-width: 768px){[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:90vw}}[data-balloon][data-balloon-length='fit']:after{white-space:normal;width:100%}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sprotty/css/edit-label.css":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!/home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/css/edit-label.css ***!
  \*****************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "/********************************************************************************\n * Copyright (c) 2019-2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.label-edit input, .label-edit textarea {\n    background: rgba(255, 255, 255, 0.5);\n    border-radius: 5px;\n    border: 0;\n    width: 99%;\n    height: 99%;\n}\n\n.label-edit input:focus, .label-edit textarea:focus {\n    outline: none;\n    outline-offset: 0px;\n}\n\n.label-edit {\n    border-left: 1px dotted gray;\n}\n\n.label-edit.validation-warning {\n    color: orange;\n    border-left: 1px dotted orange;\n}\n\n.label-edit.validation-error {\n    color: red;\n    border-left: 1px dotted red;\n}", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/cjs.js!./css/diagram.css":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/cjs.js!./css/diagram.css ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ "../../../node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, "html, body {\n    width: 100%;\n    height: 100%;\n    padding: 0px;\n}\n\n.sprotty {\n    display: flex;\n    height: 100%;\n}\n\n.sprotty svg {\n    width: 100%;\n    flex: 1;\n    border-style: solid;\n    border-width: 0px;\n}\n\n.sprotty svg:focus {\n    border-width: 0;\n    outline: none;\n}\n", ""]);



/***/ }),

/***/ "../../../node_modules/css-loader/dist/runtime/api.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/css-loader/dist/runtime/api.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "../../../node_modules/file-saver/dist/FileSaver.min.js":
/*!**************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/file-saver/dist/FileSaver.min.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){"use strict";function b(a,b){return"undefined"==typeof b?b={autoBom:!1}:"object"!=typeof b&&(console.warn("Deprecated: Expected third argument to be a object"),b={autoBom:!b}),b.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?new Blob(["\uFEFF",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open("GET",b),e.responseType="blob",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error("could not download file")},e.send()}function d(a){var b=new XMLHttpRequest;b.open("HEAD",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent("click"))}catch(c){var b=document.createEvent("MouseEvents");b.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof global&&global.global===global?global:void 0,a=f.saveAs||("object"!=typeof window||window!==f?function(){}:"download"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement("a");g=g||b.name||"download",j.download=g,j.rel="noopener","string"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target="_blank")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:"msSaveOrOpenBlob"in navigator?function(f,g,h){if(g=g||f.name||"download","string"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement("a");i.href=f,i.target="_blank",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open("","_blank"),e&&(e.document.title=e.document.body.innerText="downloading..."),"string"==typeof a)return c(a,b,d);var g="application/octet-stream"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\/[\d]+/.test(navigator.userAgent);if((i||g&&h)&&"object"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,"data:attachment/file;"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a, true&&(module.exports=a)});


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "../../../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../../node_modules/html-parse-stringify2/lib/parse-tag.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/html-parse-stringify2/lib/parse-tag.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var attrRE = /([\w-]+)|=|(['"])([.\s\S]*?)\2/g;
var voidElements = __webpack_require__(/*! void-elements */ "../../../node_modules/void-elements/index.js");

module.exports = function (tag) {
    var i = 0;
    var key;
    var expectingValueAfterEquals = true;
    var res = {
        type: 'tag',
        name: '',
        voidElement: false,
        attrs: {},
        children: []
    };

    tag.replace(attrRE, function (match) {
        if (match === '=') {
            expectingValueAfterEquals = true;
            i++;
            return;
        }

        if (!expectingValueAfterEquals) {
            if (key) {
                res.attrs[key] = key; // boolean attribute
            }
            key=match;
        } else {
            if (i === 0) {
                if (voidElements[match] || tag.charAt(tag.length - 2) === '/') {
                    res.voidElement = true;
                }
                res.name = match;
            } else {
                res.attrs[key] = match.replace(/^['"]|['"]$/g, '');
                key=undefined;
            }
        }
        i++;
        expectingValueAfterEquals = false;
    });

    return res;
};


/***/ }),

/***/ "../../../node_modules/html-parse-stringify2/lib/parse.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/html-parse-stringify2/lib/parse.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*jshint -W030 */
var tagRE = /(?:<!--[\S\s]*?-->|<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>)/g;
var parseTag = __webpack_require__(/*! ./parse-tag */ "../../../node_modules/html-parse-stringify2/lib/parse-tag.js");
// re-used obj for quick lookups of components
var empty = Object.create ? Object.create(null) : {};
// common logic for pushing a child node onto a list
function pushTextNode(list, html, level, start, ignoreWhitespace) {
    // calculate correct end of the content slice in case there's
    // no tag after the text node.
    var end = html.indexOf('<', start);
    var content = html.slice(start, end === -1 ? undefined : end);
    // if a node is nothing but whitespace, collapse it as the spec states:
    // https://www.w3.org/TR/html4/struct/text.html#h-9.1
    if (/^\s*$/.test(content)) {
        content = ' ';
    }
    // don't add whitespace-only text nodes if they would be trailing text nodes
    // or if they would be leading whitespace-only text nodes:
    //  * end > -1 indicates this is not a trailing text node
    //  * leading node is when level is -1 and list has length 0
    if ((!ignoreWhitespace && end > -1 && level + list.length >= 0) || content !== ' ') {
        list.push({
            type: 'text',
            content: content
        });
    }
}

module.exports = function parse(html, options) {
    options || (options = {});
    options.components || (options.components = empty);
    var result = [];
    var current;
    var level = -1;
    var arr = [];
    var byTag = {};
    var inComponent = false;

    html.replace(tagRE, function (tag, index) {
        if (inComponent) {
            if (tag !== ('</' + current.name + '>')) {
                return;
            } else {
                inComponent = false;
            }
        }

        var isOpen = tag.charAt(1) !== '/';
        var isComment = tag.indexOf('<!--') === 0;
        var start = index + tag.length;
        var nextChar = html.charAt(start);
        var parent;

        if (isOpen && !isComment) {
            level++;

            current = parseTag(tag);
            if (current.type === 'tag' && options.components[current.name]) {
                current.type = 'component';
                inComponent = true;
            }

            if (!current.voidElement && !inComponent && nextChar && nextChar !== '<') {
                pushTextNode(current.children, html, level, start, options.ignoreWhitespace);
            }

            byTag[current.tagName] = current;

            // if we're at root, push new base node
            if (level === 0) {
                result.push(current);
            }

            parent = arr[level - 1];

            if (parent) {
                parent.children.push(current);
            }

            arr[level] = current;
        }

        if (isComment || !isOpen || current.voidElement) {
            if (!isComment) {
                level--;
            }
            if (!inComponent && nextChar !== '<' && nextChar) {
                // trailing text node
                // if we're at the root, push a base text node. otherwise add as
                // a child to the current node.
                parent = level === -1 ? result : arr[level].children;
                pushTextNode(parent, html, level, start, options.ignoreWhitespace);
            }
        }
    });

    // If the "html" passed isn't actually html, add it as a text node.
    if (!result.length && html.length) {
        pushTextNode(result, html, 0, 0, options.ignoreWhitespace);
    }

    return result;
};


/***/ }),

/***/ "../../../node_modules/ieee754/index.js":
/*!**********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/ieee754/index.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/decorator_utils.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/decorator_utils.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {
    var metadataKey = METADATA_KEY.TAGGED;
    _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);
}
exports.tagParameter = tagParameter;
function tagProperty(annotationTarget, propertyName, metadata) {
    var metadataKey = METADATA_KEY.TAGGED_PROP;
    _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);
}
exports.tagProperty = tagProperty;
function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {
    var paramsOrPropertiesMetadata = {};
    var isParameterDecorator = (typeof parameterIndex === "number");
    var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;
    if (isParameterDecorator && propertyName !== undefined) {
        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);
    }
    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {
        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
    }
    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];
    if (!Array.isArray(paramOrPropertyMetadata)) {
        paramOrPropertyMetadata = [];
    }
    else {
        for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {
            var m = paramOrPropertyMetadata_1[_i];
            if (m.key === metadata.key) {
                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + " " + m.key.toString());
            }
        }
    }
    paramOrPropertyMetadata.push(metadata);
    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}
function _decorate(decorators, target) {
    Reflect.decorate(decorators, target);
}
function _param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
function decorate(decorator, target, parameterIndex) {
    if (typeof parameterIndex === "number") {
        _decorate([_param(parameterIndex, decorator)], target);
    }
    else if (typeof parameterIndex === "string") {
        Reflect.decorate([decorator], target, parameterIndex);
    }
    else {
        _decorate([decorator], target);
    }
}
exports.decorate = decorate;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/inject.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/inject.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_msgs_1 = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
var LazyServiceIdentifer = (function () {
    function LazyServiceIdentifer(cb) {
        this._cb = cb;
    }
    LazyServiceIdentifer.prototype.unwrap = function () {
        return this._cb();
    };
    return LazyServiceIdentifer;
}());
exports.LazyServiceIdentifer = LazyServiceIdentifer;
function inject(serviceIdentifier) {
    return function (target, targetKey, index) {
        if (serviceIdentifier === undefined) {
            throw new Error(error_msgs_1.UNDEFINED_INJECT_ANNOTATION(target.name));
        }
        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.inject = inject;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/injectable.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/injectable.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERRORS_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
function injectable() {
    return function (target) {
        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {
            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);
        }
        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);
        return target;
    };
}
exports.injectable = injectable;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/multi_inject.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/multi_inject.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
function multiInject(serviceIdentifier) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.multiInject = multiInject;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/named.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/named.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
function named(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.named = named;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/optional.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/optional.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
function optional() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.optional = optional;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/post_construct.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/post_construct.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERRORS_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
function postConstruct() {
    return function (target, propertyKey, descriptor) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.POST_CONSTRUCT, propertyKey);
        if (Reflect.hasOwnMetadata(METADATA_KEY.POST_CONSTRUCT, target.constructor)) {
            throw new Error(ERRORS_MSGS.MULTIPLE_POST_CONSTRUCT_METHODS);
        }
        Reflect.defineMetadata(METADATA_KEY.POST_CONSTRUCT, metadata, target.constructor);
    };
}
exports.postConstruct = postConstruct;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/tagged.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/tagged.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
function tagged(metadataKey, metadataValue) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.tagged = tagged;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/target_name.js":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/target_name.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
function targetName(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.targetName = targetName;


/***/ }),

/***/ "../../../node_modules/inversify/lib/annotation/unmanaged.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/annotation/unmanaged.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
function unmanaged() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.unmanaged = unmanaged;


/***/ }),

/***/ "../../../node_modules/inversify/lib/bindings/binding.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/bindings/binding.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
var Binding = (function () {
    function Binding(serviceIdentifier, scope) {
        this.id = id_1.id();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = scope;
        this.type = literal_types_1.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());
exports.Binding = Binding;


/***/ }),

/***/ "../../../node_modules/inversify/lib/bindings/binding_count.js":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/bindings/binding_count.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BindingCount = {
    MultipleBindingsAvailable: 2,
    NoBindingsAvailable: 0,
    OnlyOneBindingAvailable: 1
};
exports.BindingCount = BindingCount;


/***/ }),

/***/ "../../../node_modules/inversify/lib/constants/error_msgs.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/constants/error_msgs.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
exports.DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
exports.NULL_ARGUMENT = "NULL argument";
exports.KEY_NOT_FOUND = "Key Not Found";
exports.AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
exports.CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
exports.NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
exports.MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
exports.MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";
exports.UNDEFINED_INJECT_ANNOTATION = function (name) {
    return "@inject called with undefined this could mean that the class " + name + " has " +
        "a circular dependency problem. You can use a LazyServiceIdentifer to  " +
        "overcome this limitation.";
};
exports.CIRCULAR_DEPENDENCY = "Circular dependency found:";
exports.NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
exports.INVALID_BINDING_TYPE = "Invalid binding type:";
exports.NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
exports.INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
exports.INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
exports.INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " +
    "used as service identifier";
exports.INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " +
    "must be applied to the parameters of a class constructor or a class property.";
exports.ARGUMENTS_LENGTH_MISMATCH = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "The number of constructor arguments in the derived class " +
        (values[0] + " must be >= than the number of constructor arguments of its base class.");
};
exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " +
    "must be an object.";
exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " +
    "be a string ('singleton' or 'transient').";
exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = "Invalid Container option. Auto bind injectable must " +
    "be a boolean";
exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = "Invalid Container option. Skip base check must " +
    "be a boolean";
exports.MULTIPLE_POST_CONSTRUCT_METHODS = "Cannot apply @postConstruct decorator multiple times in the same class";
exports.POST_CONSTRUCT_ERROR = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "@postConstruct error in class " + values[0] + ": " + values[1];
};
exports.CIRCULAR_DEPENDENCY_IN_FACTORY = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "It looks like there is a circular dependency " +
        ("in one of the '" + values[0] + "' bindings. Please investigate bindings with") +
        ("service identifier '" + values[1] + "'.");
};
exports.STACK_OVERFLOW = "Maximum call stack size exceeded";


/***/ }),

/***/ "../../../node_modules/inversify/lib/constants/literal_types.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/constants/literal_types.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var BindingScopeEnum = {
    Request: "Request",
    Singleton: "Singleton",
    Transient: "Transient"
};
exports.BindingScopeEnum = BindingScopeEnum;
var BindingTypeEnum = {
    ConstantValue: "ConstantValue",
    Constructor: "Constructor",
    DynamicValue: "DynamicValue",
    Factory: "Factory",
    Function: "Function",
    Instance: "Instance",
    Invalid: "Invalid",
    Provider: "Provider"
};
exports.BindingTypeEnum = BindingTypeEnum;
var TargetTypeEnum = {
    ClassProperty: "ClassProperty",
    ConstructorArgument: "ConstructorArgument",
    Variable: "Variable"
};
exports.TargetTypeEnum = TargetTypeEnum;


/***/ }),

/***/ "../../../node_modules/inversify/lib/constants/metadata_keys.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/constants/metadata_keys.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.NAMED_TAG = "named";
exports.NAME_TAG = "name";
exports.UNMANAGED_TAG = "unmanaged";
exports.OPTIONAL_TAG = "optional";
exports.INJECT_TAG = "inject";
exports.MULTI_INJECT_TAG = "multi_inject";
exports.TAGGED = "inversify:tagged";
exports.TAGGED_PROP = "inversify:tagged_props";
exports.PARAM_TYPES = "inversify:paramtypes";
exports.DESIGN_PARAM_TYPES = "design:paramtypes";
exports.POST_CONSTRUCT = "post_construct";


/***/ }),

/***/ "../../../node_modules/inversify/lib/container/container.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/container/container.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var binding_1 = __webpack_require__(/*! ../bindings/binding */ "../../../node_modules/inversify/lib/bindings/binding.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_reader_1 = __webpack_require__(/*! ../planning/metadata_reader */ "../../../node_modules/inversify/lib/planning/metadata_reader.js");
var planner_1 = __webpack_require__(/*! ../planning/planner */ "../../../node_modules/inversify/lib/planning/planner.js");
var resolver_1 = __webpack_require__(/*! ../resolution/resolver */ "../../../node_modules/inversify/lib/resolution/resolver.js");
var binding_to_syntax_1 = __webpack_require__(/*! ../syntax/binding_to_syntax */ "../../../node_modules/inversify/lib/syntax/binding_to_syntax.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "../../../node_modules/inversify/lib/utils/serialization.js");
var container_snapshot_1 = __webpack_require__(/*! ./container_snapshot */ "../../../node_modules/inversify/lib/container/container_snapshot.js");
var lookup_1 = __webpack_require__(/*! ./lookup */ "../../../node_modules/inversify/lib/container/lookup.js");
var Container = (function () {
    function Container(containerOptions) {
        var options = containerOptions || {};
        if (typeof options !== "object") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
        }
        if (options.defaultScope === undefined) {
            options.defaultScope = literal_types_1.BindingScopeEnum.Transient;
        }
        else if (options.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Transient &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Request) {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
        }
        if (options.autoBindInjectable === undefined) {
            options.autoBindInjectable = false;
        }
        else if (typeof options.autoBindInjectable !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);
        }
        if (options.skipBaseClassChecks === undefined) {
            options.skipBaseClassChecks = false;
        }
        else if (typeof options.skipBaseClassChecks !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);
        }
        this.options = {
            autoBindInjectable: options.autoBindInjectable,
            defaultScope: options.defaultScope,
            skipBaseClassChecks: options.skipBaseClassChecks
        };
        this.id = id_1.id();
        this._bindingDictionary = new lookup_1.Lookup();
        this._snapshots = [];
        this._middleware = null;
        this.parent = null;
        this._metadataReader = new metadata_reader_1.MetadataReader();
    }
    Container.merge = function (container1, container2) {
        var container = new Container();
        var bindingDictionary = planner_1.getBindingDictionary(container);
        var bindingDictionary1 = planner_1.getBindingDictionary(container1);
        var bindingDictionary2 = planner_1.getBindingDictionary(container2);
        function copyDictionary(origin, destination) {
            origin.traverse(function (key, value) {
                value.forEach(function (binding) {
                    destination.add(binding.serviceIdentifier, binding.clone());
                });
            });
        }
        copyDictionary(bindingDictionary1, bindingDictionary);
        copyDictionary(bindingDictionary2, bindingDictionary);
        return container;
    };
    Container.prototype.load = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var getHelpers = this._getContainerModuleHelpersFactory();
        for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {
            var currentModule = modules_1[_a];
            var containerModuleHelpers = getHelpers(currentModule.id);
            currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction);
        }
    };
    Container.prototype.loadAsync = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        getHelpers = this._getContainerModuleHelpersFactory();
                        _a = 0, modules_2 = modules;
                        _b.label = 1;
                    case 1:
                        if (!(_a < modules_2.length)) return [3, 4];
                        currentModule = modules_2[_a];
                        containerModuleHelpers = getHelpers(currentModule.id);
                        return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _a++;
                        return [3, 1];
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype.unload = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var conditionFactory = function (expected) { return function (item) {
            return item.moduleId === expected;
        }; };
        modules.forEach(function (module) {
            var condition = conditionFactory(module.id);
            _this._bindingDictionary.removeByCondition(condition);
        });
    };
    Container.prototype.bind = function (serviceIdentifier) {
        var scope = this.options.defaultScope || literal_types_1.BindingScopeEnum.Transient;
        var binding = new binding_1.Binding(serviceIdentifier, scope);
        this._bindingDictionary.add(serviceIdentifier, binding);
        return new binding_to_syntax_1.BindingToSyntax(binding);
    };
    Container.prototype.rebind = function (serviceIdentifier) {
        this.unbind(serviceIdentifier);
        return this.bind(serviceIdentifier);
    };
    Container.prototype.unbind = function (serviceIdentifier) {
        try {
            this._bindingDictionary.remove(serviceIdentifier);
        }
        catch (e) {
            throw new Error(ERROR_MSGS.CANNOT_UNBIND + " " + serialization_1.getServiceIdentifierAsString(serviceIdentifier));
        }
    };
    Container.prototype.unbindAll = function () {
        this._bindingDictionary = new lookup_1.Lookup();
    };
    Container.prototype.isBound = function (serviceIdentifier) {
        var bound = this._bindingDictionary.hasKey(serviceIdentifier);
        if (!bound && this.parent) {
            bound = this.parent.isBound(serviceIdentifier);
        }
        return bound;
    };
    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
        var bound = false;
        if (this._bindingDictionary.hasKey(serviceIdentifier)) {
            var bindings = this._bindingDictionary.get(serviceIdentifier);
            var request_1 = planner_1.createMockRequest(this, serviceIdentifier, key, value);
            bound = bindings.some(function (b) { return b.constraint(request_1); });
        }
        if (!bound && this.parent) {
            bound = this.parent.isBoundTagged(serviceIdentifier, key, value);
        }
        return bound;
    };
    Container.prototype.snapshot = function () {
        this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));
    };
    Container.prototype.restore = function () {
        var snapshot = this._snapshots.pop();
        if (snapshot === undefined) {
            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);
        }
        this._bindingDictionary = snapshot.bindings;
        this._middleware = snapshot.middleware;
    };
    Container.prototype.createChild = function (containerOptions) {
        var child = new Container(containerOptions || this.options);
        child.parent = this;
        return child;
    };
    Container.prototype.applyMiddleware = function () {
        var middlewares = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
        }
        var initial = (this._middleware) ? this._middleware : this._planAndResolve();
        this._middleware = middlewares.reduce(function (prev, curr) { return curr(prev); }, initial);
    };
    Container.prototype.applyCustomMetadataReader = function (metadataReader) {
        this._metadataReader = metadataReader;
    };
    Container.prototype.get = function (serviceIdentifier) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getTagged = function (serviceIdentifier, key, value) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getNamed = function (serviceIdentifier, named) {
        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.getAll = function (serviceIdentifier) {
        return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
        return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getAllNamed = function (serviceIdentifier, named) {
        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.resolve = function (constructorFunction) {
        var tempContainer = this.createChild();
        tempContainer.bind(constructorFunction).toSelf();
        return tempContainer.get(constructorFunction);
    };
    Container.prototype._getContainerModuleHelpersFactory = function () {
        var _this = this;
        var setModuleId = function (bindingToSyntax, moduleId) {
            bindingToSyntax._binding.moduleId = moduleId;
        };
        var getBindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _bind = _this.bind.bind(_this);
                var bindingToSyntax = _bind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getUnbindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _unbind = _this.unbind.bind(_this);
                _unbind(serviceIdentifier);
            };
        };
        var getIsboundFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _isBound = _this.isBound.bind(_this);
                return _isBound(serviceIdentifier);
            };
        };
        var getRebindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _rebind = _this.rebind.bind(_this);
                var bindingToSyntax = _rebind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        return function (mId) { return ({
            bindFunction: getBindFunction(mId),
            isboundFunction: getIsboundFunction(mId),
            rebindFunction: getRebindFunction(mId),
            unbindFunction: getUnbindFunction(mId)
        }); };
    };
    Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {
        var result = null;
        var defaultArgs = {
            avoidConstraints: avoidConstraints,
            contextInterceptor: function (context) { return context; },
            isMultiInject: isMultiInject,
            key: key,
            serviceIdentifier: serviceIdentifier,
            targetType: targetType,
            value: value
        };
        if (this._middleware) {
            result = this._middleware(defaultArgs);
            if (result === undefined || result === null) {
                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);
            }
        }
        else {
            result = this._planAndResolve()(defaultArgs);
        }
        return result;
    };
    Container.prototype._planAndResolve = function () {
        var _this = this;
        return function (args) {
            var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
            context = args.contextInterceptor(context);
            var result = resolver_1.resolve(context);
            return result;
        };
    };
    return Container;
}());
exports.Container = Container;


/***/ }),

/***/ "../../../node_modules/inversify/lib/container/container_module.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/container/container_module.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var id_1 = __webpack_require__(/*! ../utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
var ContainerModule = (function () {
    function ContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return ContainerModule;
}());
exports.ContainerModule = ContainerModule;
var AsyncContainerModule = (function () {
    function AsyncContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return AsyncContainerModule;
}());
exports.AsyncContainerModule = AsyncContainerModule;


/***/ }),

/***/ "../../../node_modules/inversify/lib/container/container_snapshot.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/container/container_snapshot.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ContainerSnapshot = (function () {
    function ContainerSnapshot() {
    }
    ContainerSnapshot.of = function (bindings, middleware) {
        var snapshot = new ContainerSnapshot();
        snapshot.bindings = bindings;
        snapshot.middleware = middleware;
        return snapshot;
    };
    return ContainerSnapshot;
}());
exports.ContainerSnapshot = ContainerSnapshot;


/***/ }),

/***/ "../../../node_modules/inversify/lib/container/lookup.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/container/lookup.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var Lookup = (function () {
    function Lookup() {
        this._map = new Map();
    }
    Lookup.prototype.getMap = function () {
        return this._map;
    };
    Lookup.prototype.add = function (serviceIdentifier, value) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (value === null || value === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            entry.push(value);
            this._map.set(serviceIdentifier, entry);
        }
        else {
            this._map.set(serviceIdentifier, [value]);
        }
    };
    Lookup.prototype.get = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            return entry;
        }
        else {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.remove = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (!this._map.delete(serviceIdentifier)) {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.removeByCondition = function (condition) {
        var _this = this;
        this._map.forEach(function (entries, key) {
            var updatedEntries = entries.filter(function (entry) { return !condition(entry); });
            if (updatedEntries.length > 0) {
                _this._map.set(key, updatedEntries);
            }
            else {
                _this._map.delete(key);
            }
        });
    };
    Lookup.prototype.hasKey = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        return this._map.has(serviceIdentifier);
    };
    Lookup.prototype.clone = function () {
        var copy = new Lookup();
        this._map.forEach(function (value, key) {
            value.forEach(function (b) { return copy.add(key, b.clone()); });
        });
        return copy;
    };
    Lookup.prototype.traverse = function (func) {
        this._map.forEach(function (value, key) {
            func(key, value);
        });
    };
    return Lookup;
}());
exports.Lookup = Lookup;


/***/ }),

/***/ "../../../node_modules/inversify/lib/inversify.js":
/*!********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/inversify.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var keys = __webpack_require__(/*! ./constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
exports.METADATA_KEY = keys;
var container_1 = __webpack_require__(/*! ./container/container */ "../../../node_modules/inversify/lib/container/container.js");
exports.Container = container_1.Container;
var literal_types_1 = __webpack_require__(/*! ./constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
exports.BindingScopeEnum = literal_types_1.BindingScopeEnum;
exports.BindingTypeEnum = literal_types_1.BindingTypeEnum;
exports.TargetTypeEnum = literal_types_1.TargetTypeEnum;
var container_module_1 = __webpack_require__(/*! ./container/container_module */ "../../../node_modules/inversify/lib/container/container_module.js");
exports.AsyncContainerModule = container_module_1.AsyncContainerModule;
exports.ContainerModule = container_module_1.ContainerModule;
var injectable_1 = __webpack_require__(/*! ./annotation/injectable */ "../../../node_modules/inversify/lib/annotation/injectable.js");
exports.injectable = injectable_1.injectable;
var tagged_1 = __webpack_require__(/*! ./annotation/tagged */ "../../../node_modules/inversify/lib/annotation/tagged.js");
exports.tagged = tagged_1.tagged;
var named_1 = __webpack_require__(/*! ./annotation/named */ "../../../node_modules/inversify/lib/annotation/named.js");
exports.named = named_1.named;
var inject_1 = __webpack_require__(/*! ./annotation/inject */ "../../../node_modules/inversify/lib/annotation/inject.js");
exports.inject = inject_1.inject;
exports.LazyServiceIdentifer = inject_1.LazyServiceIdentifer;
var optional_1 = __webpack_require__(/*! ./annotation/optional */ "../../../node_modules/inversify/lib/annotation/optional.js");
exports.optional = optional_1.optional;
var unmanaged_1 = __webpack_require__(/*! ./annotation/unmanaged */ "../../../node_modules/inversify/lib/annotation/unmanaged.js");
exports.unmanaged = unmanaged_1.unmanaged;
var multi_inject_1 = __webpack_require__(/*! ./annotation/multi_inject */ "../../../node_modules/inversify/lib/annotation/multi_inject.js");
exports.multiInject = multi_inject_1.multiInject;
var target_name_1 = __webpack_require__(/*! ./annotation/target_name */ "../../../node_modules/inversify/lib/annotation/target_name.js");
exports.targetName = target_name_1.targetName;
var post_construct_1 = __webpack_require__(/*! ./annotation/post_construct */ "../../../node_modules/inversify/lib/annotation/post_construct.js");
exports.postConstruct = post_construct_1.postConstruct;
var metadata_reader_1 = __webpack_require__(/*! ./planning/metadata_reader */ "../../../node_modules/inversify/lib/planning/metadata_reader.js");
exports.MetadataReader = metadata_reader_1.MetadataReader;
var id_1 = __webpack_require__(/*! ./utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
exports.id = id_1.id;
var decorator_utils_1 = __webpack_require__(/*! ./annotation/decorator_utils */ "../../../node_modules/inversify/lib/annotation/decorator_utils.js");
exports.decorate = decorator_utils_1.decorate;
var constraint_helpers_1 = __webpack_require__(/*! ./syntax/constraint_helpers */ "../../../node_modules/inversify/lib/syntax/constraint_helpers.js");
exports.traverseAncerstors = constraint_helpers_1.traverseAncerstors;
exports.taggedConstraint = constraint_helpers_1.taggedConstraint;
exports.namedConstraint = constraint_helpers_1.namedConstraint;
exports.typeConstraint = constraint_helpers_1.typeConstraint;
var serialization_1 = __webpack_require__(/*! ./utils/serialization */ "../../../node_modules/inversify/lib/utils/serialization.js");
exports.getServiceIdentifierAsString = serialization_1.getServiceIdentifierAsString;
var binding_utils_1 = __webpack_require__(/*! ./utils/binding_utils */ "../../../node_modules/inversify/lib/utils/binding_utils.js");
exports.multiBindToService = binding_utils_1.multiBindToService;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/context.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/context.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var id_1 = __webpack_require__(/*! ../utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
var Context = (function () {
    function Context(container) {
        this.id = id_1.id();
        this.container = container;
    }
    Context.prototype.addPlan = function (plan) {
        this.plan = plan;
    };
    Context.prototype.setCurrentRequest = function (currentRequest) {
        this.currentRequest = currentRequest;
    };
    return Context;
}());
exports.Context = Context;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/metadata.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/metadata.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var Metadata = (function () {
    function Metadata(key, value) {
        this.key = key;
        this.value = value;
    }
    Metadata.prototype.toString = function () {
        if (this.key === METADATA_KEY.NAMED_TAG) {
            return "named: " + this.value.toString() + " ";
        }
        else {
            return "tagged: { key:" + this.key.toString() + ", value: " + this.value + " }";
        }
    };
    return Metadata;
}());
exports.Metadata = Metadata;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/metadata_reader.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/metadata_reader.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var MetadataReader = (function () {
    function MetadataReader() {
    }
    MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {
        var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);
        return {
            compilerGeneratedMetadata: compilerGeneratedMetadata,
            userGeneratedMetadata: userGeneratedMetadata || {}
        };
    };
    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];
        return userGeneratedMetadata;
    };
    return MetadataReader;
}());
exports.MetadataReader = MetadataReader;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/plan.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/plan.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Plan = (function () {
    function Plan(parentContext, rootRequest) {
        this.parentContext = parentContext;
        this.rootRequest = rootRequest;
    }
    return Plan;
}());
exports.Plan = Plan;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/planner.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/planner.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var binding_count_1 = __webpack_require__(/*! ../bindings/binding_count */ "../../../node_modules/inversify/lib/bindings/binding_count.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var exceptions_1 = __webpack_require__(/*! ../utils/exceptions */ "../../../node_modules/inversify/lib/utils/exceptions.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "../../../node_modules/inversify/lib/utils/serialization.js");
var context_1 = __webpack_require__(/*! ./context */ "../../../node_modules/inversify/lib/planning/context.js");
var metadata_1 = __webpack_require__(/*! ./metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var plan_1 = __webpack_require__(/*! ./plan */ "../../../node_modules/inversify/lib/planning/plan.js");
var reflection_utils_1 = __webpack_require__(/*! ./reflection_utils */ "../../../node_modules/inversify/lib/planning/reflection_utils.js");
var request_1 = __webpack_require__(/*! ./request */ "../../../node_modules/inversify/lib/planning/request.js");
var target_1 = __webpack_require__(/*! ./target */ "../../../node_modules/inversify/lib/planning/target.js");
function getBindingDictionary(cntnr) {
    return cntnr._bindingDictionary;
}
exports.getBindingDictionary = getBindingDictionary;
function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;
    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);
    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);
    if (key !== undefined) {
        var tagMetadata = new metadata_1.Metadata(key, value);
        target.metadata.push(tagMetadata);
    }
    return target;
}
function _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {
    var bindings = getBindings(context.container, target.serviceIdentifier);
    var activeBindings = [];
    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&
        context.container.options.autoBindInjectable &&
        typeof target.serviceIdentifier === "function" &&
        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {
        context.container.bind(target.serviceIdentifier).toSelf();
        bindings = getBindings(context.container, target.serviceIdentifier);
    }
    if (!avoidConstraints) {
        activeBindings = bindings.filter(function (binding) {
            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
            return binding.constraint(request);
        });
    }
    else {
        activeBindings = bindings;
    }
    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);
    return activeBindings;
}
function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
    switch (bindings.length) {
        case binding_count_1.BindingCount.NoBindingsAvailable:
            if (target.isOptional()) {
                return bindings;
            }
            else {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.NOT_REGISTERED;
                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
        case binding_count_1.BindingCount.OnlyOneBindingAvailable:
            if (!target.isArray()) {
                return bindings;
            }
        case binding_count_1.BindingCount.MultipleBindingsAvailable:
        default:
            if (!target.isArray()) {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
            else {
                return bindings;
            }
    }
}
function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {
    var activeBindings;
    var childRequest;
    if (parentRequest === null) {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);
        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);
        var thePlan = new plan_1.Plan(context, childRequest);
        context.addPlan(thePlan);
    }
    else {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);
        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
    }
    activeBindings.forEach(function (binding) {
        var subChildRequest = null;
        if (target.isArray()) {
            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);
        }
        else {
            if (binding.cache) {
                return;
            }
            subChildRequest = childRequest;
        }
        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);
            if (!context.container.options.skipBaseClassChecks) {
                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);
                if (dependencies.length < baseClassDependencyCount) {
                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));
                    throw new Error(error);
                }
            }
            dependencies.forEach(function (dependency) {
                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);
            });
        }
    });
}
function getBindings(container, serviceIdentifier) {
    var bindings = [];
    var bindingDictionary = getBindingDictionary(container);
    if (bindingDictionary.hasKey(serviceIdentifier)) {
        bindings = bindingDictionary.get(serviceIdentifier);
    }
    else if (container.parent !== null) {
        bindings = getBindings(container.parent, serviceIdentifier);
    }
    return bindings;
}
function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
    if (avoidConstraints === void 0) { avoidConstraints = false; }
    var context = new context_1.Context(container);
    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);
    try {
        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);
        return context;
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            if (context.plan) {
                serialization_1.circularDependencyToException(context.plan.rootRequest);
            }
        }
        throw error;
    }
}
exports.plan = plan;
function createMockRequest(container, serviceIdentifier, key, value) {
    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, "", serviceIdentifier, new metadata_1.Metadata(key, value));
    var context = new context_1.Context(container);
    var request = new request_1.Request(serviceIdentifier, context, null, [], target);
    return request;
}
exports.createMockRequest = createMockRequest;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/queryable_string.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/queryable_string.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var QueryableString = (function () {
    function QueryableString(str) {
        this.str = str;
    }
    QueryableString.prototype.startsWith = function (searchString) {
        return this.str.indexOf(searchString) === 0;
    };
    QueryableString.prototype.endsWith = function (searchString) {
        var reverseString = "";
        var reverseSearchString = searchString.split("").reverse().join("");
        reverseString = this.str.split("").reverse().join("");
        return this.startsWith.call({ str: reverseString }, reverseSearchString);
    };
    QueryableString.prototype.contains = function (searchString) {
        return (this.str.indexOf(searchString) !== -1);
    };
    QueryableString.prototype.equals = function (compareString) {
        return this.str === compareString;
    };
    QueryableString.prototype.value = function () {
        return this.str;
    };
    return QueryableString;
}());
exports.QueryableString = QueryableString;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/reflection_utils.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/reflection_utils.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var inject_1 = __webpack_require__(/*! ../annotation/inject */ "../../../node_modules/inversify/lib/annotation/inject.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "../../../node_modules/inversify/lib/utils/serialization.js");
exports.getFunctionName = serialization_1.getFunctionName;
var target_1 = __webpack_require__(/*! ./target */ "../../../node_modules/inversify/lib/planning/target.js");
function getDependencies(metadataReader, func) {
    var constructorName = serialization_1.getFunctionName(func);
    var targets = getTargets(metadataReader, constructorName, func, false);
    return targets;
}
exports.getDependencies = getDependencies;
function getTargets(metadataReader, constructorName, func, isBaseClass) {
    var metadata = metadataReader.getConstructorMetadata(func);
    var serviceIdentifiers = metadata.compilerGeneratedMetadata;
    if (serviceIdentifiers === undefined) {
        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
        throw new Error(msg);
    }
    var constructorArgsMetadata = metadata.userGeneratedMetadata;
    var keys = Object.keys(constructorArgsMetadata);
    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);
    var iterations = (hasUserDeclaredUnknownInjections) ? keys.length : func.length;
    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);
    var propertyTargets = getClassPropsAsTargets(metadataReader, func);
    var targets = constructorTargets.concat(propertyTargets);
    return targets;
}
function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {
    var targetMetadata = constructorArgsMetadata[index.toString()] || [];
    var metadata = formatTargetMetadata(targetMetadata);
    var isManaged = metadata.unmanaged !== true;
    var serviceIdentifier = serviceIdentifiers[index];
    var injectIdentifier = (metadata.inject || metadata.multiInject);
    serviceIdentifier = (injectIdentifier) ? (injectIdentifier) : serviceIdentifier;
    if (serviceIdentifier instanceof inject_1.LazyServiceIdentifer) {
        serviceIdentifier = serviceIdentifier.unwrap();
    }
    if (isManaged) {
        var isObject = serviceIdentifier === Object;
        var isFunction = serviceIdentifier === Function;
        var isUndefined = serviceIdentifier === undefined;
        var isUnknownType = (isObject || isFunction || isUndefined);
        if (!isBaseClass && isUnknownType) {
            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + " argument " + index + " in class " + constructorName + ".";
            throw new Error(msg);
        }
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        return target;
    }
    return null;
}
function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {
    var targets = [];
    for (var i = 0; i < iterations; i++) {
        var index = i;
        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);
        if (target !== null) {
            targets.push(target);
        }
    }
    return targets;
}
function getClassPropsAsTargets(metadataReader, constructorFunc) {
    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);
    var targets = [];
    var keys = Object.keys(classPropsMetadata);
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        var targetMetadata = classPropsMetadata[key];
        var metadata = formatTargetMetadata(classPropsMetadata[key]);
        var targetName = metadata.targetName || key;
        var serviceIdentifier = (metadata.inject || metadata.multiInject);
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);
        targets = targets.concat(baseTargets);
    }
    return targets;
}
function getBaseClassDependencyCount(metadataReader, func) {
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseConstructorName = serialization_1.getFunctionName(baseConstructor);
        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);
        var metadata = targets.map(function (t) {
            return t.metadata.filter(function (m) {
                return m.key === METADATA_KEY.UNMANAGED_TAG;
            });
        });
        var unmanagedCount = [].concat.apply([], metadata).length;
        var dependencyCount = targets.length - unmanagedCount;
        if (dependencyCount > 0) {
            return dependencyCount;
        }
        else {
            return getBaseClassDependencyCount(metadataReader, baseConstructor);
        }
    }
    else {
        return 0;
    }
}
exports.getBaseClassDependencyCount = getBaseClassDependencyCount;
function formatTargetMetadata(targetMetadata) {
    var targetMetadataMap = {};
    targetMetadata.forEach(function (m) {
        targetMetadataMap[m.key.toString()] = m.value;
    });
    return {
        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],
        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],
        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],
        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]
    };
}


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/request.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/request.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var id_1 = __webpack_require__(/*! ../utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
var Request = (function () {
    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
        this.id = id_1.id();
        this.serviceIdentifier = serviceIdentifier;
        this.parentContext = parentContext;
        this.parentRequest = parentRequest;
        this.target = target;
        this.childRequests = [];
        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);
        this.requestScope = parentRequest === null
            ? new Map()
            : null;
    }
    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
        this.childRequests.push(child);
        return child;
    };
    return Request;
}());
exports.Request = Request;


/***/ }),

/***/ "../../../node_modules/inversify/lib/planning/target.js":
/*!**************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/planning/target.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "../../../node_modules/inversify/lib/utils/id.js");
var metadata_1 = __webpack_require__(/*! ./metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var queryable_string_1 = __webpack_require__(/*! ./queryable_string */ "../../../node_modules/inversify/lib/planning/queryable_string.js");
var Target = (function () {
    function Target(type, name, serviceIdentifier, namedOrTagged) {
        this.id = id_1.id();
        this.type = type;
        this.serviceIdentifier = serviceIdentifier;
        this.name = new queryable_string_1.QueryableString(name || "");
        this.metadata = new Array();
        var metadataItem = null;
        if (typeof namedOrTagged === "string") {
            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);
        }
        else if (namedOrTagged instanceof metadata_1.Metadata) {
            metadataItem = namedOrTagged;
        }
        if (metadataItem !== null) {
            this.metadata.push(metadataItem);
        }
    }
    Target.prototype.hasTag = function (key) {
        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {
            var m = _a[_i];
            if (m.key === key) {
                return true;
            }
        }
        return false;
    };
    Target.prototype.isArray = function () {
        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);
    };
    Target.prototype.matchesArray = function (name) {
        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);
    };
    Target.prototype.isNamed = function () {
        return this.hasTag(METADATA_KEY.NAMED_TAG);
    };
    Target.prototype.isTagged = function () {
        return this.metadata.some(function (m) {
            return (m.key !== METADATA_KEY.INJECT_TAG) &&
                (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&
                (m.key !== METADATA_KEY.NAME_TAG) &&
                (m.key !== METADATA_KEY.UNMANAGED_TAG) &&
                (m.key !== METADATA_KEY.NAMED_TAG);
        });
    };
    Target.prototype.isOptional = function () {
        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);
    };
    Target.prototype.getNamedTag = function () {
        if (this.isNamed()) {
            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];
        }
        return null;
    };
    Target.prototype.getCustomTags = function () {
        if (this.isTagged()) {
            return this.metadata.filter(function (m) {
                return (m.key !== METADATA_KEY.INJECT_TAG) &&
                    (m.key !== METADATA_KEY.MULTI_INJECT_TAG) &&
                    (m.key !== METADATA_KEY.NAME_TAG) &&
                    (m.key !== METADATA_KEY.UNMANAGED_TAG) &&
                    (m.key !== METADATA_KEY.NAMED_TAG);
            });
        }
        return null;
    };
    Target.prototype.matchesNamedTag = function (name) {
        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);
    };
    Target.prototype.matchesTag = function (key) {
        var _this = this;
        return function (value) {
            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {
                var m = _a[_i];
                if (m.key === key && m.value === value) {
                    return true;
                }
            }
            return false;
        };
    };
    return Target;
}());
exports.Target = Target;


/***/ }),

/***/ "../../../node_modules/inversify/lib/resolution/instantiation.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/resolution/instantiation.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var error_msgs_1 = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
function _injectProperties(instance, childRequests, resolveRequest) {
    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {
        return (childRequest.target !== null &&
            childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);
    });
    var propertyInjections = propertyInjectionsRequests.map(resolveRequest);
    propertyInjectionsRequests.forEach(function (r, index) {
        var propertyName = "";
        propertyName = r.target.name.value();
        var injection = propertyInjections[index];
        instance[propertyName] = injection;
    });
    return instance;
}
function _createInstance(Func, injections) {
    return new (Func.bind.apply(Func, [void 0].concat(injections)))();
}
function _postConstruct(constr, result) {
    if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {
        var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);
        try {
            result[data.value]();
        }
        catch (e) {
            throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));
        }
    }
}
function resolveInstance(constr, childRequests, resolveRequest) {
    var result = null;
    if (childRequests.length > 0) {
        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {
            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);
        });
        var constructorInjections = constructorInjectionsRequests.map(resolveRequest);
        result = _createInstance(constr, constructorInjections);
        result = _injectProperties(result, childRequests, resolveRequest);
    }
    else {
        result = new constr();
    }
    _postConstruct(constr, result);
    return result;
}
exports.resolveInstance = resolveInstance;


/***/ }),

/***/ "../../../node_modules/inversify/lib/resolution/resolver.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/resolution/resolver.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var exceptions_1 = __webpack_require__(/*! ../utils/exceptions */ "../../../node_modules/inversify/lib/utils/exceptions.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "../../../node_modules/inversify/lib/utils/serialization.js");
var instantiation_1 = __webpack_require__(/*! ./instantiation */ "../../../node_modules/inversify/lib/resolution/instantiation.js");
var invokeFactory = function (factoryType, serviceIdentifier, fn) {
    try {
        return fn();
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));
        }
        else {
            throw error;
        }
    }
};
var _resolveRequest = function (requestScope) {
    return function (request) {
        request.parentContext.setCurrentRequest(request);
        var bindings = request.bindings;
        var childRequests = request.childRequests;
        var targetIsAnArray = request.target && request.target.isArray();
        var targetParentIsNotAnArray = !request.parentRequest ||
            !request.parentRequest.target ||
            !request.target ||
            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);
        if (targetIsAnArray && targetParentIsNotAnArray) {
            return childRequests.map(function (childRequest) {
                var _f = _resolveRequest(requestScope);
                return _f(childRequest);
            });
        }
        else {
            var result = null;
            if (request.target.isOptional() && bindings.length === 0) {
                return undefined;
            }
            var binding_1 = bindings[0];
            var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;
            var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;
            if (isSingleton && binding_1.activated) {
                return binding_1.cache;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                requestScope.has(binding_1.id)) {
                return requestScope.get(binding_1.id);
            }
            if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {
                result = binding_1.cache;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {
                result = binding_1.cache;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {
                result = binding_1.implementationType;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {
                result = invokeFactory("toDynamicValue", binding_1.serviceIdentifier, function () { return binding_1.dynamicValue(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {
                result = invokeFactory("toFactory", binding_1.serviceIdentifier, function () { return binding_1.factory(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {
                result = invokeFactory("toProvider", binding_1.serviceIdentifier, function () { return binding_1.provider(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {
                result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));
            }
            else {
                var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);
                throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + " " + serviceIdentifier);
            }
            if (typeof binding_1.onActivation === "function") {
                result = binding_1.onActivation(request.parentContext, result);
            }
            if (isSingleton) {
                binding_1.cache = result;
                binding_1.activated = true;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                !requestScope.has(binding_1.id)) {
                requestScope.set(binding_1.id, result);
            }
            return result;
        }
    };
};
function resolve(context) {
    var _f = _resolveRequest(context.plan.rootRequest.requestScope);
    return _f(context.plan.rootRequest);
}
exports.resolve = resolve;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/binding_in_syntax.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/binding_in_syntax.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var binding_when_on_syntax_1 = __webpack_require__(/*! ./binding_when_on_syntax */ "../../../node_modules/inversify/lib/syntax/binding_when_on_syntax.js");
var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inRequestScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Request;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());
exports.BindingInSyntax = BindingInSyntax;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var binding_in_syntax_1 = __webpack_require__(/*! ./binding_in_syntax */ "../../../node_modules/inversify/lib/syntax/binding_in_syntax.js");
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "../../../node_modules/inversify/lib/syntax/binding_on_syntax.js");
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "../../../node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingInWhenOnSyntax = (function () {
    function BindingInWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
        this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);
    }
    BindingInWhenOnSyntax.prototype.inRequestScope = function () {
        return this._bindingInSyntax.inRequestScope();
    };
    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
        return this._bindingInSyntax.inSingletonScope();
    };
    BindingInWhenOnSyntax.prototype.inTransientScope = function () {
        return this._bindingInSyntax.inTransientScope();
    };
    BindingInWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingInWhenOnSyntax;
}());
exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/binding_on_syntax.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/binding_on_syntax.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "../../../node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingOnSyntax = (function () {
    function BindingOnSyntax(binding) {
        this._binding = binding;
    }
    BindingOnSyntax.prototype.onActivation = function (handler) {
        this._binding.onActivation = handler;
        return new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    };
    return BindingOnSyntax;
}());
exports.BindingOnSyntax = BindingOnSyntax;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/binding_to_syntax.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/binding_to_syntax.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "../../../node_modules/inversify/lib/constants/literal_types.js");
var binding_in_when_on_syntax_1 = __webpack_require__(/*! ./binding_in_when_on_syntax */ "../../../node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js");
var binding_when_on_syntax_1 = __webpack_require__(/*! ./binding_when_on_syntax */ "../../../node_modules/inversify/lib/syntax/binding_when_on_syntax.js");
var BindingToSyntax = (function () {
    function BindingToSyntax(binding) {
        this._binding = binding;
    }
    BindingToSyntax.prototype.to = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Instance;
        this._binding.implementationType = constructor;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toSelf = function () {
        if (typeof this._binding.serviceIdentifier !== "function") {
            throw new Error("" + ERROR_MSGS.INVALID_TO_SELF_VALUE);
        }
        var self = this._binding.serviceIdentifier;
        return this.to(self);
    };
    BindingToSyntax.prototype.toConstantValue = function (value) {
        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;
        this._binding.cache = value;
        this._binding.dynamicValue = null;
        this._binding.implementationType = null;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toDynamicValue = function (func) {
        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;
        this._binding.cache = null;
        this._binding.dynamicValue = func;
        this._binding.implementationType = null;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toConstructor = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;
        this._binding.implementationType = constructor;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFactory = function (factory) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = factory;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFunction = function (func) {
        if (typeof func !== "function") {
            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);
        }
        var bindingWhenOnSyntax = this.toConstantValue(func);
        this._binding.type = literal_types_1.BindingTypeEnum.Function;
        return bindingWhenOnSyntax;
    };
    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            var autofactory = function () { return context.container.get(serviceIdentifier); };
            return autofactory;
        };
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toProvider = function (provider) {
        this._binding.type = literal_types_1.BindingTypeEnum.Provider;
        this._binding.provider = provider;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toService = function (service) {
        this.toDynamicValue(function (context) { return context.container.get(service); });
    };
    return BindingToSyntax;
}());
exports.BindingToSyntax = BindingToSyntax;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/binding_when_on_syntax.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/binding_when_on_syntax.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "../../../node_modules/inversify/lib/syntax/binding_on_syntax.js");
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "../../../node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingWhenOnSyntax = (function () {
    function BindingWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
    }
    BindingWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingWhenOnSyntax;
}());
exports.BindingWhenOnSyntax = BindingWhenOnSyntax;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/binding_when_syntax.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/binding_when_syntax.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "../../../node_modules/inversify/lib/syntax/binding_on_syntax.js");
var constraint_helpers_1 = __webpack_require__(/*! ./constraint_helpers */ "../../../node_modules/inversify/lib/syntax/constraint_helpers.js");
var BindingWhenSyntax = (function () {
    function BindingWhenSyntax(binding) {
        this._binding = binding;
    }
    BindingWhenSyntax.prototype.when = function (constraint) {
        this._binding.constraint = constraint;
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
        this._binding.constraint = constraint_helpers_1.namedConstraint(name);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
        this._binding.constraint = function (request) {
            var targetIsDefault = (request.target !== null) &&
                (!request.target.isNamed()) &&
                (!request.target.isTagged());
            return targetIsDefault;
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    return BindingWhenSyntax;
}());
exports.BindingWhenSyntax = BindingWhenSyntax;


/***/ }),

/***/ "../../../node_modules/inversify/lib/syntax/constraint_helpers.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/syntax/constraint_helpers.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "../../../node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "../../../node_modules/inversify/lib/planning/metadata.js");
var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
exports.traverseAncerstors = traverseAncerstors;
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
}; };
exports.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
exports.namedConstraint = namedConstraint;
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };
exports.typeConstraint = typeConstraint;


/***/ }),

/***/ "../../../node_modules/inversify/lib/utils/binding_utils.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/utils/binding_utils.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.multiBindToService = function (container) {
    return function (service) {
        return function () {
            var types = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                types[_i] = arguments[_i];
            }
            return types.forEach(function (t) { return container.bind(t).toService(service); });
        };
    };
};


/***/ }),

/***/ "../../../node_modules/inversify/lib/utils/exceptions.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/utils/exceptions.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
function isStackOverflowExeption(error) {
    return (error instanceof RangeError ||
        error.message === ERROR_MSGS.STACK_OVERFLOW);
}
exports.isStackOverflowExeption = isStackOverflowExeption;


/***/ }),

/***/ "../../../node_modules/inversify/lib/utils/id.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/utils/id.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var idCounter = 0;
function id() {
    return idCounter++;
}
exports.id = id;


/***/ }),

/***/ "../../../node_modules/inversify/lib/utils/serialization.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/inversify/lib/utils/serialization.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "../../../node_modules/inversify/lib/constants/error_msgs.js");
function getServiceIdentifierAsString(serviceIdentifier) {
    if (typeof serviceIdentifier === "function") {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier === "symbol") {
        return serviceIdentifier.toString();
    }
    else {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier;
    }
}
exports.getServiceIdentifierAsString = getServiceIdentifierAsString;
function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
    var registeredBindingsList = "";
    var registeredBindings = getBindings(container, serviceIdentifier);
    if (registeredBindings.length !== 0) {
        registeredBindingsList = "\nRegistered bindings:";
        registeredBindings.forEach(function (binding) {
            var name = "Object";
            if (binding.implementationType !== null) {
                name = getFunctionName(binding.implementationType);
            }
            registeredBindingsList = registeredBindingsList + "\n " + name;
            if (binding.constraint.metaData) {
                registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
            }
        });
    }
    return registeredBindingsList;
}
exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;
function alreadyDependencyChain(request, serviceIdentifier) {
    if (request.parentRequest === null) {
        return false;
    }
    else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {
        return true;
    }
    else {
        return alreadyDependencyChain(request.parentRequest, serviceIdentifier);
    }
}
function dependencyChainToString(request) {
    function _createStringArr(req, result) {
        if (result === void 0) { result = []; }
        var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);
        result.push(serviceIdentifier);
        if (req.parentRequest !== null) {
            return _createStringArr(req.parentRequest, result);
        }
        return result;
    }
    var stringArr = _createStringArr(request);
    return stringArr.reverse().join(" --> ");
}
function circularDependencyToException(request) {
    request.childRequests.forEach(function (childRequest) {
        if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {
            var services = dependencyChainToString(childRequest);
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + " " + services);
        }
        else {
            circularDependencyToException(childRequest);
        }
    });
}
exports.circularDependencyToException = circularDependencyToException;
function listMetadataForTarget(serviceIdentifierString, target) {
    if (target.isTagged() || target.isNamed()) {
        var m_1 = "";
        var namedTag = target.getNamedTag();
        var otherTags = target.getCustomTags();
        if (namedTag !== null) {
            m_1 += namedTag.toString() + "\n";
        }
        if (otherTags !== null) {
            otherTags.forEach(function (tag) {
                m_1 += tag.toString() + "\n";
            });
        }
        return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
    }
    else {
        return " " + serviceIdentifierString;
    }
}
exports.listMetadataForTarget = listMetadataForTarget;
function getFunctionName(v) {
    if (v.name) {
        return v.name;
    }
    else {
        var name_1 = v.toString();
        var match = name_1.match(/^function\s*([^\s(]+)/);
        return match ? match[1] : "Anonymous function: " + name_1;
    }
}
exports.getFunctionName = getFunctionName;


/***/ }),

/***/ "../../../node_modules/isarray/index.js":
/*!**********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/isarray/index.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "../../../node_modules/node-libs-browser/mock/empty.js":
/*!*************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/node-libs-browser/mock/empty.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "../../../node_modules/os-browserify/browser.js":
/*!******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/os-browserify/browser.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

exports.homedir = function () {
	return '/'
};


/***/ }),

/***/ "../../../node_modules/path-browserify/index.js":
/*!******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/path-browserify/index.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "../../../node_modules/process/browser.js")))

/***/ }),

/***/ "../../../node_modules/process/browser.js":
/*!************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/process/browser.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "../../../node_modules/reflect-metadata/Reflect.js":
/*!*********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/reflect-metadata/Reflect.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof global === "object" ? global :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "../../../node_modules/process/browser.js"), __webpack_require__(/*! ./../webpack/buildin/global.js */ "../../../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../../node_modules/setimmediate/setImmediate.js":
/*!**********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/setimmediate/setImmediate.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../../../node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "../../../node_modules/process/browser.js")))

/***/ }),

/***/ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js":
/*!**********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom-jsx/snabbdom-jsx.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var SVGNS = 'http://www.w3.org/2000/svg';
var modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];
var slice = Array.prototype.slice;

function isPrimitive(val) {
  return  typeof val === 'string'   ||
          typeof val === 'number'   ||
          typeof val === 'boolean'  ||
          typeof val === 'symbol'   ||
          val === null              ||
          val === undefined;
}

function normalizeAttrs(attrs, nsURI, defNS, modules) {
  var map = { ns: nsURI };
  for (var i = 0, len = modules.length; i < len; i++) {
    var mod = modules[i];
    if(attrs[mod])
      map[mod] = attrs[mod];
  }
  for(var key in attrs) {
    if(key !== 'key' && key !== 'classNames' && key !== 'selector') {
      var idx = key.indexOf('-');
      if(idx > 0)
        addAttr(key.slice(0, idx), key.slice(idx+1), attrs[key]);
      else if(!map[key])
        addAttr(defNS, key, attrs[key]);
    }
  }
  return map;

  function addAttr(namespace, key, val) {
    var ns = map[namespace] || (map[namespace] = {});
    ns[key] = val;
  }
}

function buildFromStringTag(nsURI, defNS, modules, tag, attrs, children) {

  if(attrs.selector) {
    tag = tag + attrs.selector;
  }
  if(attrs.classNames) {
    var cns = attrs.classNames;
    tag = tag + '.' + (
      Array.isArray(cns) ? cns.join('.') : cns.replace(/\s+/g, '.')
    );
  }

  return {
    sel       : tag,
    data      : normalizeAttrs(attrs, nsURI, defNS, modules),
    children  : children.map( function(c) {
      return isPrimitive(c) ? {text: c} : c;
    }),
    key: attrs.key
  };
}

function buildFromComponent(nsURI, defNS, modules, tag, attrs, children) {
  var res;
  if(typeof tag === 'function')
    res = tag(attrs, children);
  else if(tag && typeof tag.view === 'function')
    res = tag.view(attrs, children);
  else if(tag && typeof tag.render === 'function')
    res = tag.render(attrs, children);
  else
    throw "JSX tag must be either a string, a function or an object with 'view' or 'render' methods";
  res.key = attrs.key;
  return res;
}

function flatten(nested, start, flat) {
  for (var i = start, len = nested.length; i < len; i++) {
    var item = nested[i];
    if (Array.isArray(item)) {
      flatten(item, 0, flat);
    } else {
      flat.push(item);
    }
  }
}

function maybeFlatten(array) {
  if (array) {
    for (var i = 0, len = array.length; i < len; i++) {
      if (Array.isArray(array[i])) {
        var flat = array.slice(0, i);
        flatten(array, i, flat);
        array = flat;
        break;
      }
    }
  }
  return array;
}

function buildVnode(nsURI, defNS, modules, tag, attrs, children) {
  attrs = attrs || {};
  children = maybeFlatten(children);
  if(typeof tag === 'string') {
    return buildFromStringTag(nsURI, defNS, modules, tag, attrs, children)
  } else {
    return buildFromComponent(nsURI, defNS, modules, tag, attrs, children)
  }
}

function JSX(nsURI, defNS, modules) {
  return function jsxWithCustomNS(tag, attrs, children) {
    if(arguments.length > 3 || !Array.isArray(children))
      children = slice.call(arguments, 2);
    return buildVnode(nsURI, defNS || 'props', modules || modulesNS, tag, attrs, children);
  };
}

module.exports = {
  html: JSX(undefined),
  svg: JSX(SVGNS, 'attrs'),
  JSX: JSX
};


/***/ }),

/***/ "../../../node_modules/snabbdom-virtualize/lib/strings.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom-virtualize/lib/strings.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (html) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];


    var context = options.context || document;

    // If there's nothing here, return null;
    if (!html) {
        return null;
    }

    // Maintain a list of created vnodes so we can call the create hook.
    var createdVNodes = [];

    // Parse the string into the AST and convert to VNodes.
    var vnodes = convertNodes((0, _parse2.default)(html), createdVNodes, context);

    var res = void 0;
    if (!vnodes) {
        // If there are no vnodes but there is string content, then the string
        // must be just text or at least invalid HTML that we should treat as
        // text (since the AST parser didn't find any well-formed HTML).
        res = toVNode({ type: 'text', content: html }, createdVNodes, context);
    } else if (vnodes.length === 1) {
        // If there's only one root node, just return it as opposed to an array.
        res = vnodes[0];
    } else {
        // Otherwise we have an array of VNodes, which we should return.
        res = vnodes;
    }

    // Call the 'create' hook for each created node.
    options.hooks && options.hooks.create && createdVNodes.forEach(function (node) {
        options.hooks.create(node);
    });
    return res;
};

var _parse = __webpack_require__(/*! html-parse-stringify2/lib/parse */ "../../../node_modules/html-parse-stringify2/lib/parse.js");

var _parse2 = _interopRequireDefault(_parse);

var _h = __webpack_require__(/*! snabbdom/h */ "../../../node_modules/snabbdom/h.js");

var _h2 = _interopRequireDefault(_h);

var _utils = __webpack_require__(/*! ./utils */ "../../../node_modules/snabbdom-virtualize/lib/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function convertNodes(nodes, createdVNodes, context) {
    if (nodes instanceof Array && nodes.length > 0) {
        return nodes.map(function (node) {
            return toVNode(node, createdVNodes, context);
        });
    } else {
        return undefined;
    }
}

function toVNode(node, createdVNodes, context) {
    var newNode = void 0;
    if (node.type === 'text') {
        newNode = (0, _utils.createTextVNode)(node.content, context);
    } else {
        newNode = (0, _h2.default)(node.name, buildVNodeData(node, context), convertNodes(node.children, createdVNodes, context));
    }
    createdVNodes.push(newNode);
    return newNode;
}

function buildVNodeData(node, context) {
    var data = {};
    if (!node.attrs) {
        return data;
    }

    var attrs = Object.keys(node.attrs).reduce(function (memo, name) {
        if (name !== 'style' && name !== 'class') {
            var val = (0, _utils.unescapeEntities)(node.attrs[name], context);
            memo ? memo[name] = val : memo = _defineProperty({}, name, val);
        }
        return memo;
    }, null);
    if (attrs) {
        data.attrs = attrs;
    }

    var style = parseStyle(node);
    if (style) {
        data.style = style;
    }

    var classes = parseClass(node);
    if (classes) {
        data.class = classes;
    }

    return data;
}

function parseStyle(node) {
    try {
        return node.attrs.style.split(';').reduce(function (memo, styleProp) {
            var res = styleProp.split(':');
            var name = (0, _utils.transformName)(res[0].trim());
            if (name) {
                var val = res[1].replace('!important', '').trim();
                memo ? memo[name] = val : memo = _defineProperty({}, name, val);
            }
            return memo;
        }, null);
    } catch (e) {
        return null;
    }
}

function parseClass(node) {
    try {
        return node.attrs.class.split(' ').reduce(function (memo, className) {
            className = className.trim();
            if (className) {
                memo ? memo[className] = true : memo = _defineProperty({}, className, true);
            }
            return memo;
        }, null);
    } catch (e) {
        return null;
    }
}

/***/ }),

/***/ "../../../node_modules/snabbdom-virtualize/lib/utils.js":
/*!**************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom-virtualize/lib/utils.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createTextVNode = createTextVNode;
exports.transformName = transformName;
exports.unescapeEntities = unescapeEntities;

var _vnode = __webpack_require__(/*! snabbdom/vnode */ "../../../node_modules/snabbdom/vnode.js");

var _vnode2 = _interopRequireDefault(_vnode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createTextVNode(text, context) {
    return (0, _vnode2.default)(undefined, undefined, undefined, unescapeEntities(text, context));
}

function transformName(name) {
    // Replace -a with A to help camel case style property names.
    name = name.replace(/-(\w)/g, function _replace($1, $2) {
        return $2.toUpperCase();
    });
    // Handle properties that start with a -.
    var firstChar = name.charAt(0).toLowerCase();
    return '' + firstChar + name.substring(1);
}

// Regex for matching HTML entities.
var entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');
// Element for setting innerHTML for transforming entities.
var el = null;

function unescapeEntities(text, context) {
    // Create the element using the context if it doesn't exist.
    if (!el) {
        el = context.createElement('div');
    }
    return text.replace(entityRegex, function (entity) {
        el.innerHTML = entity;
        return el.textContent;
    });
}

/***/ }),

/***/ "../../../node_modules/snabbdom-virtualize/strings.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom-virtualize/strings.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/strings */ "../../../node_modules/snabbdom-virtualize/lib/strings.js");


/***/ }),

/***/ "../../../node_modules/snabbdom/es/h.js":
/*!**********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/es/h.js ***!
  \**********************************************************************************************/
/*! exports provided: h, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return h; });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "../../../node_modules/snabbdom/es/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is */ "../../../node_modules/snabbdom/es/is.js");


function addNS(data, children, sel) {
    data.ns = 'http://www.w3.org/2000/svg';
    if (sel !== 'foreignObject' && children !== undefined) {
        for (var i = 0; i < children.length; ++i) {
            var childData = children[i].data;
            if (childData !== undefined) {
                addNS(childData, children[i].children, children[i].sel);
            }
        }
    }
}
function h(sel, b, c) {
    var data = {}, children, text, i;
    if (c !== undefined) {
        data = b;
        if (_is__WEBPACK_IMPORTED_MODULE_1__["array"](c)) {
            children = c;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](c)) {
            text = c;
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined) {
        if (_is__WEBPACK_IMPORTED_MODULE_1__["array"](b)) {
            children = b;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](b)) {
            text = b;
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (children !== undefined) {
        for (i = 0; i < children.length; ++i) {
            if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](children[i]))
                children[i] = Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["vnode"])(undefined, undefined, undefined, children[i], undefined);
        }
    }
    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
        addNS(data, children, sel);
    }
    return Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["vnode"])(sel, data, children, text, undefined);
}
;
/* harmony default export */ __webpack_exports__["default"] = (h);


/***/ }),

/***/ "../../../node_modules/snabbdom/es/htmldomapi.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/es/htmldomapi.js ***!
  \*******************************************************************************************************/
/*! exports provided: htmlDomApi, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "htmlDomApi", function() { return htmlDomApi; });
function createElement(tagName) {
    return document.createElement(tagName);
}
function createElementNS(namespaceURI, qualifiedName) {
    return document.createElementNS(namespaceURI, qualifiedName);
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    node.appendChild(child);
}
function parentNode(node) {
    return node.parentNode;
}
function nextSibling(node) {
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
var htmlDomApi = {
    createElement: createElement,
    createElementNS: createElementNS,
    createTextNode: createTextNode,
    createComment: createComment,
    insertBefore: insertBefore,
    removeChild: removeChild,
    appendChild: appendChild,
    parentNode: parentNode,
    nextSibling: nextSibling,
    tagName: tagName,
    setTextContent: setTextContent,
    getTextContent: getTextContent,
    isElement: isElement,
    isText: isText,
    isComment: isComment,
};
/* harmony default export */ __webpack_exports__["default"] = (htmlDomApi);


/***/ }),

/***/ "../../../node_modules/snabbdom/es/is.js":
/*!***********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/es/is.js ***!
  \***********************************************************************************************/
/*! exports provided: array, primitive */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "array", function() { return array; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "primitive", function() { return primitive; });
var array = Array.isArray;
function primitive(s) {
    return typeof s === 'string' || typeof s === 'number';
}


/***/ }),

/***/ "../../../node_modules/snabbdom/es/snabbdom.js":
/*!*****************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/es/snabbdom.js ***!
  \*****************************************************************************************************/
/*! exports provided: h, thunk, init */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "init", function() { return init; });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "../../../node_modules/snabbdom/es/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is */ "../../../node_modules/snabbdom/es/is.js");
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./htmldomapi */ "../../../node_modules/snabbdom/es/htmldomapi.js");
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./h */ "../../../node_modules/snabbdom/es/h.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "h", function() { return _h__WEBPACK_IMPORTED_MODULE_3__["h"]; });

/* harmony import */ var _thunk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./thunk */ "../../../node_modules/snabbdom/es/thunk.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thunk", function() { return _thunk__WEBPACK_IMPORTED_MODULE_4__["thunk"]; });




function isUndef(s) { return s === undefined; }
function isDef(s) { return s !== undefined; }
var emptyNode = Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["default"])('', {}, [], undefined, undefined);
function sameVnode(vnode1, vnode2) {
    return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;
}
function isVnode(vnode) {
    return vnode.sel !== undefined;
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var i, map = {}, key, ch;
    for (i = beginIdx; i <= endIdx; ++i) {
        ch = children[i];
        if (ch != null) {
            key = ch.key;
            if (key !== undefined)
                map[key] = i;
        }
    }
    return map;
}
var hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];


function init(modules, domApi) {
    var i, j, cbs = {};
    var api = domApi !== undefined ? domApi : _htmldomapi__WEBPACK_IMPORTED_MODULE_2__["default"];
    for (i = 0; i < hooks.length; ++i) {
        cbs[hooks[i]] = [];
        for (j = 0; j < modules.length; ++j) {
            var hook = modules[j][hooks[i]];
            if (hook !== undefined) {
                cbs[hooks[i]].push(hook);
            }
        }
    }
    function emptyNodeAt(elm) {
        var id = elm.id ? '#' + elm.id : '';
        var c = elm.className ? '.' + elm.className.split(' ').join('.') : '';
        return Object(_vnode__WEBPACK_IMPORTED_MODULE_0__["default"])(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
    }
    function createRmCb(childElm, listeners) {
        return function rmCb() {
            if (--listeners === 0) {
                var parent_1 = api.parentNode(childElm);
                api.removeChild(parent_1, childElm);
            }
        };
    }
    function createElm(vnode, insertedVnodeQueue) {
        var i, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.init)) {
                i(vnode);
                data = vnode.data;
            }
        }
        var children = vnode.children, sel = vnode.sel;
        if (sel === '!') {
            if (isUndef(vnode.text)) {
                vnode.text = '';
            }
            vnode.elm = api.createComment(vnode.text);
        }
        else if (sel !== undefined) {
            // Parse selector
            var hashIdx = sel.indexOf('#');
            var dotIdx = sel.indexOf('.', hashIdx);
            var hash = hashIdx > 0 ? hashIdx : sel.length;
            var dot = dotIdx > 0 ? dotIdx : sel.length;
            var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;
            var elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)
                : api.createElement(tag);
            if (hash < dot)
                elm.setAttribute('id', sel.slice(hash + 1, dot));
            if (dotIdx > 0)
                elm.setAttribute('class', sel.slice(dot + 1).replace(/\./g, ' '));
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            if (_is__WEBPACK_IMPORTED_MODULE_1__["array"](children)) {
                for (i = 0; i < children.length; ++i) {
                    var ch = children[i];
                    if (ch != null) {
                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                    }
                }
            }
            else if (_is__WEBPACK_IMPORTED_MODULE_1__["primitive"](vnode.text)) {
                api.appendChild(elm, api.createTextNode(vnode.text));
            }
            i = vnode.data.hook; // Reuse variable
            if (isDef(i)) {
                if (i.create)
                    i.create(emptyNode, vnode);
                if (i.insert)
                    insertedVnodeQueue.push(vnode);
            }
        }
        else {
            vnode.elm = api.createTextNode(vnode.text);
        }
        return vnode.elm;
    }
    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            var ch = vnodes[startIdx];
            if (ch != null) {
                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
            }
        }
    }
    function invokeDestroyHook(vnode) {
        var i, j, data = vnode.data;
        if (data !== undefined) {
            if (isDef(i = data.hook) && isDef(i = i.destroy))
                i(vnode);
            for (i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
            if (vnode.children !== undefined) {
                for (j = 0; j < vnode.children.length; ++j) {
                    i = vnode.children[j];
                    if (i != null && typeof i !== "string") {
                        invokeDestroyHook(i);
                    }
                }
            }
        }
    }
    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
        for (; startIdx <= endIdx; ++startIdx) {
            var i_1 = void 0, listeners = void 0, rm = void 0, ch = vnodes[startIdx];
            if (ch != null) {
                if (isDef(ch.sel)) {
                    invokeDestroyHook(ch);
                    listeners = cbs.remove.length + 1;
                    rm = createRmCb(ch.elm, listeners);
                    for (i_1 = 0; i_1 < cbs.remove.length; ++i_1)
                        cbs.remove[i_1](ch, rm);
                    if (isDef(i_1 = ch.data) && isDef(i_1 = i_1.hook) && isDef(i_1 = i_1.remove)) {
                        i_1(ch, rm);
                    }
                    else {
                        rm();
                    }
                }
                else {
                    api.removeChild(parentElm, ch.elm);
                }
            }
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
        var oldStartIdx = 0, newStartIdx = 0;
        var oldEndIdx = oldCh.length - 1;
        var oldStartVnode = oldCh[0];
        var oldEndVnode = oldCh[oldEndIdx];
        var newEndIdx = newCh.length - 1;
        var newStartVnode = newCh[0];
        var newEndVnode = newCh[newEndIdx];
        var oldKeyToIdx;
        var idxInOld;
        var elmToMove;
        var before;
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (oldStartVnode == null) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
            }
            else if (oldEndVnode == null) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (newStartVnode == null) {
                newStartVnode = newCh[++newStartIdx];
            }
            else if (newEndVnode == null) {
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (oldKeyToIdx === undefined) {
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                }
                idxInOld = oldKeyToIdx[newStartVnode.key];
                if (isUndef(idxInOld)) {
                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    newStartVnode = newCh[++newStartIdx];
                }
                else {
                    elmToMove = oldCh[idxInOld];
                    if (elmToMove.sel !== newStartVnode.sel) {
                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    }
                    else {
                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                        oldCh[idxInOld] = undefined;
                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                    }
                    newStartVnode = newCh[++newStartIdx];
                }
            }
        }
        if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {
            if (oldStartIdx > oldEndIdx) {
                before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
                addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
            }
            else {
                removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
            }
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
        var i, hook;
        if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {
            i(oldVnode, vnode);
        }
        var elm = vnode.elm = oldVnode.elm;
        var oldCh = oldVnode.children;
        var ch = vnode.children;
        if (oldVnode === vnode)
            return;
        if (vnode.data !== undefined) {
            for (i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            i = vnode.data.hook;
            if (isDef(i) && isDef(i = i.update))
                i(oldVnode, vnode);
        }
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
            }
            else if (isDef(ch)) {
                if (isDef(oldVnode.text))
                    api.setTextContent(elm, '');
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                api.setTextContent(elm, '');
            }
        }
        else if (oldVnode.text !== vnode.text) {
            if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            api.setTextContent(elm, vnode.text);
        }
        if (isDef(hook) && isDef(i = hook.postpatch)) {
            i(oldVnode, vnode);
        }
    }
    return function patch(oldVnode, vnode) {
        var i, elm, parent;
        var insertedVnodeQueue = [];
        for (i = 0; i < cbs.pre.length; ++i)
            cbs.pre[i]();
        if (!isVnode(oldVnode)) {
            oldVnode = emptyNodeAt(oldVnode);
        }
        if (sameVnode(oldVnode, vnode)) {
            patchVnode(oldVnode, vnode, insertedVnodeQueue);
        }
        else {
            elm = oldVnode.elm;
            parent = api.parentNode(elm);
            createElm(vnode, insertedVnodeQueue);
            if (parent !== null) {
                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                removeVnodes(parent, [oldVnode], 0, 0);
            }
        }
        for (i = 0; i < insertedVnodeQueue.length; ++i) {
            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
        }
        for (i = 0; i < cbs.post.length; ++i)
            cbs.post[i]();
        return vnode;
    };
}


/***/ }),

/***/ "../../../node_modules/snabbdom/es/thunk.js":
/*!**************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/es/thunk.js ***!
  \**************************************************************************************************/
/*! exports provided: thunk, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "thunk", function() { return thunk; });
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h */ "../../../node_modules/snabbdom/es/h.js");

function copyToThunk(vnode, thunk) {
    thunk.elm = vnode.elm;
    vnode.data.fn = thunk.data.fn;
    vnode.data.args = thunk.data.args;
    thunk.data = vnode.data;
    thunk.children = vnode.children;
    thunk.text = vnode.text;
    thunk.elm = vnode.elm;
}
function init(thunk) {
    var cur = thunk.data;
    var vnode = cur.fn.apply(undefined, cur.args);
    copyToThunk(vnode, thunk);
}
function prepatch(oldVnode, thunk) {
    var i, old = oldVnode.data, cur = thunk.data;
    var oldArgs = old.args, args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn.apply(undefined, args), thunk);
        return;
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn.apply(undefined, args), thunk);
            return;
        }
    }
    copyToThunk(oldVnode, thunk);
}
var thunk = function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return Object(_h__WEBPACK_IMPORTED_MODULE_0__["h"])(sel, {
        key: key,
        hook: { init: init, prepatch: prepatch },
        fn: fn,
        args: args
    });
};
/* harmony default export */ __webpack_exports__["default"] = (thunk);


/***/ }),

/***/ "../../../node_modules/snabbdom/es/vnode.js":
/*!**************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/es/vnode.js ***!
  \**************************************************************************************************/
/*! exports provided: vnode, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vnode", function() { return vnode; });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
/* harmony default export */ __webpack_exports__["default"] = (vnode);


/***/ }),

/***/ "../../../node_modules/snabbdom/h.js":
/*!*******************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/h.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var vnode_1 = __webpack_require__(/*! ./vnode */ "../../../node_modules/snabbdom/vnode.js");
var is = __webpack_require__(/*! ./is */ "../../../node_modules/snabbdom/is.js");
function addNS(data, children, sel) {
    data.ns = 'http://www.w3.org/2000/svg';
    if (sel !== 'foreignObject' && children !== undefined) {
        for (var i = 0; i < children.length; ++i) {
            var childData = children[i].data;
            if (childData !== undefined) {
                addNS(childData, children[i].children, children[i].sel);
            }
        }
    }
}
function h(sel, b, c) {
    var data = {}, children, text, i;
    if (c !== undefined) {
        data = b;
        if (is.array(c)) {
            children = c;
        }
        else if (is.primitive(c)) {
            text = c;
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined) {
        if (is.array(b)) {
            children = b;
        }
        else if (is.primitive(b)) {
            text = b;
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (children !== undefined) {
        for (i = 0; i < children.length; ++i) {
            if (is.primitive(children[i]))
                children[i] = vnode_1.vnode(undefined, undefined, undefined, children[i], undefined);
        }
    }
    if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g' &&
        (sel.length === 3 || sel[3] === '.' || sel[3] === '#')) {
        addNS(data, children, sel);
    }
    return vnode_1.vnode(sel, data, children, text, undefined);
}
exports.h = h;
;
exports.default = h;


/***/ }),

/***/ "../../../node_modules/snabbdom/is.js":
/*!********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/is.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.array = Array.isArray;
function primitive(s) {
    return typeof s === 'string' || typeof s === 'number';
}
exports.primitive = primitive;


/***/ }),

/***/ "../../../node_modules/snabbdom/modules/attributes.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/modules/attributes.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var xlinkNS = 'http://www.w3.org/1999/xlink';
var xmlNS = 'http://www.w3.org/XML/1998/namespace';
var colonChar = 58;
var xChar = 120;
function updateAttrs(oldVnode, vnode) {
    var key, elm = vnode.elm, oldAttrs = oldVnode.data.attrs, attrs = vnode.data.attrs;
    if (!oldAttrs && !attrs)
        return;
    if (oldAttrs === attrs)
        return;
    oldAttrs = oldAttrs || {};
    attrs = attrs || {};
    // update modified attributes, add new attributes
    for (key in attrs) {
        var cur = attrs[key];
        var old = oldAttrs[key];
        if (old !== cur) {
            if (cur === true) {
                elm.setAttribute(key, "");
            }
            else if (cur === false) {
                elm.removeAttribute(key);
            }
            else {
                if (key.charCodeAt(0) !== xChar) {
                    elm.setAttribute(key, cur);
                }
                else if (key.charCodeAt(3) === colonChar) {
                    // Assume xml namespace
                    elm.setAttributeNS(xmlNS, key, cur);
                }
                else if (key.charCodeAt(5) === colonChar) {
                    // Assume xlink namespace
                    elm.setAttributeNS(xlinkNS, key, cur);
                }
                else {
                    elm.setAttribute(key, cur);
                }
            }
        }
    }
    // remove removed attributes
    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
    // the other option is to remove all attributes with value == undefined
    for (key in oldAttrs) {
        if (!(key in attrs)) {
            elm.removeAttribute(key);
        }
    }
}
exports.attributesModule = { create: updateAttrs, update: updateAttrs };
exports.default = exports.attributesModule;


/***/ }),

/***/ "../../../node_modules/snabbdom/modules/class.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/modules/class.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function updateClass(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldClass = oldVnode.data.class, klass = vnode.data.class;
    if (!oldClass && !klass)
        return;
    if (oldClass === klass)
        return;
    oldClass = oldClass || {};
    klass = klass || {};
    for (name in oldClass) {
        if (!klass[name]) {
            elm.classList.remove(name);
        }
    }
    for (name in klass) {
        cur = klass[name];
        if (cur !== oldClass[name]) {
            elm.classList[cur ? 'add' : 'remove'](name);
        }
    }
}
exports.classModule = { create: updateClass, update: updateClass };
exports.default = exports.classModule;


/***/ }),

/***/ "../../../node_modules/snabbdom/modules/eventlisteners.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/modules/eventlisteners.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function invokeHandler(handler, vnode, event) {
    if (typeof handler === "function") {
        // call function handler
        handler.call(vnode, event, vnode);
    }
    else if (typeof handler === "object") {
        // call handler with arguments
        if (typeof handler[0] === "function") {
            // special case for single argument for performance
            if (handler.length === 2) {
                handler[0].call(vnode, handler[1], event, vnode);
            }
            else {
                var args = handler.slice(1);
                args.push(event);
                args.push(vnode);
                handler[0].apply(vnode, args);
            }
        }
        else {
            // call multiple handlers
            for (var i = 0; i < handler.length; i++) {
                invokeHandler(handler[i], vnode, event);
            }
        }
    }
}
function handleEvent(event, vnode) {
    var name = event.type, on = vnode.data.on;
    // call event handler(s) if exists
    if (on && on[name]) {
        invokeHandler(on[name], vnode, event);
    }
}
function createListener() {
    return function handler(event) {
        handleEvent(event, handler.vnode);
    };
}
function updateEventListeners(oldVnode, vnode) {
    var oldOn = oldVnode.data.on, oldListener = oldVnode.listener, oldElm = oldVnode.elm, on = vnode && vnode.data.on, elm = (vnode && vnode.elm), name;
    // optimization for reused immutable handlers
    if (oldOn === on) {
        return;
    }
    // remove existing listeners which no longer used
    if (oldOn && oldListener) {
        // if element changed or deleted we remove all existing listeners unconditionally
        if (!on) {
            for (name in oldOn) {
                // remove listener if element was changed or existing listeners removed
                oldElm.removeEventListener(name, oldListener, false);
            }
        }
        else {
            for (name in oldOn) {
                // remove listener if existing listener removed
                if (!on[name]) {
                    oldElm.removeEventListener(name, oldListener, false);
                }
            }
        }
    }
    // add new listeners which has not already attached
    if (on) {
        // reuse existing listener or create new
        var listener = vnode.listener = oldVnode.listener || createListener();
        // update vnode for listener
        listener.vnode = vnode;
        // if element changed or added we add all needed listeners unconditionally
        if (!oldOn) {
            for (name in on) {
                // add listener if element was changed or new listeners added
                elm.addEventListener(name, listener, false);
            }
        }
        else {
            for (name in on) {
                // add listener if new listener added
                if (!oldOn[name]) {
                    elm.addEventListener(name, listener, false);
                }
            }
        }
    }
}
exports.eventListenersModule = {
    create: updateEventListeners,
    update: updateEventListeners,
    destroy: updateEventListeners
};
exports.default = exports.eventListenersModule;


/***/ }),

/***/ "../../../node_modules/snabbdom/modules/props.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/modules/props.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function updateProps(oldVnode, vnode) {
    var key, cur, old, elm = vnode.elm, oldProps = oldVnode.data.props, props = vnode.data.props;
    if (!oldProps && !props)
        return;
    if (oldProps === props)
        return;
    oldProps = oldProps || {};
    props = props || {};
    for (key in oldProps) {
        if (!props[key]) {
            delete elm[key];
        }
    }
    for (key in props) {
        cur = props[key];
        old = oldProps[key];
        if (old !== cur && (key !== 'value' || elm[key] !== cur)) {
            elm[key] = cur;
        }
    }
}
exports.propsModule = { create: updateProps, update: updateProps };
exports.default = exports.propsModule;


/***/ }),

/***/ "../../../node_modules/snabbdom/modules/style.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/modules/style.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.
var raf = (typeof window !== 'undefined' && (window.requestAnimationFrame).bind(window)) || setTimeout;
var nextFrame = function (fn) { raf(function () { raf(fn); }); };
var reflowForced = false;
function setNextFrame(obj, prop, val) {
    nextFrame(function () { obj[prop] = val; });
}
function updateStyle(oldVnode, vnode) {
    var cur, name, elm = vnode.elm, oldStyle = oldVnode.data.style, style = vnode.data.style;
    if (!oldStyle && !style)
        return;
    if (oldStyle === style)
        return;
    oldStyle = oldStyle || {};
    style = style || {};
    var oldHasDel = 'delayed' in oldStyle;
    for (name in oldStyle) {
        if (!style[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.removeProperty(name);
            }
            else {
                elm.style[name] = '';
            }
        }
    }
    for (name in style) {
        cur = style[name];
        if (name === 'delayed' && style.delayed) {
            for (var name2 in style.delayed) {
                cur = style.delayed[name2];
                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                    setNextFrame(elm.style, name2, cur);
                }
            }
        }
        else if (name !== 'remove' && cur !== oldStyle[name]) {
            if (name[0] === '-' && name[1] === '-') {
                elm.style.setProperty(name, cur);
            }
            else {
                elm.style[name] = cur;
            }
        }
    }
}
function applyDestroyStyle(vnode) {
    var style, name, elm = vnode.elm, s = vnode.data.style;
    if (!s || !(style = s.destroy))
        return;
    for (name in style) {
        elm.style[name] = style[name];
    }
}
function applyRemoveStyle(vnode, rm) {
    var s = vnode.data.style;
    if (!s || !s.remove) {
        rm();
        return;
    }
    if (!reflowForced) {
        getComputedStyle(document.body).transform;
        reflowForced = true;
    }
    var name, elm = vnode.elm, i = 0, compStyle, style = s.remove, amount = 0, applied = [];
    for (name in style) {
        applied.push(name);
        elm.style[name] = style[name];
    }
    compStyle = getComputedStyle(elm);
    var props = compStyle['transition-property'].split(', ');
    for (; i < props.length; ++i) {
        if (applied.indexOf(props[i]) !== -1)
            amount++;
    }
    elm.addEventListener('transitionend', function (ev) {
        if (ev.target === elm)
            --amount;
        if (amount === 0)
            rm();
    });
}
function forceReflow() {
    reflowForced = false;
}
exports.styleModule = {
    pre: forceReflow,
    create: updateStyle,
    update: updateStyle,
    destroy: applyDestroyStyle,
    remove: applyRemoveStyle
};
exports.default = exports.styleModule;


/***/ }),

/***/ "../../../node_modules/snabbdom/vnode.js":
/*!***********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/snabbdom/vnode.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function vnode(sel, data, children, text, elm) {
    var key = data === undefined ? undefined : data.key;
    return { sel: sel, data: data, children: children,
        text: text, elm: elm, key: key };
}
exports.vnode = vnode;
exports.default = vnode;


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-protocol/lib/handshake.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-protocol/lib/handshake.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function isWebviewReadyMessage(object) {
    return object !== undefined && object.hasOwnProperty('readyMessage');
}
exports.isWebviewReadyMessage = isWebviewReadyMessage;
exports.SprottyDiagramIdentifier = Symbol('SprottyDiagramIdentifier');
function isDiagramIdentifier(object) {
    return object !== undefined && object.hasOwnProperty('clientId') && object.hasOwnProperty('diagramType') && object.hasOwnProperty('uri');
}
exports.isDiagramIdentifier = isDiagramIdentifier;


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-protocol/lib/index.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-protocol/lib/index.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./handshake */ "../../../node_modules/sprotty-vscode-protocol/lib/handshake.js"));
__export(__webpack_require__(/*! ./sprotty */ "../../../node_modules/sprotty-vscode-protocol/lib/sprotty.js"));


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-protocol/lib/sprotty.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-protocol/lib/sprotty.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function isAction(object) {
    return object !== undefined && object.hasOwnProperty('kind') && typeof (object['kind']) === 'string';
}
exports.isAction = isAction;
function isActionMessage(object) {
    return object !== undefined && object.hasOwnProperty('clientId') && object.hasOwnProperty('action');
}
exports.isActionMessage = isActionMessage;


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/disabled-keytool.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/disabled-keytool.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
/**
 * Key mappings should be provided via the vscode extensions's `package.json`.
 */
var DisabledKeyTool = /** @class */ (function (_super) {
    __extends(DisabledKeyTool, _super);
    function DisabledKeyTool() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DisabledKeyTool.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    return DisabledKeyTool;
}(sprotty_1.KeyTool));
exports.DisabledKeyTool = DisabledKeyTool;


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/index.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/index.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./sprotty-starter */ "../../../node_modules/sprotty-vscode-webview/lib/sprotty-starter.js"));
__export(__webpack_require__(/*! ./vscode-diagram-server */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-server.js"));
__export(__webpack_require__(/*! ./vscode-diagram-widget */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-widget.js"));
__export(__webpack_require__(/*! sprotty-vscode-protocol */ "../../../node_modules/sprotty-vscode-protocol/lib/index.js"));


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/root-popup-model-provider.js":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/root-popup-model-provider.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
exports.IRootPopupModelProvider = Symbol('IRootPopupModelProvider');


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/sprotty-starter.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/sprotty-starter.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var sprotty_vscode_protocol_1 = __webpack_require__(/*! sprotty-vscode-protocol */ "../../../node_modules/sprotty-vscode-protocol/lib/index.js");
var disabled_keytool_1 = __webpack_require__(/*! ./disabled-keytool */ "../../../node_modules/sprotty-vscode-webview/lib/disabled-keytool.js");
var vscode_api_1 = __webpack_require__(/*! ./vscode-api */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-api.js");
var vscode_diagram_server_1 = __webpack_require__(/*! ./vscode-diagram-server */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-server.js");
var vscode_diagram_widget_1 = __webpack_require__(/*! ./vscode-diagram-widget */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-widget.js");
var SprottyStarter = /** @class */ (function () {
    function SprottyStarter() {
        this.sendReadyMessage();
        this.acceptDiagramIdentifier();
    }
    SprottyStarter.prototype.sendReadyMessage = function () {
        vscode_api_1.vscodeApi.postMessage({ readyMessage: 'Sprotty Webview ready' });
    };
    SprottyStarter.prototype.acceptDiagramIdentifier = function () {
        var _this = this;
        console.log('Waiting for diagram identifier...');
        var eventListener = function (message) {
            console.log("...received...", message);
            if (sprotty_vscode_protocol_1.isDiagramIdentifier(message.data)) {
                var diagramIdentifier = message.data;
                var diContainer = _this.createContainer(diagramIdentifier);
                _this.addVscodeBindings(diContainer, diagramIdentifier);
                diContainer.get(vscode_diagram_widget_1.VscodeDiagramWidget);
                window.removeEventListener('message', eventListener);
            }
        };
        window.addEventListener('message', eventListener);
    };
    SprottyStarter.prototype.addVscodeBindings = function (container, diagramIdentifier) {
        container.bind(vscode_diagram_widget_1.VscodeDiagramWidget).toSelf().inSingletonScope();
        container.bind(vscode_diagram_widget_1.VscodeDiagramWidgetFactory).toFactory(function (context) {
            return function () { return context.container.get(vscode_diagram_widget_1.VscodeDiagramWidget); };
        });
        container.bind(sprotty_vscode_protocol_1.SprottyDiagramIdentifier).toConstantValue(diagramIdentifier);
        container.bind(vscode_diagram_server_1.VscodeDiagramServer).toSelf().inSingletonScope();
        container.bind(sprotty_1.TYPES.ModelSource).toService(vscode_diagram_server_1.VscodeDiagramServer);
        container.bind(sprotty_1.DiagramServer).toService(vscode_diagram_server_1.VscodeDiagramServer);
        container.rebind(sprotty_1.KeyTool).to(disabled_keytool_1.DisabledKeyTool);
    };
    return SprottyStarter;
}());
exports.SprottyStarter = SprottyStarter;


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/vscode-api.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/vscode-api.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.vscodeApi = acquireVsCodeApi();


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-server.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/vscode-diagram-server.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var vscode_diagram_widget_1 = __webpack_require__(/*! ./vscode-diagram-widget */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-widget.js");
var vscode_api_1 = __webpack_require__(/*! ./vscode-api */ "../../../node_modules/sprotty-vscode-webview/lib/vscode-api.js");
var root_popup_model_provider_1 = __webpack_require__(/*! ./root-popup-model-provider */ "../../../node_modules/sprotty-vscode-webview/lib/root-popup-model-provider.js");
var VscodeDiagramServer = /** @class */ (function (_super) {
    __extends(VscodeDiagramServer, _super);
    function VscodeDiagramServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VscodeDiagramServer.prototype.initialize = function (registry) {
        var _this = this;
        _super.prototype.initialize.call(this, registry);
        registry.register(sprotty_1.SelectCommand.KIND, this);
        window.addEventListener('message', function (message) {
            if ('data' in message && sprotty_1.isActionMessage(message.data)) {
                _this.messageReceived(message.data);
            }
        });
    };
    VscodeDiagramServer.prototype.sendMessage = function (message) {
        vscode_api_1.vscodeApi.postMessage(message);
    };
    VscodeDiagramServer.prototype.handleLocally = function (action) {
        if (action instanceof sprotty_1.RequestPopupModelAction) {
            return this.handleRequestPopupModel(action);
        }
        else {
            return _super.prototype.handleLocally.call(this, action);
        }
    };
    VscodeDiagramServer.prototype.handleServerStateAction = function (status) {
        this.diagramWidgetFactory().setStatus(status);
        return false;
    };
    VscodeDiagramServer.prototype.handleRequestPopupModel = function (action) {
        var _this = this;
        if (this.rootPopupModelProvider && action.elementId === this.currentRoot.id) {
            this.rootPopupModelProvider.getPopupModel(action, this.currentRoot).then(function (model) {
                if (model)
                    _this.actionDispatcher.dispatch(new sprotty_1.SetPopupModelAction(model));
            });
            return false;
        }
        else {
            return true;
        }
    };
    __decorate([
        inversify_1.inject(vscode_diagram_widget_1.VscodeDiagramWidgetFactory),
        __metadata("design:type", Function)
    ], VscodeDiagramServer.prototype, "diagramWidgetFactory", void 0);
    __decorate([
        inversify_1.inject(root_popup_model_provider_1.IRootPopupModelProvider), inversify_1.optional(),
        __metadata("design:type", Object)
    ], VscodeDiagramServer.prototype, "rootPopupModelProvider", void 0);
    return VscodeDiagramServer;
}(sprotty_1.DiagramServer));
exports.VscodeDiagramServer = VscodeDiagramServer;


/***/ }),

/***/ "../../../node_modules/sprotty-vscode-webview/lib/vscode-diagram-widget.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty-vscode-webview/lib/vscode-diagram-widget.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_1 = __webpack_require__(/*! sprotty */ "../../../node_modules/sprotty/lib/index.js");
var sprotty_vscode_protocol_1 = __webpack_require__(/*! sprotty-vscode-protocol */ "../../../node_modules/sprotty-vscode-protocol/lib/index.js");
exports.VscodeDiagramWidgetFactory = Symbol('VscodeDiagramWidgetFactory');
var VscodeDiagramWidget = /** @class */ (function () {
    function VscodeDiagramWidget() {
    }
    VscodeDiagramWidget.prototype.initialize = function () {
        this.initializeHtml();
        this.initializeSprotty();
    };
    VscodeDiagramWidget.prototype.initializeHtml = function () {
        var containerDiv = document.getElementById(this.diagramIdentifier.clientId + '_container');
        if (containerDiv) {
            var svgContainer = document.createElement("div");
            svgContainer.id = this.viewerOptions.baseDiv;
            containerDiv.appendChild(svgContainer);
            var hiddenContainer = document.createElement("div");
            hiddenContainer.id = this.viewerOptions.hiddenDiv;
            document.body.appendChild(hiddenContainer);
            var statusDiv = document.createElement("div");
            statusDiv.setAttribute('class', 'sprotty-status');
            containerDiv.appendChild(statusDiv);
            this.statusIconDiv = document.createElement("div");
            statusDiv.appendChild(this.statusIconDiv);
            this.statusMessageDiv = document.createElement("div");
            this.statusMessageDiv.setAttribute('class', 'sprotty-status-message');
            statusDiv.appendChild(this.statusMessageDiv);
        }
    };
    VscodeDiagramWidget.prototype.initializeSprotty = function () {
        if (this.modelSource instanceof sprotty_1.DiagramServer)
            this.modelSource.clientId = this.diagramIdentifier.clientId;
        this.actionDispatcher.dispatch(new sprotty_1.RequestModelAction({
            sourceUri: this.diagramIdentifier.uri,
            diagramType: this.diagramIdentifier.diagramType
        }));
    };
    VscodeDiagramWidget.prototype.setStatus = function (status) {
        this.statusMessageDiv.textContent = status.message;
        this.removeClasses(this.statusMessageDiv, 1);
        this.statusMessageDiv.classList.add(status.severity.toLowerCase());
        this.removeClasses(this.statusIconDiv, 0);
        var classes = this.statusIconDiv.classList;
        classes.add(status.severity.toLowerCase());
        switch (status.severity) {
            case 'FATAL':
                classes.add('fa');
                classes.add('fa-times-circle');
                break;
            case 'ERROR':
                classes.add('fa');
                classes.add('fa-exclamation-circle');
                break;
            case 'WARNING':
                classes.add('fa');
                classes.add('fa-exclamation-circle');
                break;
            case 'INFO':
                classes.add('fa');
                classes.add('fa-info-circle');
                break;
        }
    };
    VscodeDiagramWidget.prototype.removeClasses = function (element, keep) {
        var classes = element.classList;
        while (classes.length > keep) {
            var item = classes.item(classes.length - 1);
            if (item)
                classes.remove(item);
        }
    };
    __decorate([
        inversify_1.inject(sprotty_vscode_protocol_1.SprottyDiagramIdentifier),
        __metadata("design:type", Object)
    ], VscodeDiagramWidget.prototype, "diagramIdentifier", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], VscodeDiagramWidget.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ModelSource),
        __metadata("design:type", sprotty_1.ModelSource)
    ], VscodeDiagramWidget.prototype, "modelSource", void 0);
    __decorate([
        inversify_1.inject(sprotty_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], VscodeDiagramWidget.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], VscodeDiagramWidget.prototype, "initialize", null);
    VscodeDiagramWidget = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], VscodeDiagramWidget);
    return VscodeDiagramWidget;
}());
exports.VscodeDiagramWidget = VscodeDiagramWidget;


/***/ }),

/***/ "../../../node_modules/sprotty/css/edit-label.css":
/*!********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/css/edit-label.css ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../css-loader/dist/cjs.js!./edit-label.css */ "../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sprotty/css/edit-label.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/actions/action-dispatcher.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/actions/action-dispatcher.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var async_1 = __webpack_require__(/*! ../../utils/async */ "../../../node_modules/sprotty/lib/utils/async.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var set_model_1 = __webpack_require__(/*! ../features/set-model */ "../../../node_modules/sprotty/lib/base/features/set-model.js");
var undo_redo_1 = __webpack_require__(/*! ../../features/undo-redo/undo-redo */ "../../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
var action_1 = __webpack_require__(/*! ./action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
/**
 * Collects actions, converts them to commands and dispatches them.
 * Also acts as the proxy to model sources such as diagram servers.
 */
var ActionDispatcher = /** @class */ (function () {
    function ActionDispatcher() {
        this.postponedActions = [];
        this.requests = new Map();
    }
    ActionDispatcher.prototype.initialize = function () {
        var _this = this;
        if (!this.initialized) {
            this.initialized = this.actionHandlerRegistryProvider().then(function (registry) {
                _this.actionHandlerRegistry = registry;
                _this.handleAction(new set_model_1.SetModelAction(smodel_factory_1.EMPTY_ROOT));
            });
        }
        return this.initialized;
    };
    /**
     * Dispatch an action by querying all handlers that are registered for its kind.
     * The returned promise is resolved when all handler results (commands or actions)
     * have been processed.
     */
    ActionDispatcher.prototype.dispatch = function (action) {
        var _this = this;
        return this.initialize().then(function () {
            if (_this.blockUntil !== undefined) {
                return _this.handleBlocked(action, _this.blockUntil);
            }
            else if (_this.diagramLocker.isAllowed(action)) {
                return _this.handleAction(action);
            }
            return undefined;
        });
    };
    /**
     * Calls `dispatch` on every action in the given array. The returned promise
     * is resolved when the promises of all `dispatch` calls have been resolved.
     */
    ActionDispatcher.prototype.dispatchAll = function (actions) {
        var _this = this;
        return Promise.all(actions.map(function (action) { return _this.dispatch(action); }));
    };
    /**
     * Dispatch a request. The returned promise is resolved when a response with matching
     * identifier is dispatched. That response is _not_ passed to the registered action
     * handlers. Instead, it is the responsibility of the caller of this method to handle
     * the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     */
    ActionDispatcher.prototype.request = function (action) {
        if (!action.requestId) {
            return Promise.reject(new Error('Request without requestId'));
        }
        var deferred = new async_1.Deferred();
        this.requests.set(action.requestId, deferred);
        this.dispatch(action);
        return deferred.promise;
    };
    ActionDispatcher.prototype.handleAction = function (action) {
        if (action.kind === undo_redo_1.UndoAction.KIND) {
            return this.commandStack.undo().then(function () { });
        }
        if (action.kind === undo_redo_1.RedoAction.KIND) {
            return this.commandStack.redo().then(function () { });
        }
        if (action_1.isResponseAction(action)) {
            var deferred = this.requests.get(action.responseId);
            if (deferred !== undefined) {
                this.requests.delete(action.responseId);
                if (action.kind === action_1.RejectAction.KIND) {
                    var rejectAction = action;
                    deferred.reject(new Error(rejectAction.message));
                    this.logger.warn(this, "Request with id " + action.responseId + " failed.", rejectAction.message, rejectAction.detail);
                }
                else {
                    deferred.resolve(action);
                }
                return Promise.resolve();
            }
            this.logger.log(this, 'No matching request for response', action);
        }
        var handlers = this.actionHandlerRegistry.get(action.kind);
        if (handlers.length === 0) {
            this.logger.warn(this, 'Missing handler for action', action);
            var error = new Error("Missing handler for action '" + action.kind + "'");
            if (action_1.isRequestAction(action)) {
                var deferred = this.requests.get(action.requestId);
                if (deferred !== undefined) {
                    this.requests.delete(action.requestId);
                    deferred.reject(error);
                }
            }
            return Promise.reject(error);
        }
        this.logger.log(this, 'Handle', action);
        var promises = [];
        for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {
            var handler = handlers_1[_i];
            var result = handler.handle(action);
            if (action_1.isAction(result)) {
                promises.push(this.dispatch(result));
            }
            else if (result !== undefined) {
                promises.push(this.commandStack.execute(result));
                this.blockUntil = result.blockUntil;
            }
        }
        return Promise.all(promises);
    };
    ActionDispatcher.prototype.handleBlocked = function (action, predicate) {
        var _this = this;
        if (predicate(action)) {
            this.blockUntil = undefined;
            var result = this.handleAction(action);
            var actions = this.postponedActions;
            this.postponedActions = [];
            for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
                var a = actions_1[_i];
                this.dispatch(a.action).then(a.resolve, a.reject);
            }
            return result;
        }
        else {
            this.logger.log(this, 'Action is postponed due to block condition', action);
            return new Promise(function (resolve, reject) {
                _this.postponedActions.push({ action: action, resolve: resolve, reject: reject });
            });
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ActionHandlerRegistryProvider),
        __metadata("design:type", Function)
    ], ActionDispatcher.prototype, "actionHandlerRegistryProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ICommandStack),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "commandStack", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], ActionDispatcher.prototype, "syncer", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IDiagramLocker),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "diagramLocker", void 0);
    ActionDispatcher = __decorate([
        inversify_1.injectable()
    ], ActionDispatcher);
    return ActionDispatcher;
}());
exports.ActionDispatcher = ActionDispatcher;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/actions/action-handler.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/actions/action-handler.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../../node_modules/sprotty/lib/utils/inversify.js");
/**
 * The action handler registry maps actions to their handlers using the Action.kind property.
 */
var ActionHandlerRegistry = /** @class */ (function (_super) {
    __extends(ActionHandlerRegistry, _super);
    function ActionHandlerRegistry(registrations, initializers) {
        var _this = _super.call(this) || this;
        registrations.forEach(function (registration) {
            return _this.register(registration.actionKind, registration.factory());
        });
        initializers.forEach(function (initializer) {
            return _this.initializeActionHandler(initializer);
        });
        return _this;
    }
    ActionHandlerRegistry.prototype.initializeActionHandler = function (initializer) {
        initializer.initialize(this);
    };
    ActionHandlerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ActionHandlerRegistration)), __param(0, inversify_1.optional()),
        __param(1, inversify_1.multiInject(types_1.TYPES.IActionHandlerInitializer)), __param(1, inversify_1.optional()),
        __metadata("design:paramtypes", [Array, Array])
    ], ActionHandlerRegistry);
    return ActionHandlerRegistry;
}(registry_1.MultiInstanceRegistry));
exports.ActionHandlerRegistry = ActionHandlerRegistry;
/**
 * Utility function to register an action handler for an action kind.
 */
function configureActionHandler(context, kind, constr) {
    if (typeof constr === 'function') {
        if (!inversify_2.isInjectable(constr)) {
            throw new Error("Action handlers should be @injectable: " + constr.name);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ActionHandlerRegistration).toDynamicValue(function (ctx) { return ({
        actionKind: kind,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureActionHandler = configureActionHandler;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/actions/action.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/actions/action.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function isAction(object) {
    return object !== undefined && object.hasOwnProperty('kind') && typeof (object['kind']) === 'string';
}
exports.isAction = isAction;
function isRequestAction(object) {
    return isAction(object) && object.hasOwnProperty('requestId')
        && typeof (object['requestId']) === 'string';
}
exports.isRequestAction = isRequestAction;
var nextRequestId = 1;
/**
 * Generate a unique `requestId` for a request action.
 */
function generateRequestId() {
    return (nextRequestId++).toString();
}
exports.generateRequestId = generateRequestId;
function isResponseAction(object) {
    return isAction(object) && object.hasOwnProperty('responseId')
        && typeof (object['responseId']) === 'string'
        && object['responseId'] !== '';
}
exports.isResponseAction = isResponseAction;
/**
 * A reject action is fired to indicate that a request must be rejected.
 */
var RejectAction = /** @class */ (function () {
    function RejectAction(message, responseId, detail) {
        this.message = message;
        this.responseId = responseId;
        this.detail = detail;
        this.kind = RejectAction.KIND;
    }
    RejectAction.KIND = 'rejectRequest';
    return RejectAction;
}());
exports.RejectAction = RejectAction;
/**
 * A list of actions with a label.
 * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,
 * to define an entry in the command palette or in the context menu.
 */
var LabeledAction = /** @class */ (function () {
    function LabeledAction(label, actions, icon) {
        this.label = label;
        this.actions = actions;
        this.icon = icon;
    }
    return LabeledAction;
}());
exports.LabeledAction = LabeledAction;
function isLabeledAction(element) {
    return element !== undefined
        && element.label !== undefined
        && element.actions !== undefined;
}
exports.isLabeledAction = isLabeledAction;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/actions/diagram-locker.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/actions/diagram-locker.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var DefaultDiagramLocker = /** @class */ (function () {
    function DefaultDiagramLocker() {
    }
    DefaultDiagramLocker.prototype.isAllowed = function (action) {
        return true;
    };
    DefaultDiagramLocker = __decorate([
        inversify_1.injectable()
    ], DefaultDiagramLocker);
    return DefaultDiagramLocker;
}());
exports.DefaultDiagramLocker = DefaultDiagramLocker;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/animations/animation-frame-syncer.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var AnimationFrameSyncer = /** @class */ (function () {
    function AnimationFrameSyncer() {
        this.tasks = [];
        this.endTasks = [];
        this.triggered = false;
    }
    AnimationFrameSyncer.prototype.isAvailable = function () {
        return typeof requestAnimationFrame === "function";
    };
    AnimationFrameSyncer.prototype.onNextFrame = function (task) {
        this.tasks.push(task);
        this.trigger();
    };
    AnimationFrameSyncer.prototype.onEndOfNextFrame = function (task) {
        this.endTasks.push(task);
        this.trigger();
    };
    AnimationFrameSyncer.prototype.trigger = function () {
        var _this = this;
        if (!this.triggered) {
            this.triggered = true;
            if (this.isAvailable())
                requestAnimationFrame(function (time) { return _this.run(time); });
            else
                setTimeout(function (time) { return _this.run(time); });
        }
    };
    AnimationFrameSyncer.prototype.run = function (time) {
        var tasks = this.tasks;
        var endTasks = this.endTasks;
        this.triggered = false;
        this.tasks = [];
        this.endTasks = [];
        tasks.forEach(function (task) { return task.call(undefined, time); });
        endTasks.forEach(function (task) { return task.call(undefined, time); });
    };
    AnimationFrameSyncer = __decorate([
        inversify_1.injectable()
    ], AnimationFrameSyncer);
    return AnimationFrameSyncer;
}());
exports.AnimationFrameSyncer = AnimationFrameSyncer;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/animations/animation.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/animations/animation.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var easing_1 = __webpack_require__(/*! ./easing */ "../../../node_modules/sprotty/lib/base/animations/easing.js");
/**
 * An animation uses the rendering loop of the browser to smoothly
 * calculate a transition between two states of a model element.
 */
var Animation = /** @class */ (function () {
    function Animation(context, ease) {
        if (ease === void 0) { ease = easing_1.easeInOut; }
        this.context = context;
        this.ease = ease;
    }
    Animation.prototype.start = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var start = undefined;
            var frames = 0;
            var lambda = function (time) {
                frames++;
                var dtime;
                if (start === undefined) {
                    start = time;
                    dtime = 0;
                }
                else {
                    dtime = time - start;
                }
                var t = Math.min(1, dtime / _this.context.duration);
                var current = _this.tween(_this.ease(t), _this.context);
                _this.context.modelChanged.update(current);
                if (t === 1) {
                    _this.context.logger.log(_this, (frames * 1000 / _this.context.duration) + ' fps');
                    resolve(current);
                }
                else {
                    _this.context.syncer.onNextFrame(lambda);
                }
            };
            if (_this.context.syncer.isAvailable()) {
                _this.context.syncer.onNextFrame(lambda);
            }
            else {
                var finalModel = _this.tween(1, _this.context);
                resolve(finalModel);
            }
        });
    };
    return Animation;
}());
exports.Animation = Animation;
var CompoundAnimation = /** @class */ (function (_super) {
    __extends(CompoundAnimation, _super);
    function CompoundAnimation(model, context, components, ease) {
        if (components === void 0) { components = []; }
        if (ease === void 0) { ease = easing_1.easeInOut; }
        var _this = _super.call(this, context, ease) || this;
        _this.model = model;
        _this.context = context;
        _this.components = components;
        _this.ease = ease;
        return _this;
    }
    CompoundAnimation.prototype.include = function (animation) {
        this.components.push(animation);
        return this;
    };
    CompoundAnimation.prototype.tween = function (t, context) {
        for (var _i = 0, _a = this.components; _i < _a.length; _i++) {
            var a = _a[_i];
            a.tween(t, context);
        }
        return this.model;
    };
    return CompoundAnimation;
}(Animation));
exports.CompoundAnimation = CompoundAnimation;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/animations/easing.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/animations/easing.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Slows down animations towards the begin and the end.
 *
 * @param x the value between 0 (start of animation) and 1 (end of
 *     animation) linearly interpolated in time.
 * @returns {number} the eased value between 0 and 1
 */
function easeInOut(x) {
    if (x < 0.5)
        return x * x * 2;
    else
        return 1 - (1 - x) * (1 - x) * 2;
}
exports.easeInOut = easeInOut;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/commands/command-registration.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/commands/command-registration.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../../node_modules/sprotty/lib/utils/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var CommandActionHandler = /** @class */ (function () {
    function CommandActionHandler(commandRegistration) {
        this.commandRegistration = commandRegistration;
    }
    CommandActionHandler.prototype.handle = function (action) {
        return this.commandRegistration.factory(action);
    };
    return CommandActionHandler;
}());
exports.CommandActionHandler = CommandActionHandler;
var CommandActionHandlerInitializer = /** @class */ (function () {
    function CommandActionHandlerInitializer(registrations) {
        this.registrations = registrations;
    }
    CommandActionHandlerInitializer.prototype.initialize = function (registry) {
        this.registrations.forEach(function (registration) {
            return registry.register(registration.kind, new CommandActionHandler(registration));
        });
    };
    CommandActionHandlerInitializer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.CommandRegistration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], CommandActionHandlerInitializer);
    return CommandActionHandlerInitializer;
}());
exports.CommandActionHandlerInitializer = CommandActionHandlerInitializer;
/**
 * Use this method in your DI configuration to register a new command to the diagram.
 */
function configureCommand(context, constr) {
    if (!inversify_2.isInjectable(constr)) {
        throw new Error("Commands should be @injectable: " + constr.name);
    }
    if (!context.isBound(constr)) {
        context.bind(constr).toSelf();
    }
    context.bind(types_1.TYPES.CommandRegistration).toDynamicValue(function (ctx) { return ({
        kind: constr.KIND,
        factory: function (action) {
            var childContainer = new inversify_1.Container();
            childContainer.parent = ctx.container;
            childContainer.bind(types_1.TYPES.Action).toConstantValue(action);
            return childContainer.get(constr);
        }
    }); });
}
exports.configureCommand = configureCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/commands/command-stack-options.js":
/*!********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/commands/command-stack-options.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
function overrideCommandStackOptions(container, options) {
    var defaultOptions = container.get(types_1.TYPES.CommandStackOptions);
    for (var p in options) {
        if (options.hasOwnProperty(p))
            defaultOptions[p] = options[p];
    }
    return defaultOptions;
}
exports.overrideCommandStackOptions = overrideCommandStackOptions;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/commands/command-stack.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/commands/command-stack.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var command_1 = __webpack_require__(/*! ./command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
/**
 * The implementation of the ICommandStack. Clients should not use this
 * class directly.
 *
 * The command stack holds the current model as the result of the current
 * promise. When a new command is executed/undone/redone, its execution is
 * chained using <code>Promise#then()</code> to the current Promise. This
 * way we can handle long running commands without blocking the current
 * thread.
 *
 * The command stack also does the special handling for special commands:
 *
 * System commands should be transparent to the user and as such be
 * automatically undone/redone with the next plain command. Additional care
 * must be taken that system commands that are executed after undo don't
 * break the correspondence between the topmost commands on the undo and
 * redo stacks.
 *
 * Hidden commands only tell the viewer to render a hidden model such that
 * its bounds can be extracted from the DOM and forwarded as separate actions.
 * Hidden commands should not leave any trace on the undo/redo/off stacks.
 *
 * Mergeable commands should be merged with their predecessor if possible,
 * such that e.g. multiple subsequent moves of the smae element can be undone
 * in one single step.
 */
var CommandStack = /** @class */ (function () {
    function CommandStack() {
        this.undoStack = [];
        this.redoStack = [];
        /**
         * System commands should be transparent to the user in undo/redo
         * operations. When a system command is executed when the redo
         * stack is not empty, it is pushed to offStack instead.
         *
         * On redo, all commands form this stack are undone such that the
         * redo operation gets the exact same model as when it was executed
         * first.
         *
         * On undo, all commands form this stack are undone as well as
         * system ommands should be transparent to the user.
         */
        this.offStack = [];
    }
    CommandStack.prototype.initialize = function () {
        this.currentPromise = Promise.resolve({
            main: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            hidden: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            popup: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            }
        });
    };
    Object.defineProperty(CommandStack.prototype, "currentModel", {
        get: function () {
            return this.currentPromise.then(function (state) { return state.main.model; });
        },
        enumerable: true,
        configurable: true
    });
    CommandStack.prototype.executeAll = function (commands) {
        var _this = this;
        commands.forEach(function (command) {
            _this.logger.log(_this, 'Executing', command);
            _this.handleCommand(command, command.execute, _this.mergeOrPush);
        });
        return this.thenUpdate();
    };
    CommandStack.prototype.execute = function (command) {
        this.logger.log(this, 'Executing', command);
        this.handleCommand(command, command.execute, this.mergeOrPush);
        return this.thenUpdate();
    };
    CommandStack.prototype.undo = function () {
        var _this = this;
        this.undoOffStackSystemCommands();
        this.undoPreceedingSystemCommands();
        var command = this.undoStack[this.undoStack.length - 1];
        if (command !== undefined && !this.isBlockUndo(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, function (c, context) {
                _this.redoStack.push(c);
            });
        }
        return this.thenUpdate();
    };
    CommandStack.prototype.redo = function () {
        var _this = this;
        this.undoOffStackSystemCommands();
        var command = this.redoStack.pop();
        if (command !== undefined) {
            this.logger.log(this, 'Redoing', command);
            this.handleCommand(command, command.redo, function (c, context) {
                _this.pushToUndoStack(c);
            });
        }
        this.redoFollowingSystemCommands();
        return this.thenUpdate();
    };
    /**
     * Chains the current promise with another Promise that performs the
     * given operation on the given command.
     *
     * @param beforeResolve a function that is called directly before
     *      resolving the Promise to return the new model. Usually puts the
     *      command on the appropriate stack.
     */
    CommandStack.prototype.handleCommand = function (command, operation, beforeResolve) {
        var _this = this;
        this.currentPromise = this.currentPromise.then(function (state) {
            return new Promise(function (resolve) {
                var target;
                if (command instanceof command_1.HiddenCommand)
                    target = 'hidden';
                else if (command instanceof command_1.PopupCommand)
                    target = 'popup';
                else
                    target = 'main';
                var context = _this.createContext(state.main.model);
                var commandResult;
                try {
                    commandResult = operation.call(command, context);
                }
                catch (error) {
                    _this.logger.error(_this, "Failed to execute command:", error);
                    commandResult = state[target].model;
                }
                var newState = copyState(state);
                if (commandResult instanceof Promise) {
                    commandResult.then(function (newModel) {
                        if (target === 'main')
                            beforeResolve.call(_this, command, context);
                        newState[target] = { model: newModel, modelChanged: true };
                        resolve(newState);
                    });
                }
                else if (commandResult instanceof smodel_1.SModelRoot) {
                    if (target === 'main')
                        beforeResolve.call(_this, command, context);
                    newState[target] = { model: commandResult, modelChanged: true };
                    resolve(newState);
                }
                else {
                    if (target === 'main')
                        beforeResolve.call(_this, command, context);
                    newState[target] = {
                        model: commandResult.model,
                        modelChanged: state[target].modelChanged || commandResult.modelChanged,
                        cause: commandResult.cause
                    };
                    resolve(newState);
                }
            });
        });
    };
    CommandStack.prototype.pushToUndoStack = function (command) {
        this.undoStack.push(command);
        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)
            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);
    };
    /**
     * Notifies the Viewer to render the new model and/or the new hidden model
     * and returns a Promise for the new model.
     */
    CommandStack.prototype.thenUpdate = function () {
        var _this = this;
        this.currentPromise = this.currentPromise.then(function (state) {
            var newState = copyState(state);
            if (state.hidden.modelChanged) {
                _this.updateHidden(state.hidden.model, state.hidden.cause);
                newState.hidden.modelChanged = false;
                newState.hidden.cause = undefined;
            }
            if (state.main.modelChanged) {
                _this.update(state.main.model, state.main.cause);
                newState.main.modelChanged = false;
                newState.main.cause = undefined;
            }
            if (state.popup.modelChanged) {
                _this.updatePopup(state.popup.model, state.popup.cause);
                newState.popup.modelChanged = false;
                newState.popup.cause = undefined;
            }
            return newState;
        });
        return this.currentModel;
    };
    /**
     * Notify the `ModelViewer` that the model has changed.
     */
    CommandStack.prototype.update = function (model, cause) {
        if (this.modelViewer === undefined) {
            this.modelViewer = this.viewerProvider.modelViewer;
        }
        this.modelViewer.update(model, cause);
    };
    /**
     * Notify the `HiddenModelViewer` that the hidden model has changed.
     */
    CommandStack.prototype.updateHidden = function (model, cause) {
        if (this.hiddenModelViewer === undefined) {
            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;
        }
        this.hiddenModelViewer.update(model, cause);
    };
    /**
     * Notify the `PopupModelViewer` that the popup model has changed.
     */
    CommandStack.prototype.updatePopup = function (model, cause) {
        if (this.popupModelViewer === undefined) {
            this.popupModelViewer = this.viewerProvider.popupModelViewer;
        }
        this.popupModelViewer.update(model, cause);
    };
    /**
     * Handling of commands after their execution.
     *
     * Hidden commands are not pushed to any stack.
     *
     * System commands are pushed to the <code>offStack</code> when the redo
     * stack is not empty, allowing to undo the before a redo to keep the chain
     * of commands consistent.
     *
     * Mergable commands are merged if possible.
     */
    CommandStack.prototype.mergeOrPush = function (command, context) {
        var _this = this;
        if (this.isBlockUndo(command)) {
            this.undoStack = [];
            this.redoStack = [];
            this.offStack = [];
            this.pushToUndoStack(command);
            return;
        }
        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {
            if (this.offStack.length > 0) {
                var lastCommand = this.offStack[this.offStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.offStack.push(command);
            return;
        }
        if (this.isPushToUndoStack(command)) {
            this.offStack.forEach(function (c) { return _this.undoStack.push(c); });
            this.offStack = [];
            this.redoStack = [];
            if (this.undoStack.length > 0) {
                var lastCommand = this.undoStack[this.undoStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.pushToUndoStack(command);
        }
    };
    /**
     * Reverts all system commands on the offStack.
     */
    CommandStack.prototype.undoOffStackSystemCommands = function () {
        var command = this.offStack.pop();
        while (command !== undefined) {
            this.logger.log(this, 'Undoing off-stack', command);
            this.handleCommand(command, command.undo, function () { });
            command = this.offStack.pop();
        }
    };
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>undo()</code> to revert all system commands
     * at the top of the undoStack.
     */
    CommandStack.prototype.undoPreceedingSystemCommands = function () {
        var _this = this;
        var command = this.undoStack[this.undoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, function (c, context) {
                _this.redoStack.push(c);
            });
            command = this.undoStack[this.undoStack.length - 1];
        }
    };
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>redo()</code> to re-execute all system commands
     * at the top of the redoStack.
     */
    CommandStack.prototype.redoFollowingSystemCommands = function () {
        var _this = this;
        var command = this.redoStack[this.redoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.redoStack.pop();
            this.logger.log(this, 'Redoing ', command);
            this.handleCommand(command, command.redo, function (c, context) {
                _this.pushToUndoStack(c);
            });
            command = this.redoStack[this.redoStack.length - 1];
        }
    };
    /**
     * Assembles the context object that is passed to the commands execution method.
     */
    CommandStack.prototype.createContext = function (currentModel) {
        return {
            root: currentModel,
            modelChanged: this,
            modelFactory: this.modelFactory,
            duration: this.options.defaultDuration,
            logger: this.logger,
            syncer: this.syncer
        };
    };
    CommandStack.prototype.isPushToOffStack = function (command) {
        return command instanceof command_1.SystemCommand;
    };
    CommandStack.prototype.isPushToUndoStack = function (command) {
        return !(command instanceof command_1.HiddenCommand);
    };
    CommandStack.prototype.isBlockUndo = function (command) {
        return command instanceof command_1.ResetCommand;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IModelFactory),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "modelFactory", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IViewerProvider),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "viewerProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], CommandStack.prototype, "syncer", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.CommandStackOptions),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "options", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], CommandStack.prototype, "initialize", null);
    CommandStack = __decorate([
        inversify_1.injectable()
    ], CommandStack);
    return CommandStack;
}());
exports.CommandStack = CommandStack;
function copyState(state) {
    return {
        main: __assign({}, state.main),
        hidden: __assign({}, state.hidden),
        popup: __assign({}, state.popup)
    };
}


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/commands/command.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/commands/command.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
/**
 * Base class for all commands.
 *
 * Command instances are created via dependency injection and should take
 * the respective action as an injected constructor parameter. They must
 * also define a static <code>KIND</code> which is used to map an
 * <code>Action#kind</code>.
 *
 * <pre>
 * export class MyCommand extends Command {
 *   static KIND = 'MyCommand'
 *   constructor(@inject(TYPES.Action) action: MyAction) {
 *   ...
 * }
 * @inject(TYPES.Action)
 * </pre>
 */
var Command = /** @class */ (function () {
    function Command() {
    }
    Command = __decorate([
        inversify_1.injectable()
    ], Command);
    return Command;
}());
exports.Command = Command;
/**
 * A mergeable command can accumulate subsequent commands of the same kind.
 *
 * For example, multiple subsequent move commands can be merged to yield a
 * single command, such that undo will roll them back altogether. Otherwise
 * the user would have to push CTRL-Z for each mouse move element that
 * resuted in a command.
 */
var MergeableCommand = /** @class */ (function (_super) {
    __extends(MergeableCommand, _super);
    function MergeableCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Tries to merge the given command with this.
     *
     * @param command
     * @param context
     */
    MergeableCommand.prototype.merge = function (command, context) {
        return false;
    };
    MergeableCommand = __decorate([
        inversify_1.injectable()
    ], MergeableCommand);
    return MergeableCommand;
}(Command));
exports.MergeableCommand = MergeableCommand;
/**
 * A hidden command is used to trigger the rendering of a model on a
 * hidden canvas.
 *
 * Some graphical elements are styled using CSS, others have bounds that
 * require to layout their children before being computed. In such cases
 * we cannot tell about the size of elements without acutally rendering
 * the DOM. We render them to an invisible canvas. This can be achieved
 * using hidden commands.
 *
 * Hidden commands do not change the model directly, and are as such
 * neither undoable nor redoable. The command stack does not push them on
 * any stack and forwards the resulting model to the invisible viewer.
 */
var HiddenCommand = /** @class */ (function (_super) {
    __extends(HiddenCommand, _super);
    function HiddenCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HiddenCommand.prototype.undo = function (context) {
        context.logger.error(this, 'Cannot undo a hidden command');
        return context.root;
    };
    HiddenCommand.prototype.redo = function (context) {
        context.logger.error(this, 'Cannot redo a hidden command');
        return context.root;
    };
    HiddenCommand = __decorate([
        inversify_1.injectable()
    ], HiddenCommand);
    return HiddenCommand;
}(Command));
exports.HiddenCommand = HiddenCommand;
var PopupCommand = /** @class */ (function (_super) {
    __extends(PopupCommand, _super);
    function PopupCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupCommand = __decorate([
        inversify_1.injectable()
    ], PopupCommand);
    return PopupCommand;
}(Command));
exports.PopupCommand = PopupCommand;
/**
 * A system command is triggered by the system, e.g. in order to update bounds
 * in the model with data fetched from the DOM.
 *
 * As it is automatically triggered it should not count as a single command in
 * undo/redo operations. Into the bargain, such an automatic command could occur
 * after an undo and as such make the next redo command invalid because it is
 * based on a model state that has changed. The command stack handles system
 * commands in a special way to overcome these issues.
 */
var SystemCommand = /** @class */ (function (_super) {
    __extends(SystemCommand, _super);
    function SystemCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemCommand = __decorate([
        inversify_1.injectable()
    ], SystemCommand);
    return SystemCommand;
}(Command));
exports.SystemCommand = SystemCommand;
/**
 * A reset command deletes all undo/redo stacks and cannot be undone.
 *
 * It marks a point of no return.
 */
var ResetCommand = /** @class */ (function (_super) {
    __extends(ResetCommand, _super);
    function ResetCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResetCommand = __decorate([
        inversify_1.injectable()
    ], ResetCommand);
    return ResetCommand;
}(Command));
exports.ResetCommand = ResetCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/commands/request-command.js":
/*!**************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/commands/request-command.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var command_1 = __webpack_require__(/*! ./command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
/**
 * A command that does not modify the internal model, but retrieves information
 * from it by dispatching a response action.
 */
var ModelRequestCommand = /** @class */ (function (_super) {
    __extends(ModelRequestCommand, _super);
    function ModelRequestCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelRequestCommand.prototype.execute = function (context) {
        var result = this.retrieveResult(context);
        this.actionDispatcher.dispatch(result);
        return { model: context.root, modelChanged: false };
    };
    ModelRequestCommand.prototype.undo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    ModelRequestCommand.prototype.redo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelRequestCommand.prototype, "actionDispatcher", void 0);
    ModelRequestCommand = __decorate([
        inversify_1.injectable()
    ], ModelRequestCommand);
    return ModelRequestCommand;
}(command_1.SystemCommand));
exports.ModelRequestCommand = ModelRequestCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/di.config.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/di.config.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ./types */ "../../../node_modules/sprotty/lib/base/types.js");
var initialize_canvas_1 = __webpack_require__(/*! ./features/initialize-canvas */ "../../../node_modules/sprotty/lib/base/features/initialize-canvas.js");
var logging_1 = __webpack_require__(/*! ../utils/logging */ "../../../node_modules/sprotty/lib/utils/logging.js");
var action_dispatcher_1 = __webpack_require__(/*! ./actions/action-dispatcher */ "../../../node_modules/sprotty/lib/base/actions/action-dispatcher.js");
var action_handler_1 = __webpack_require__(/*! ./actions/action-handler */ "../../../node_modules/sprotty/lib/base/actions/action-handler.js");
var command_stack_1 = __webpack_require__(/*! ./commands/command-stack */ "../../../node_modules/sprotty/lib/base/commands/command-stack.js");
var smodel_factory_1 = __webpack_require__(/*! ./model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ./animations/animation-frame-syncer */ "../../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var viewer_1 = __webpack_require__(/*! ./views/viewer */ "../../../node_modules/sprotty/lib/base/views/viewer.js");
var viewer_options_1 = __webpack_require__(/*! ./views/viewer-options */ "../../../node_modules/sprotty/lib/base/views/viewer-options.js");
var mouse_tool_1 = __webpack_require__(/*! ./views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var key_tool_1 = __webpack_require__(/*! ./views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var vnode_postprocessor_1 = __webpack_require__(/*! ./views/vnode-postprocessor */ "../../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js");
var view_1 = __webpack_require__(/*! ./views/view */ "../../../node_modules/sprotty/lib/base/views/view.js");
var viewer_cache_1 = __webpack_require__(/*! ./views/viewer-cache */ "../../../node_modules/sprotty/lib/base/views/viewer-cache.js");
var dom_helper_1 = __webpack_require__(/*! ./views/dom-helper */ "../../../node_modules/sprotty/lib/base/views/dom-helper.js");
var id_postprocessor_1 = __webpack_require__(/*! ./views/id-postprocessor */ "../../../node_modules/sprotty/lib/base/views/id-postprocessor.js");
var command_registration_1 = __webpack_require__(/*! ./commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var css_class_postprocessor_1 = __webpack_require__(/*! ./views/css-class-postprocessor */ "../../../node_modules/sprotty/lib/base/views/css-class-postprocessor.js");
var tool_manager_1 = __webpack_require__(/*! ./tool-manager/tool-manager */ "../../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js");
var tool_1 = __webpack_require__(/*! ./tool-manager/tool */ "../../../node_modules/sprotty/lib/base/tool-manager/tool.js");
var set_model_1 = __webpack_require__(/*! ./features/set-model */ "../../../node_modules/sprotty/lib/base/features/set-model.js");
var ui_extension_registry_1 = __webpack_require__(/*! ./ui-extensions/ui-extension-registry */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var diagram_locker_1 = __webpack_require__(/*! ./actions/diagram-locker */ "../../../node_modules/sprotty/lib/base/actions/diagram-locker.js");
var defaultContainerModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    // Logging ---------------------------------------------
    bind(types_1.TYPES.ILogger).to(logging_1.NullLogger).inSingletonScope();
    bind(types_1.TYPES.LogLevel).toConstantValue(logging_1.LogLevel.warn);
    // Registries ---------------------------------------------
    bind(types_1.TYPES.SModelRegistry).to(smodel_factory_1.SModelRegistry).inSingletonScope();
    bind(action_handler_1.ActionHandlerRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ActionHandlerRegistryProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(action_handler_1.ActionHandlerRegistry));
            });
        };
    });
    bind(types_1.TYPES.ViewRegistry).to(view_1.ViewRegistry).inSingletonScope();
    // Model Creation ---------------------------------------------
    bind(types_1.TYPES.IModelFactory).to(smodel_factory_1.SModelFactory).inSingletonScope();
    // Action Dispatcher ---------------------------------------------
    bind(types_1.TYPES.IActionDispatcher).to(action_dispatcher_1.ActionDispatcher).inSingletonScope();
    bind(types_1.TYPES.IActionDispatcherProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(types_1.TYPES.IActionDispatcher));
            });
        };
    });
    bind(types_1.TYPES.IDiagramLocker).to(diagram_locker_1.DefaultDiagramLocker).inSingletonScope();
    // Action handler
    bind(types_1.TYPES.IActionHandlerInitializer).to(command_registration_1.CommandActionHandlerInitializer);
    // Command Stack ---------------------------------------------
    bind(types_1.TYPES.ICommandStack).to(command_stack_1.CommandStack).inSingletonScope();
    bind(types_1.TYPES.ICommandStackProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(types_1.TYPES.ICommandStack));
            });
        };
    });
    bind(types_1.TYPES.CommandStackOptions).toConstantValue({
        defaultDuration: 250,
        undoHistoryLimit: 50
    });
    // Viewer ---------------------------------------------
    bind(viewer_1.ModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.HiddenModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.PopupModelViewer).toSelf().inSingletonScope();
    bind(types_1.TYPES.ModelViewer).toDynamicValue(function (ctx) {
        var container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.ModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.PopupModelViewer).toDynamicValue(function (ctx) {
        var container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.PopupModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.HiddenModelViewer).toService(viewer_1.HiddenModelViewer);
    bind(types_1.TYPES.IViewerProvider).toDynamicValue(function (ctx) {
        return {
            get modelViewer() {
                return ctx.container.get(types_1.TYPES.ModelViewer);
            },
            get hiddenModelViewer() {
                return ctx.container.get(types_1.TYPES.HiddenModelViewer);
            },
            get popupModelViewer() {
                return ctx.container.get(types_1.TYPES.PopupModelViewer);
            }
        };
    });
    bind(types_1.TYPES.ViewerOptions).toConstantValue(viewer_options_1.defaultViewerOptions());
    bind(types_1.TYPES.PatcherProvider).to(viewer_1.PatcherProvider).inSingletonScope();
    bind(types_1.TYPES.DOMHelper).to(dom_helper_1.DOMHelper).inSingletonScope();
    bind(types_1.TYPES.ModelRendererFactory).toFactory(function (ctx) {
        return function (targetKind, processors) {
            var viewRegistry = ctx.container.get(types_1.TYPES.ViewRegistry);
            return new viewer_1.ModelRenderer(viewRegistry, targetKind, processors);
        };
    });
    // Tools & Postprocessors --------------------------------------
    bind(id_postprocessor_1.IdPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(css_class_postprocessor_1.CssClassPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(mouse_tool_1.MouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(mouse_tool_1.MouseTool);
    bind(key_tool_1.KeyTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(key_tool_1.KeyTool);
    bind(vnode_postprocessor_1.FocusFixPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(vnode_postprocessor_1.FocusFixPostprocessor);
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(mouse_tool_1.PopupMouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(mouse_tool_1.PopupMouseTool);
    // Animation Frame Sync ------------------------------------------
    bind(types_1.TYPES.AnimationFrameSyncer).to(animation_frame_syncer_1.AnimationFrameSyncer).inSingletonScope();
    // Canvas Initialization ---------------------------------------------
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, initialize_canvas_1.InitializeCanvasBoundsCommand);
    bind(initialize_canvas_1.CanvasBoundsInitializer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(initialize_canvas_1.CanvasBoundsInitializer);
    // Model commands ---------------------------------------------
    command_registration_1.configureCommand(context, set_model_1.SetModelCommand);
    // Tool manager initialization ------------------------------------
    bind(types_1.TYPES.IToolManager).to(tool_manager_1.ToolManager).inSingletonScope();
    bind(types_1.TYPES.KeyListener).to(tool_manager_1.DefaultToolsEnablingKeyListener);
    bind(tool_manager_1.ToolManagerActionHandler).toSelf().inSingletonScope();
    action_handler_1.configureActionHandler(context, tool_1.EnableDefaultToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    action_handler_1.configureActionHandler(context, tool_1.EnableToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    // UIExtension registry initialization ------------------------------------
    bind(types_1.TYPES.UIExtensionRegistry).to(ui_extension_registry_1.UIExtensionRegistry).inSingletonScope();
    command_registration_1.configureCommand(context, ui_extension_registry_1.SetUIExtensionVisibilityCommand);
    // Tracker for last known mouse position on diagram ------------------------
    bind(mouse_tool_1.MousePositionTracker).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(mouse_tool_1.MousePositionTracker);
});
exports.default = defaultContainerModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/features/initialize-canvas.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/features/initialize-canvas.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../../node_modules/sprotty/lib/utils/browser.js");
/**
 * Grabs the bounds from the root element in page coordinates and fires a
 * InitializeCanvasBoundsAction. This size is needed for other actions such
 * as FitToScreenAction.
 */
var CanvasBoundsInitializer = /** @class */ (function () {
    function CanvasBoundsInitializer() {
    }
    CanvasBoundsInitializer.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot && !geometry_1.isValidDimension(element.canvasBounds)) {
            this.rootAndVnode = [element, vnode];
        }
        return vnode;
    };
    CanvasBoundsInitializer.prototype.postUpdate = function () {
        if (this.rootAndVnode !== undefined) {
            var domElement = this.rootAndVnode[1].elm;
            var oldBounds = this.rootAndVnode[0].canvasBounds;
            if (domElement !== undefined) {
                var newBounds = this.getBoundsInPage(domElement);
                if (!(geometry_1.almostEquals(newBounds.x, oldBounds.x)
                    && geometry_1.almostEquals(newBounds.y, oldBounds.y)
                    && geometry_1.almostEquals(newBounds.width, oldBounds.width)
                    && geometry_1.almostEquals(newBounds.height, oldBounds.width)))
                    this.actionDispatcher.dispatch(new InitializeCanvasBoundsAction(newBounds));
            }
            this.rootAndVnode = undefined;
        }
    };
    CanvasBoundsInitializer.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        var scroll = browser_1.getWindowScroll();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], CanvasBoundsInitializer.prototype, "actionDispatcher", void 0);
    CanvasBoundsInitializer = __decorate([
        inversify_1.injectable()
    ], CanvasBoundsInitializer);
    return CanvasBoundsInitializer;
}());
exports.CanvasBoundsInitializer = CanvasBoundsInitializer;
var InitializeCanvasBoundsAction = /** @class */ (function () {
    function InitializeCanvasBoundsAction(newCanvasBounds) {
        this.newCanvasBounds = newCanvasBounds;
        this.kind = InitializeCanvasBoundsAction.KIND;
    }
    InitializeCanvasBoundsAction.KIND = 'initializeCanvasBounds';
    return InitializeCanvasBoundsAction;
}());
exports.InitializeCanvasBoundsAction = InitializeCanvasBoundsAction;
var InitializeCanvasBoundsCommand = /** @class */ (function (_super) {
    __extends(InitializeCanvasBoundsCommand, _super);
    function InitializeCanvasBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    InitializeCanvasBoundsCommand.prototype.execute = function (context) {
        this.newCanvasBounds = this.action.newCanvasBounds;
        context.root.canvasBounds = this.newCanvasBounds;
        return context.root;
    };
    InitializeCanvasBoundsCommand.prototype.undo = function (context) {
        return context.root;
    };
    InitializeCanvasBoundsCommand.prototype.redo = function (context) {
        return context.root;
    };
    InitializeCanvasBoundsCommand.KIND = InitializeCanvasBoundsAction.KIND;
    InitializeCanvasBoundsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [InitializeCanvasBoundsAction])
    ], InitializeCanvasBoundsCommand);
    return InitializeCanvasBoundsCommand;
}(command_1.SystemCommand));
exports.InitializeCanvasBoundsCommand = InitializeCanvasBoundsCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/features/set-model.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/features/set-model.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var initialize_canvas_1 = __webpack_require__(/*! ./initialize-canvas */ "../../../node_modules/sprotty/lib/base/features/initialize-canvas.js");
/**
 * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this
 * is the first message that is sent to the source, so it is also used to initiate the communication.
 * The response is a SetModelAction or an UpdateModelAction.
 */
var RequestModelAction = /** @class */ (function () {
    function RequestModelAction(options, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.options = options;
        this.requestId = requestId;
        this.kind = RequestModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestModelAction.create = function (options) {
        return new RequestModelAction(options, action_1.generateRequestId());
    };
    RequestModelAction.KIND = 'requestModel';
    return RequestModelAction;
}());
exports.RequestModelAction = RequestModelAction;
/**
 * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.
 */
var SetModelAction = /** @class */ (function () {
    function SetModelAction(newRoot, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetModelAction.KIND;
    }
    SetModelAction.KIND = 'setModel';
    return SetModelAction;
}());
exports.SetModelAction = SetModelAction;
var SetModelCommand = /** @class */ (function (_super) {
    __extends(SetModelCommand, _super);
    function SetModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetModelCommand.prototype.execute = function (context) {
        this.oldRoot = context.modelFactory.createRoot(context.root);
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    };
    SetModelCommand.prototype.undo = function (context) {
        return this.oldRoot;
    };
    SetModelCommand.prototype.redo = function (context) {
        return this.newRoot;
    };
    Object.defineProperty(SetModelCommand.prototype, "blockUntil", {
        get: function () {
            return function (action) { return action.kind === initialize_canvas_1.InitializeCanvasBoundsCommand.KIND; };
        },
        enumerable: true,
        configurable: true
    });
    SetModelCommand.KIND = SetModelAction.KIND;
    SetModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetModelAction])
    ], SetModelCommand);
    return SetModelCommand;
}(command_1.ResetCommand));
exports.SetModelCommand = SetModelCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/model/smodel-factory.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var smodel_1 = __webpack_require__(/*! ./smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * The default model factory creates SModelRoot for the root element and SChildElement for all other
 * model elements.
 */
var SModelFactory = /** @class */ (function () {
    function SModelFactory() {
    }
    SModelFactory.prototype.createElement = function (schema, parent) {
        var child;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElement))
                throw new Error("Element with type " + schema.type + " was expected to be an SChildElement.");
            child = regElement;
        }
        else {
            child = new smodel_1.SChildElement();
        }
        return this.initializeChild(child, schema, parent);
    };
    SModelFactory.prototype.createRoot = function (schema) {
        var root;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRoot))
                throw new Error("Element with type " + schema.type + " was expected to be an SModelRoot.");
            root = regElement;
        }
        else {
            root = new smodel_1.SModelRoot();
        }
        return this.initializeRoot(root, schema);
    };
    SModelFactory.prototype.createSchema = function (element) {
        var _this = this;
        var schema = {};
        for (var key in element) {
            if (!this.isReserved(element, key)) {
                var value = element[key];
                if (typeof value !== 'function')
                    schema[key] = value;
            }
        }
        if (element instanceof smodel_1.SParentElement)
            schema['children'] = element.children.map(function (child) { return _this.createSchema(child); });
        return schema;
    };
    SModelFactory.prototype.initializeElement = function (element, schema) {
        for (var key in schema) {
            if (!this.isReserved(element, key)) {
                var value = schema[key];
                if (typeof value !== 'function')
                    element[key] = value;
            }
        }
        return element;
    };
    SModelFactory.prototype.isReserved = function (element, propertyName) {
        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)
            return true;
        var obj = element;
        do {
            var descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);
            if (descriptor !== undefined)
                return descriptor.get !== undefined;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return false;
    };
    SModelFactory.prototype.initializeParent = function (parent, schema) {
        var _this = this;
        this.initializeElement(parent, schema);
        if (smodel_1.isParent(schema)) {
            parent.children = schema.children.map(function (childSchema) { return _this.createElement(childSchema, parent); });
        }
        return parent;
    };
    SModelFactory.prototype.initializeChild = function (child, schema, parent) {
        this.initializeParent(child, schema);
        if (parent !== undefined) {
            child.parent = parent;
        }
        return child;
    };
    SModelFactory.prototype.initializeRoot = function (root, schema) {
        this.initializeParent(root, schema);
        root.index.add(root);
        return root;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.SModelRegistry),
        __metadata("design:type", SModelRegistry)
    ], SModelFactory.prototype, "registry", void 0);
    SModelFactory = __decorate([
        inversify_1.injectable()
    ], SModelFactory);
    return SModelFactory;
}());
exports.SModelFactory = SModelFactory;
exports.EMPTY_ROOT = Object.freeze({
    type: 'NONE',
    id: 'EMPTY'
});
/**
 * Model element classes registered here are considered automatically when constructring a model from its schema.
 */
var SModelRegistry = /** @class */ (function (_super) {
    __extends(SModelRegistry, _super);
    function SModelRegistry(registrations) {
        var _this = _super.call(this) || this;
        registrations.forEach(function (registration) {
            var defaultFeatures = _this.getDefaultFeatures(registration.constr);
            if (!defaultFeatures && registration.features && registration.features.enable)
                defaultFeatures = [];
            if (defaultFeatures) {
                var featureSet_1 = createFeatureSet(defaultFeatures, registration.features);
                _this.register(registration.type, function () {
                    var element = new registration.constr();
                    element.features = featureSet_1;
                    return element;
                });
            }
            else {
                _this.register(registration.type, function () { return new registration.constr(); });
            }
        });
        return _this;
    }
    SModelRegistry.prototype.getDefaultFeatures = function (constr) {
        var obj = constr;
        do {
            var defaultFeatures = obj.DEFAULT_FEATURES;
            if (defaultFeatures)
                return defaultFeatures;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return undefined;
    };
    SModelRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.SModelElementRegistration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], SModelRegistry);
    return SModelRegistry;
}(registry_1.FactoryRegistry));
exports.SModelRegistry = SModelRegistry;
function createFeatureSet(defaults, custom) {
    var featureSet = new Set(defaults);
    if (custom && custom.enable) {
        for (var _i = 0, _a = custom.enable; _i < _a.length; _i++) {
            var f = _a[_i];
            featureSet.add(f);
        }
    }
    if (custom && custom.disable) {
        for (var _b = 0, _c = custom.disable; _b < _c.length; _b++) {
            var f = _c[_b];
            featureSet.delete(f);
        }
    }
    return featureSet;
}
exports.createFeatureSet = createFeatureSet;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/model/smodel-utils.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ./smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * Register a model element constructor for an element type.
 */
function registerModelElement(context, type, constr, features) {
    context.bind(types_1.TYPES.SModelElementRegistration).toConstantValue({
        type: type, constr: constr, features: features
    });
}
exports.registerModelElement = registerModelElement;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the basic type of a model element.
 */
function getBasicType(schema) {
    if (!schema.type)
        return '';
    var colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(0, colonIndex);
    else
        return schema.type;
}
exports.getBasicType = getBasicType;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the sub-type of a model element.
 */
function getSubType(schema) {
    if (!schema.type)
        return '';
    var colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(colonIndex + 1);
    else
        return schema.type;
}
exports.getSubType = getSubType;
/**
 * Find the element with the given identifier. If you need to find multiple elements, using an
 * SModelIndex might be more effective.
 */
function findElement(parent, elementId) {
    if (parent.id === elementId)
        return parent;
    if (parent.children !== undefined) {
        for (var _i = 0, _a = parent.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var result = findElement(child, elementId);
            if (result !== undefined)
                return result;
        }
    }
    return undefined;
}
exports.findElement = findElement;
/**
 * Find a parent element that satisfies the given predicate.
 */
function findParent(element, predicate) {
    var current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElement)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParent = findParent;
/**
 * Find a parent element that implements the feature identified with the given predicate.
 */
function findParentByFeature(element, predicate) {
    var current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElement)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParentByFeature = findParentByFeature;
/**
 * Translate a point from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translatePoint(point, source, target) {
    if (source !== target) {
        // Translate from the source to the root element
        while (source instanceof smodel_1.SChildElement) {
            point = source.localToParent(point);
            source = source.parent;
            if (source === target)
                return point;
        }
        // Translate from the root to the target element
        var targetTrace = [];
        while (target instanceof smodel_1.SChildElement) {
            targetTrace.push(target);
            target = target.parent;
        }
        if (source !== target)
            throw new Error("Incompatible source and target: " + source.id + ", " + target.id);
        for (var i = targetTrace.length - 1; i >= 0; i--) {
            point = targetTrace[i].parentToLocal(point);
        }
    }
    return point;
}
exports.translatePoint = translatePoint;
/**
 * Translate some bounds from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translateBounds(bounds, source, target) {
    var upperLeft = translatePoint(bounds, source, target);
    var lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);
    return {
        x: upperLeft.x,
        y: upperLeft.y,
        width: lowerRight.x - upperLeft.x,
        height: lowerRight.y - upperLeft.y
    };
}
exports.translateBounds = translateBounds;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/model/smodel.js":
/*!**************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/model/smodel.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
/**
 * Base class for all elements of the diagram model.
 * Each model element must have a unique ID and a type that is used to look up its view.
 */
var SModelElement = /** @class */ (function () {
    function SModelElement() {
    }
    Object.defineProperty(SModelElement.prototype, "root", {
        get: function () {
            var current = this;
            while (current) {
                if (current instanceof SModelRoot)
                    return current;
                else if (current instanceof SChildElement)
                    current = current.parent;
                else
                    current = undefined;
            }
            throw new Error("Element has no root");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SModelElement.prototype, "index", {
        get: function () {
            return this.root.index;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * A feature is a symbol identifying some functionality that can be enabled or disabled for
     * a model element. The set of supported features is determined by the `features` property.
     */
    SModelElement.prototype.hasFeature = function (feature) {
        return this.features !== undefined && this.features.has(feature);
    };
    return SModelElement;
}());
exports.SModelElement = SModelElement;
function isParent(element) {
    var children = element.children;
    return children !== undefined && children.constructor === Array;
}
exports.isParent = isParent;
/**
 * A parent element may contain child elements, thus the diagram model forms a tree.
 */
var SParentElement = /** @class */ (function (_super) {
    __extends(SParentElement, _super);
    function SParentElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.children = [];
        return _this;
    }
    SParentElement.prototype.add = function (child, i) {
        var children = this.children;
        if (i === undefined) {
            children.push(child);
        }
        else {
            if (i < 0 || i > this.children.length) {
                throw new Error("Child index " + i + " out of bounds (0.." + children.length + ")");
            }
            children.splice(i, 0, child);
        }
        child.parent = this;
        this.index.add(child);
    };
    SParentElement.prototype.remove = function (child) {
        var children = this.children;
        var i = children.indexOf(child);
        if (i < 0) {
            throw new Error("No such child " + child.id);
        }
        children.splice(i, 1);
        delete child.parent;
        this.index.remove(child);
    };
    SParentElement.prototype.removeAll = function (filter) {
        var _this = this;
        var children = this.children;
        if (filter !== undefined) {
            for (var i = children.length - 1; i >= 0; i--) {
                if (filter(children[i])) {
                    var child = children.splice(i, 1)[0];
                    delete child.parent;
                    this.index.remove(child);
                }
            }
        }
        else {
            children.forEach(function (child) {
                delete child.parent;
                _this.index.remove(child);
            });
            children.splice(0, children.length);
        }
    };
    SParentElement.prototype.move = function (child, newIndex) {
        var children = this.children;
        var i = children.indexOf(child);
        if (i === -1) {
            throw new Error("No such child " + child.id);
        }
        else {
            if (newIndex < 0 || newIndex > children.length - 1) {
                throw new Error("Child index " + newIndex + " out of bounds (0.." + children.length + ")");
            }
            children.splice(i, 1);
            children.splice(newIndex, 0, child);
        }
    };
    /**
     * Transform the given bounds from the local coordinate system of this element to the coordinate
     * system of its parent. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    SParentElement.prototype.localToParent = function (point) {
        return geometry_1.isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    };
    /**
     * Transform the given bounds from the coordinate system of this element's parent to its local
     * coordinate system. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    SParentElement.prototype.parentToLocal = function (point) {
        return geometry_1.isBounds(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    };
    return SParentElement;
}(SModelElement));
exports.SParentElement = SParentElement;
/**
 * A child element is contained in a parent element. All elements except the model root are child
 * elements. In order to keep the model class hierarchy simple, every child element is also a
 * parent element, although for many elements the array of children is empty (i.e. they are
 * leafs in the model element tree).
 */
var SChildElement = /** @class */ (function (_super) {
    __extends(SChildElement, _super);
    function SChildElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SChildElement;
}(SParentElement));
exports.SChildElement = SChildElement;
/**
 * Base class for the root element of the diagram model tree.
 */
var SModelRoot = /** @class */ (function (_super) {
    __extends(SModelRoot, _super);
    function SModelRoot(index) {
        if (index === void 0) { index = new SModelIndex(); }
        var _this = _super.call(this) || this;
        _this.canvasBounds = geometry_1.EMPTY_BOUNDS;
        // Override the index property from SModelElement, which has a getter, with a data property
        Object.defineProperty(_this, 'index', {
            value: index,
            writable: false
        });
        return _this;
    }
    return SModelRoot;
}(SParentElement));
exports.SModelRoot = SModelRoot;
var ID_CHARS = "0123456789abcdefghijklmnopqrstuvwxyz";
function createRandomId(length) {
    if (length === void 0) { length = 8; }
    var id = "";
    for (var i = 0; i < length; i++) {
        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));
    }
    return id;
}
exports.createRandomId = createRandomId;
/**
 * Used to speed up model element lookup by id.
 */
var SModelIndex = /** @class */ (function () {
    function SModelIndex() {
        this.id2element = new Map;
    }
    SModelIndex.prototype.add = function (element) {
        if (!element.id) {
            do {
                element.id = createRandomId();
            } while (this.contains(element));
        }
        else if (this.contains(element)) {
            throw new Error("Duplicate ID in model: " + element.id);
        }
        this.id2element.set(element.id, element);
        if (element.children !== undefined && element.children.constructor === Array) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.add(child);
            }
        }
    };
    SModelIndex.prototype.remove = function (element) {
        this.id2element.delete(element.id);
        if (element.children !== undefined && element.children.constructor === Array) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.remove(child);
            }
        }
    };
    SModelIndex.prototype.contains = function (element) {
        return this.id2element.has(element.id);
    };
    SModelIndex.prototype.getById = function (id) {
        return this.id2element.get(id);
    };
    SModelIndex.prototype.getAttachedElements = function (element) {
        return [];
    };
    SModelIndex.prototype.all = function () {
        return iterable_1.mapIterable(this.id2element, function (_a) {
            var key = _a[0], value = _a[1];
            return value;
        });
    };
    return SModelIndex;
}());
exports.SModelIndex = SModelIndex;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/tool-manager/tool-manager.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var tool_1 = __webpack_require__(/*! ./tool */ "../../../node_modules/sprotty/lib/base/tool-manager/tool.js");
var key_tool_1 = __webpack_require__(/*! ../views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var ToolManager = /** @class */ (function () {
    function ToolManager() {
        this.tools = [];
        this.defaultTools = [];
        this.actives = [];
    }
    Object.defineProperty(ToolManager.prototype, "managedTools", {
        get: function () {
            return this.defaultTools.concat(this.tools);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToolManager.prototype, "activeTools", {
        get: function () {
            return this.actives;
        },
        enumerable: true,
        configurable: true
    });
    ToolManager.prototype.disableActiveTools = function () {
        this.actives.forEach(function (tool) { return tool.disable(); });
        this.actives.splice(0, this.actives.length);
    };
    ToolManager.prototype.enableDefaultTools = function () {
        this.enable(this.defaultTools.map(function (tool) { return tool.id; }));
    };
    ToolManager.prototype.enable = function (toolIds) {
        var _this = this;
        this.disableActiveTools();
        var tools = toolIds.map(function (id) { return _this.tool(id); });
        tools.forEach(function (tool) {
            if (tool !== undefined) {
                tool.enable();
                _this.actives.push(tool);
            }
        });
    };
    ToolManager.prototype.tool = function (toolId) {
        return this.managedTools.find(function (tool) { return tool.id === toolId; });
    };
    ToolManager.prototype.registerDefaultTools = function () {
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        for (var _a = 0, tools_1 = tools; _a < tools_1.length; _a++) {
            var tool = tools_1[_a];
            this.defaultTools.push(tool);
        }
    };
    ToolManager.prototype.registerTools = function () {
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        for (var _a = 0, tools_2 = tools; _a < tools_2.length; _a++) {
            var tool = tools_2[_a];
            this.tools.push(tool);
        }
    };
    ToolManager = __decorate([
        inversify_1.injectable()
    ], ToolManager);
    return ToolManager;
}());
exports.ToolManager = ToolManager;
var ToolManagerActionHandler = /** @class */ (function () {
    function ToolManagerActionHandler() {
    }
    ToolManagerActionHandler.prototype.handle = function (action) {
        switch (action.kind) {
            case tool_1.EnableDefaultToolsAction.KIND:
                this.toolManager.enableDefaultTools();
                break;
            case tool_1.EnableToolsAction.KIND:
                this.toolManager.enable(action.toolIds);
                break;
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IToolManager),
        __metadata("design:type", Object)
    ], ToolManagerActionHandler.prototype, "toolManager", void 0);
    ToolManagerActionHandler = __decorate([
        inversify_1.injectable()
    ], ToolManagerActionHandler);
    return ToolManagerActionHandler;
}());
exports.ToolManagerActionHandler = ToolManagerActionHandler;
var DefaultToolsEnablingKeyListener = /** @class */ (function (_super) {
    __extends(DefaultToolsEnablingKeyListener, _super);
    function DefaultToolsEnablingKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultToolsEnablingKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            return [new tool_1.EnableDefaultToolsAction()];
        }
        return [];
    };
    DefaultToolsEnablingKeyListener = __decorate([
        inversify_1.injectable()
    ], DefaultToolsEnablingKeyListener);
    return DefaultToolsEnablingKeyListener;
}(key_tool_1.KeyListener));
exports.DefaultToolsEnablingKeyListener = DefaultToolsEnablingKeyListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/tool-manager/tool.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/tool-manager/tool.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Action to enable the tools of the specified `toolIds`.
 */
var EnableToolsAction = /** @class */ (function () {
    function EnableToolsAction(toolIds) {
        this.toolIds = toolIds;
        this.kind = EnableToolsAction.KIND;
    }
    EnableToolsAction.KIND = "enable-tools";
    return EnableToolsAction;
}());
exports.EnableToolsAction = EnableToolsAction;
/**
 * Action to disable the currently active tools and enable the default tools instead.
 */
var EnableDefaultToolsAction = /** @class */ (function () {
    function EnableDefaultToolsAction() {
        this.kind = EnableDefaultToolsAction.KIND;
    }
    EnableDefaultToolsAction.KIND = "enable-default-tools";
    return EnableDefaultToolsAction;
}());
exports.EnableDefaultToolsAction = EnableDefaultToolsAction;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/types.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/types.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.TYPES = {
    Action: Symbol('Action'),
    IActionDispatcher: Symbol('IActionDispatcher'),
    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),
    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),
    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),
    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),
    IAnchorComputer: Symbol('IAnchor'),
    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),
    IButtonHandler: Symbol('IButtonHandler'),
    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),
    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),
    CommandRegistration: Symbol('CommandRegistration'),
    ICommandStack: Symbol('ICommandStack'),
    CommandStackOptions: Symbol('CommandStackOptions'),
    ICommandStackProvider: Symbol('ICommandStackProvider'),
    IContextMenuItemProvider: Symbol.for("IContextMenuProvider"),
    IContextMenuProviderRegistry: Symbol.for("IContextMenuProviderRegistry"),
    IContextMenuService: Symbol.for("IContextMenuService"),
    IContextMenuServiceProvider: Symbol.for("IContextMenuServiceProvider"),
    DOMHelper: Symbol('DOMHelper'),
    IDiagramLocker: Symbol('IDiagramLocker'),
    IEdgeRouter: Symbol('IEdgeRouter'),
    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),
    IEditLabelValidator: Symbol('IEditLabelValidator'),
    HiddenModelViewer: Symbol('HiddenModelViewer'),
    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),
    HoverState: Symbol('HoverState'),
    KeyListener: Symbol('KeyListener'),
    LayoutRegistry: Symbol('LayoutRegistry'),
    Layouter: Symbol('Layouter'),
    LogLevel: Symbol('LogLevel'),
    ILogger: Symbol('ILogger'),
    IModelFactory: Symbol('IModelFactory'),
    IModelLayoutEngine: Symbol('IModelLayoutEngine'),
    ModelRendererFactory: Symbol('ModelRendererFactory'),
    ModelSource: Symbol('ModelSource'),
    ModelSourceProvider: Symbol('ModelSourceProvider'),
    ModelViewer: Symbol('ModelViewer'),
    MouseListener: Symbol('MouseListener'),
    PatcherProvider: Symbol('PatcherProvider'),
    IPopupModelProvider: Symbol('IPopupModelProvider'),
    PopupModelViewer: Symbol('PopupModelViewer'),
    PopupMouseListener: Symbol('PopupMouseListener'),
    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),
    SModelElementRegistration: Symbol('SModelElementRegistration'),
    SModelRegistry: Symbol('SModelRegistry'),
    ISnapper: Symbol('ISnapper'),
    SvgExporter: Symbol('SvgExporter'),
    IToolManager: Symbol('IToolManager'),
    IUIExtension: Symbol('IUIExtension'),
    UIExtensionRegistry: Symbol('UIExtensionRegistry'),
    IVNodePostprocessor: Symbol('IVNodePostprocessor'),
    ViewRegistration: Symbol('ViewRegistration'),
    ViewRegistry: Symbol('ViewRegistry'),
    IViewer: Symbol('IViewer'),
    ViewerOptions: Symbol('ViewerOptions'),
    IViewerProvider: Symbol('IViewerProvider'),
};


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
/**
 * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.
 */
var UIExtensionRegistry = /** @class */ (function (_super) {
    __extends(UIExtensionRegistry, _super);
    function UIExtensionRegistry(extensions) {
        if (extensions === void 0) { extensions = []; }
        var _this = _super.call(this) || this;
        extensions.forEach(function (extension) { return _this.register(extension.id(), extension); });
        return _this;
    }
    UIExtensionRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IUIExtension)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], UIExtensionRegistry);
    return UIExtensionRegistry;
}(registry_1.InstanceRegistry));
exports.UIExtensionRegistry = UIExtensionRegistry;
/**
 * Action to set the visibility state of the UI extension with the specified `id`.
 */
var SetUIExtensionVisibilityAction = /** @class */ (function () {
    function SetUIExtensionVisibilityAction(extensionId, visible, contextElementsId) {
        if (contextElementsId === void 0) { contextElementsId = []; }
        this.extensionId = extensionId;
        this.visible = visible;
        this.contextElementsId = contextElementsId;
        this.kind = SetUIExtensionVisibilityAction.KIND;
    }
    SetUIExtensionVisibilityAction.KIND = "setUIExtensionVisibility";
    return SetUIExtensionVisibilityAction;
}());
exports.SetUIExtensionVisibilityAction = SetUIExtensionVisibilityAction;
var SetUIExtensionVisibilityCommand = /** @class */ (function (_super) {
    __extends(SetUIExtensionVisibilityCommand, _super);
    function SetUIExtensionVisibilityCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetUIExtensionVisibilityCommand.prototype.execute = function (context) {
        var extension = this.registry.get(this.action.extensionId);
        if (extension) {
            this.action.visible ? extension.show.apply(extension, __spreadArrays([context.root], this.action.contextElementsId)) : extension.hide();
        }
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.prototype.undo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.prototype.redo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.KIND = SetUIExtensionVisibilityAction.KIND;
    __decorate([
        inversify_1.inject(types_1.TYPES.UIExtensionRegistry),
        __metadata("design:type", UIExtensionRegistry)
    ], SetUIExtensionVisibilityCommand.prototype, "registry", void 0);
    SetUIExtensionVisibilityCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetUIExtensionVisibilityAction])
    ], SetUIExtensionVisibilityCommand);
    return SetUIExtensionVisibilityCommand;
}(command_1.SystemCommand));
exports.SetUIExtensionVisibilityCommand = SetUIExtensionVisibilityCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/ui-extensions/ui-extension.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
/**
 * Abstract base class for UI extensions.
 */
var AbstractUIExtension = /** @class */ (function () {
    function AbstractUIExtension() {
    }
    AbstractUIExtension.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        this.activeElement = document.activeElement;
        if (!this.containerElement) {
            if (!this.initialize())
                return;
        }
        this.onBeforeShow.apply(this, __spreadArrays([this.containerElement, root], contextElementIds));
        this.setContainerVisible(true);
    };
    AbstractUIExtension.prototype.hide = function () {
        this.setContainerVisible(false);
        this.restoreFocus();
        this.activeElement = null;
    };
    AbstractUIExtension.prototype.restoreFocus = function () {
        var focusedElement = this.activeElement;
        if (focusedElement) {
            focusedElement.focus();
        }
    };
    AbstractUIExtension.prototype.initialize = function () {
        var baseDiv = document.getElementById(this.options.baseDiv);
        if (!baseDiv) {
            this.logger.warn(this, "Could not obtain sprotty base container for initializing UI extension " + this.id, this);
            return false;
        }
        this.containerElement = this.getOrCreateContainer(baseDiv.id);
        this.initializeContents(this.containerElement);
        if (baseDiv) {
            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);
        }
        return true;
    };
    AbstractUIExtension.prototype.getOrCreateContainer = function (baseDivId) {
        var container = document.getElementById(this.id());
        if (container === null) {
            container = document.createElement('div');
            container.id = baseDivId + "_" + this.id();
            container.classList.add(this.containerClass());
        }
        return container;
    };
    AbstractUIExtension.prototype.setContainerVisible = function (visible) {
        if (this.containerElement) {
            if (visible) {
                this.containerElement.style.visibility = 'visible';
                this.containerElement.style.opacity = '1';
            }
            else {
                this.containerElement.style.visibility = 'hidden';
                this.containerElement.style.opacity = '0';
            }
        }
    };
    /**
     * Updates the `containerElement` under the given `context` before it becomes visible.
     *
     * Subclasses may override this method to, for instance, modifying the position of the
     * `containerElement`, add or remove elements, etc. depending on the specified `root`
     * or `contextElementIds`.
     */
    AbstractUIExtension.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        // default: do nothing
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], AbstractUIExtension.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], AbstractUIExtension.prototype, "logger", void 0);
    AbstractUIExtension = __decorate([
        inversify_1.injectable()
    ], AbstractUIExtension);
    return AbstractUIExtension;
}());
exports.AbstractUIExtension = AbstractUIExtension;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/css-class-postprocessor.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/css-class-postprocessor.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var smodel_utils_1 = __webpack_require__(/*! ../model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var CssClassPostprocessor = /** @class */ (function () {
    function CssClassPostprocessor() {
    }
    CssClassPostprocessor.prototype.decorate = function (vnode, element) {
        if (element.cssClasses) {
            for (var _i = 0, _a = element.cssClasses; _i < _a.length; _i++) {
                var cssClass = _a[_i];
                vnode_utils_1.setClass(vnode, cssClass, true);
            }
        }
        // append model subtype as class
        var subType = smodel_utils_1.getSubType(element);
        if (subType && subType !== element.type) {
            vnode_utils_1.setClass(vnode, subType, true);
        }
        return vnode;
    };
    CssClassPostprocessor.prototype.postUpdate = function () {
        // empty
    };
    CssClassPostprocessor = __decorate([
        inversify_1.injectable()
    ], CssClassPostprocessor);
    return CssClassPostprocessor;
}());
exports.CssClassPostprocessor = CssClassPostprocessor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/dom-helper.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/dom-helper.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var DOMHelper = /** @class */ (function () {
    function DOMHelper() {
    }
    DOMHelper.prototype.getPrefix = function () {
        var prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?
            this.viewerOptions.baseDiv + "_" : "";
        return prefix;
    };
    DOMHelper.prototype.createUniqueDOMElementId = function (element) {
        return this.getPrefix() + element.id;
    };
    DOMHelper.prototype.findSModelIdByDOMElement = function (element) {
        return element.id.replace(this.getPrefix(), '');
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], DOMHelper.prototype, "viewerOptions", void 0);
    DOMHelper = __decorate([
        inversify_1.injectable()
    ], DOMHelper);
    return DOMHelper;
}());
exports.DOMHelper = DOMHelper;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/id-postprocessor.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/id-postprocessor.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "../../../node_modules/sprotty/lib/base/views/dom-helper.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var IdPostprocessor = /** @class */ (function () {
    function IdPostprocessor() {
    }
    IdPostprocessor.prototype.decorate = function (vnode, element) {
        var attrs = vnode_utils_1.getAttrs(vnode);
        if (attrs.id !== undefined)
            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');
        attrs.id = this.domHelper.createUniqueDOMElementId(element);
        if (!vnode.key)
            vnode.key = element.id;
        return vnode;
    };
    IdPostprocessor.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], IdPostprocessor.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], IdPostprocessor.prototype, "domHelper", void 0);
    IdPostprocessor = __decorate([
        inversify_1.injectable()
    ], IdPostprocessor);
    return IdPostprocessor;
}());
exports.IdPostprocessor = IdPostprocessor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/key-tool.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/key-tool.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var KeyTool = /** @class */ (function () {
    function KeyTool(keyListeners) {
        if (keyListeners === void 0) { keyListeners = []; }
        this.keyListeners = keyListeners;
    }
    KeyTool.prototype.register = function (keyListener) {
        this.keyListeners.push(keyListener);
    };
    KeyTool.prototype.deregister = function (keyListener) {
        var index = this.keyListeners.indexOf(keyListener);
        if (index >= 0)
            this.keyListeners.splice(index, 1);
    };
    KeyTool.prototype.handleEvent = function (methodName, model, event) {
        var actions = this.keyListeners
            .map(function (listener) { return listener[methodName].apply(listener, [model, event]); })
            .reduce(function (a, b) { return a.concat(b); });
        if (actions.length > 0) {
            event.preventDefault();
            this.actionDispatcher.dispatchAll(actions);
        }
    };
    KeyTool.prototype.keyDown = function (element, event) {
        this.handleEvent('keyDown', element, event);
    };
    KeyTool.prototype.keyUp = function (element, event) {
        this.handleEvent('keyUp', element, event);
    };
    KeyTool.prototype.focus = function () { };
    KeyTool.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot) {
            vnode_utils_1.on(vnode, 'focus', this.focus.bind(this), element);
            vnode_utils_1.on(vnode, 'keydown', this.keyDown.bind(this), element);
            vnode_utils_1.on(vnode, 'keyup', this.keyUp.bind(this), element);
        }
        return vnode;
    };
    KeyTool.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], KeyTool.prototype, "actionDispatcher", void 0);
    KeyTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.KeyListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], KeyTool);
    return KeyTool;
}());
exports.KeyTool = KeyTool;
var KeyListener = /** @class */ (function () {
    function KeyListener() {
    }
    KeyListener.prototype.keyDown = function (element, event) {
        return [];
    };
    KeyListener.prototype.keyUp = function (element, event) {
        return [];
    };
    KeyListener = __decorate([
        inversify_1.injectable()
    ], KeyListener);
    return KeyListener;
}());
exports.KeyListener = KeyListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/mouse-tool.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "../../../node_modules/sprotty/lib/base/views/dom-helper.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var MouseTool = /** @class */ (function () {
    function MouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        this.mouseListeners = mouseListeners;
    }
    MouseTool.prototype.register = function (mouseListener) {
        this.mouseListeners.push(mouseListener);
    };
    MouseTool.prototype.deregister = function (mouseListener) {
        var index = this.mouseListeners.indexOf(mouseListener);
        if (index >= 0)
            this.mouseListeners.splice(index, 1);
    };
    MouseTool.prototype.getTargetElement = function (model, event) {
        var target = event.target;
        var index = model.index;
        while (target) {
            if (target.id) {
                var element = index.getById(this.domHelper.findSModelIdByDOMElement(target));
                if (element !== undefined)
                    return element;
            }
            target = target.parentNode;
        }
        return undefined;
    };
    MouseTool.prototype.handleEvent = function (methodName, model, event) {
        var _this = this;
        this.focusOnMouseEvent(methodName, model);
        var element = this.getTargetElement(model, event);
        if (!element)
            return;
        var actions = this.mouseListeners
            .map(function (listener) { return listener[methodName].apply(listener, [element, event]); })
            .reduce(function (a, b) { return a.concat(b); });
        if (actions.length > 0) {
            event.preventDefault();
            for (var _i = 0, actions_1 = actions; _i < actions_1.length; _i++) {
                var actionOrPromise = actions_1[_i];
                if (action_1.isAction(actionOrPromise)) {
                    this.actionDispatcher.dispatch(actionOrPromise);
                }
                else {
                    actionOrPromise.then(function (action) {
                        _this.actionDispatcher.dispatch(action);
                    });
                }
            }
        }
    };
    MouseTool.prototype.focusOnMouseEvent = function (methodName, model) {
        if (document) {
            var domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));
            if (methodName === 'mouseDown' && domElement !== null && typeof domElement.focus === 'function')
                domElement.focus();
        }
    };
    MouseTool.prototype.mouseOver = function (model, event) {
        this.handleEvent('mouseOver', model, event);
    };
    MouseTool.prototype.mouseOut = function (model, event) {
        this.handleEvent('mouseOut', model, event);
    };
    MouseTool.prototype.mouseEnter = function (model, event) {
        this.handleEvent('mouseEnter', model, event);
    };
    MouseTool.prototype.mouseLeave = function (model, event) {
        this.handleEvent('mouseLeave', model, event);
    };
    MouseTool.prototype.mouseDown = function (model, event) {
        this.handleEvent('mouseDown', model, event);
    };
    MouseTool.prototype.mouseMove = function (model, event) {
        this.handleEvent('mouseMove', model, event);
    };
    MouseTool.prototype.mouseUp = function (model, event) {
        this.handleEvent('mouseUp', model, event);
    };
    MouseTool.prototype.wheel = function (model, event) {
        this.handleEvent('wheel', model, event);
    };
    MouseTool.prototype.doubleClick = function (model, event) {
        this.handleEvent('doubleClick', model, event);
    };
    MouseTool.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot) {
            vnode_utils_1.on(vnode, 'mouseover', this.mouseOver.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseout', this.mouseOut.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseenter', this.mouseEnter.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseleave', this.mouseLeave.bind(this), element);
            vnode_utils_1.on(vnode, 'mousedown', this.mouseDown.bind(this), element);
            vnode_utils_1.on(vnode, 'mouseup', this.mouseUp.bind(this), element);
            vnode_utils_1.on(vnode, 'mousemove', this.mouseMove.bind(this), element);
            vnode_utils_1.on(vnode, 'wheel', this.wheel.bind(this), element);
            vnode_utils_1.on(vnode, 'contextmenu', function (target, event) {
                event.preventDefault();
            }, element);
            vnode_utils_1.on(vnode, 'dblclick', this.doubleClick.bind(this), element);
        }
        vnode = this.mouseListeners.reduce(function (n, listener) { return listener.decorate(n, element); }, vnode);
        return vnode;
    };
    MouseTool.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], MouseTool.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], MouseTool.prototype, "domHelper", void 0);
    MouseTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.MouseListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], MouseTool);
    return MouseTool;
}());
exports.MouseTool = MouseTool;
var PopupMouseTool = /** @class */ (function (_super) {
    __extends(PopupMouseTool, _super);
    function PopupMouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        var _this = _super.call(this, mouseListeners) || this;
        _this.mouseListeners = mouseListeners;
        return _this;
    }
    PopupMouseTool = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.PopupMouseListener)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], PopupMouseTool);
    return PopupMouseTool;
}(MouseTool));
exports.PopupMouseTool = PopupMouseTool;
var MouseListener = /** @class */ (function () {
    function MouseListener() {
    }
    MouseListener.prototype.mouseOver = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseOut = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseEnter = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseLeave = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseDown = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseMove = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseUp = function (target, event) {
        return [];
    };
    MouseListener.prototype.wheel = function (target, event) {
        return [];
    };
    MouseListener.prototype.doubleClick = function (target, event) {
        return [];
    };
    MouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    MouseListener = __decorate([
        inversify_1.injectable()
    ], MouseListener);
    return MouseListener;
}());
exports.MouseListener = MouseListener;
var MousePositionTracker = /** @class */ (function (_super) {
    __extends(MousePositionTracker, _super);
    function MousePositionTracker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MousePositionTracker.prototype.mouseMove = function (target, event) {
        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });
        return [];
    };
    Object.defineProperty(MousePositionTracker.prototype, "lastPositionOnDiagram", {
        /**
         * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`
         * if no mouse cursor position was ever tracked yet.
         */
        get: function () {
            return this.lastPosition;
        },
        enumerable: true,
        configurable: true
    });
    MousePositionTracker = __decorate([
        inversify_1.injectable()
    ], MousePositionTracker);
    return MousePositionTracker;
}(MouseListener));
exports.MousePositionTracker = MousePositionTracker;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/thunk-view.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/thunk-view.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../../node_modules/snabbdom/es/snabbdom.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
/**
 * An view that avoids calculation and patching of VNodes unless some model properties have changed.
 * Based on snabbdom's thunks.
 */
var ThunkView = /** @class */ (function () {
    function ThunkView() {
    }
    ThunkView.prototype.render = function (model, context) {
        var _this = this;
        return snabbdom_1.h(this.selector(model), {
            key: model.id,
            hook: {
                init: this.init.bind(this),
                prepatch: this.prepatch.bind(this)
            },
            fn: function () { return _this.renderAndDecorate(model, context); },
            args: this.watchedArgs(model),
            thunk: true
        });
    };
    ThunkView.prototype.renderAndDecorate = function (model, context) {
        var vnode = this.doRender(model, context);
        context.decorate(vnode, model);
        return vnode;
    };
    ThunkView.prototype.copyToThunk = function (vnode, thunk) {
        thunk.elm = vnode.elm;
        vnode.data.fn = thunk.data.fn;
        vnode.data.args = thunk.data.args;
        thunk.data = vnode.data;
        thunk.children = vnode.children;
        thunk.text = vnode.text;
        thunk.elm = vnode.elm;
    };
    ThunkView.prototype.init = function (thunk) {
        var cur = thunk.data;
        var vnode = cur.fn.apply(undefined, cur.args);
        this.copyToThunk(vnode, thunk);
    };
    ThunkView.prototype.prepatch = function (oldVnode, thunk) {
        var old = oldVnode.data, cur = thunk.data;
        if (!this.equals(old.args, cur.args))
            this.copyToThunk(cur.fn.apply(undefined, cur.args), thunk);
        else
            this.copyToThunk(oldVnode, thunk);
    };
    ThunkView.prototype.equals = function (oldArg, newArg) {
        if (Array.isArray(oldArg) && Array.isArray(newArg)) {
            if (oldArg.length !== newArg.length)
                return false;
            for (var i = 0; i < newArg.length; ++i) {
                if (!this.equals(oldArg[i], newArg[i]))
                    return false;
            }
        }
        else if (typeof oldArg === 'object' && typeof newArg === 'object') {
            if (Object.keys(oldArg).length !== Object.keys(newArg).length)
                return false;
            for (var key in oldArg) {
                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))
                    return false;
            }
        }
        else if (oldArg !== newArg) {
            return false;
        }
        return true;
    };
    ThunkView = __decorate([
        inversify_1.injectable()
    ], ThunkView);
    return ThunkView;
}());
exports.ThunkView = ThunkView;
function isThunk(vnode) {
    return 'thunk' in vnode;
}
exports.isThunk = isThunk;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/view.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/view.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "../../../node_modules/sprotty/lib/utils/inversify.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_utils_1 = __webpack_require__(/*! ../model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
/**
 * Allows to look up the IView for a given SModelElement based on its type.
 */
var ViewRegistry = /** @class */ (function (_super) {
    __extends(ViewRegistry, _super);
    function ViewRegistry(registrations) {
        var _this = _super.call(this) || this;
        _this.registerDefaults();
        registrations.forEach(function (registration) {
            return _this.register(registration.type, registration.factory());
        });
        return _this;
    }
    ViewRegistry.prototype.registerDefaults = function () {
        this.register(smodel_factory_1.EMPTY_ROOT.type, new EmptyView());
    };
    ViewRegistry.prototype.missing = function (key) {
        return new MissingView();
    };
    ViewRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ViewRegistration)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ViewRegistry);
    return ViewRegistry;
}(registry_1.InstanceRegistry));
exports.ViewRegistry = ViewRegistry;
/**
 * Combines `registerModelElement` and `configureView`.
 */
function configureModelElement(context, type, modelConstr, viewConstr, features) {
    smodel_utils_1.registerModelElement(context, type, modelConstr, features);
    configureView(context, type, viewConstr);
}
exports.configureModelElement = configureModelElement;
/**
 * Utility function to register a view for a model element type.
 */
function configureView(context, type, constr) {
    if (typeof constr === 'function') {
        if (!inversify_2.isInjectable(constr)) {
            throw new Error("Views should be @injectable: " + constr.name);
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ViewRegistration).toDynamicValue(function (ctx) { return ({
        type: type,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureView = configureView;
/**
 * This view is used when the model is the EMPTY_ROOT.
 */
var EmptyView = /** @class */ (function () {
    function EmptyView() {
    }
    EmptyView.prototype.render = function (model, context) {
        return snabbdom_jsx_1.svg("svg", { "class-sprotty-empty": true });
    };
    EmptyView = __decorate([
        inversify_1.injectable()
    ], EmptyView);
    return EmptyView;
}());
exports.EmptyView = EmptyView;
/**
 * This view is used when no view has been registered for a model element type.
 */
var MissingView = /** @class */ (function () {
    function MissingView() {
    }
    MissingView.prototype.render = function (model, context) {
        var position = model.position || geometry_1.ORIGIN_POINT;
        return snabbdom_jsx_1.svg("text", { "class-sprotty-missing": true, x: position.x, y: position.y },
            "?",
            model.id,
            "?");
    };
    MissingView = __decorate([
        inversify_1.injectable()
    ], MissingView);
    return MissingView;
}());
exports.MissingView = MissingView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/viewer-cache.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/viewer-cache.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "../../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
/**
 * Updating the view is rather expensive, and it doesn't make sense to calculate
 * more then one update per animation (rendering) frame. So this class batches
 * all incoming model changes and only renders the last one when the next animation
 * frame comes.
 */
var ViewerCache = /** @class */ (function () {
    function ViewerCache() {
    }
    ViewerCache.prototype.update = function (model, cause) {
        if (cause !== undefined) {
            // Forward the update immediately in order to pass the cause action
            this.delegate.update(model, cause);
            this.cachedModel = undefined;
        }
        else {
            var isCacheEmpty = this.cachedModel === undefined;
            this.cachedModel = model;
            if (isCacheEmpty) {
                this.scheduleUpdate();
            }
        }
    };
    ViewerCache.prototype.scheduleUpdate = function () {
        var _this = this;
        this.syncer.onEndOfNextFrame(function () {
            if (_this.cachedModel) {
                _this.delegate.update(_this.cachedModel);
                _this.cachedModel = undefined;
            }
        });
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IViewer),
        __metadata("design:type", Object)
    ], ViewerCache.prototype, "delegate", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], ViewerCache.prototype, "syncer", void 0);
    ViewerCache = __decorate([
        inversify_1.injectable()
    ], ViewerCache);
    return ViewerCache;
}());
exports.ViewerCache = ViewerCache;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/viewer-options.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/viewer-options.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
exports.defaultViewerOptions = function () { return ({
    baseDiv: 'sprotty',
    baseClass: 'sprotty',
    hiddenDiv: 'sprotty-hidden',
    hiddenClass: 'sprotty-hidden',
    popupDiv: 'sprotty-popup',
    popupClass: 'sprotty-popup',
    popupClosedClass: 'sprotty-popup-closed',
    needsClientLayout: true,
    needsServerLayout: false,
    popupOpenDelay: 1000,
    popupCloseDelay: 300
}); };
/**
 * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for
 * options that are not specified.
 */
function configureViewerOptions(context, options) {
    var opt = __assign(__assign({}, exports.defaultViewerOptions()), options);
    if (context.isBound(types_1.TYPES.ViewerOptions))
        context.rebind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
    else
        context.bind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
}
exports.configureViewerOptions = configureViewerOptions;
/**
 * Utility function to partially override the currently configured viewer options in a DI container.
 */
function overrideViewerOptions(container, options) {
    var opt = container.get(types_1.TYPES.ViewerOptions);
    for (var p in options) {
        if (options.hasOwnProperty(p))
            opt[p] = options[p];
    }
    return opt;
}
exports.overrideViewerOptions = overrideViewerOptions;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/viewer.js":
/*!**************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/viewer.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx html */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js"); // must be html here, as we're creating a div
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "../../../node_modules/snabbdom/es/snabbdom.js");
var props_1 = __webpack_require__(/*! snabbdom/modules/props */ "../../../node_modules/snabbdom/modules/props.js");
var attributes_1 = __webpack_require__(/*! snabbdom/modules/attributes */ "../../../node_modules/snabbdom/modules/attributes.js");
var style_1 = __webpack_require__(/*! snabbdom/modules/style */ "../../../node_modules/snabbdom/modules/style.js");
var eventlisteners_1 = __webpack_require__(/*! snabbdom/modules/eventlisteners */ "../../../node_modules/snabbdom/modules/eventlisteners.js");
var class_1 = __webpack_require__(/*! snabbdom/modules/class */ "../../../node_modules/snabbdom/modules/class.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "../../../node_modules/sprotty/lib/base/types.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../../node_modules/sprotty/lib/utils/browser.js");
var initialize_canvas_1 = __webpack_require__(/*! ../features/initialize-canvas */ "../../../node_modules/sprotty/lib/base/features/initialize-canvas.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var thunk_view_1 = __webpack_require__(/*! ./thunk-view */ "../../../node_modules/sprotty/lib/base/views/thunk-view.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var ModelRenderer = /** @class */ (function () {
    function ModelRenderer(viewRegistry, targetKind, postprocessors) {
        this.viewRegistry = viewRegistry;
        this.targetKind = targetKind;
        this.postprocessors = postprocessors;
    }
    ModelRenderer.prototype.decorate = function (vnode, element) {
        if (thunk_view_1.isThunk(vnode)) {
            return vnode;
        }
        return this.postprocessors.reduce(function (n, processor) { return processor.decorate(n, element); }, vnode);
    };
    ModelRenderer.prototype.renderElement = function (element, args) {
        var view = this.viewRegistry.get(element.type);
        var vnode = view.render(element, this, args);
        if (vnode) {
            return this.decorate(vnode, element);
        }
        else {
            return undefined;
        }
    };
    ModelRenderer.prototype.renderChildren = function (element, args) {
        var _this = this;
        return element.children
            .map(function (child) { return _this.renderElement(child, args); })
            .filter(function (vnode) { return vnode !== undefined; });
    };
    ModelRenderer.prototype.postUpdate = function (cause) {
        this.postprocessors.forEach(function (processor) { return processor.postUpdate(cause); });
    };
    return ModelRenderer;
}());
exports.ModelRenderer = ModelRenderer;
var PatcherProvider = /** @class */ (function () {
    function PatcherProvider() {
        this.patcher = snabbdom_1.init(this.createModules());
    }
    PatcherProvider.prototype.createModules = function () {
        return [
            props_1.propsModule,
            attributes_1.attributesModule,
            class_1.classModule,
            style_1.styleModule,
            eventlisteners_1.eventListenersModule
        ];
    };
    PatcherProvider = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], PatcherProvider);
    return PatcherProvider;
}());
exports.PatcherProvider = PatcherProvider;
/**
 * The component that turns the model into an SVG DOM.
 * Uses a VDOM based on snabbdom.js for performance.
 */
var ModelViewer = /** @class */ (function () {
    function ModelViewer(modelRendererFactory, patcherProvider, postprocessors) {
        var _this = this;
        this.onWindowResize = function (vdom) {
            var baseDiv = document.getElementById(_this.options.baseDiv);
            if (baseDiv !== null) {
                var newBounds = _this.getBoundsInPage(baseDiv);
                _this.actiondispatcher.dispatch(new initialize_canvas_1.InitializeCanvasBoundsAction(newBounds));
            }
        };
        this.renderer = modelRendererFactory('main', postprocessors);
        this.patcher = patcherProvider.patcher;
    }
    ModelViewer.prototype.update = function (model, cause) {
        var _this = this;
        this.logger.log(this, 'rendering', model);
        var newVDOM = snabbdom_jsx_1.html("div", { id: this.options.baseDiv }, this.renderer.renderElement(model));
        if (this.lastVDOM !== undefined) {
            var hadFocus = this.hasFocus();
            vnode_utils_1.copyClassesFromVNode(this.lastVDOM, newVDOM);
            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);
            this.restoreFocus(hadFocus);
        }
        else if (typeof document !== 'undefined') {
            var placeholder = document.getElementById(this.options.baseDiv);
            if (placeholder !== null) {
                if (typeof window !== 'undefined') {
                    window.addEventListener('resize', function () {
                        _this.onWindowResize(newVDOM);
                    });
                }
                vnode_utils_1.copyClassesFromElement(placeholder, newVDOM);
                vnode_utils_1.setClass(newVDOM, this.options.baseClass, true);
                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);
            }
            else {
                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);
            }
        }
        this.renderer.postUpdate(cause);
    };
    ModelViewer.prototype.hasFocus = function () {
        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            var lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                var lastElement = lastRootVNode.elm;
                return document.activeElement === lastElement;
            }
        }
        return false;
    };
    ModelViewer.prototype.restoreFocus = function (focus) {
        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            var lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                var lastElement = lastRootVNode.elm;
                if (lastElement && typeof lastElement.focus === 'function')
                    lastElement.focus();
            }
        }
    };
    ModelViewer.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        var scroll = browser_1.getWindowScroll();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "actiondispatcher", void 0);
    ModelViewer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ModelRendererFactory)),
        __param(1, inversify_1.inject(types_1.TYPES.PatcherProvider)),
        __param(2, inversify_1.multiInject(types_1.TYPES.IVNodePostprocessor)), __param(2, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], ModelViewer);
    return ModelViewer;
}());
exports.ModelViewer = ModelViewer;
/**
 * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds
 * of elements. The model is rendered in a section that is not visible to the user,
 * and then the bounds are extracted from the DOM.
 */
var HiddenModelViewer = /** @class */ (function () {
    function HiddenModelViewer(modelRendererFactory, patcherProvider, hiddenPostprocessors) {
        this.hiddenRenderer = modelRendererFactory('hidden', hiddenPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    HiddenModelViewer.prototype.update = function (hiddenModel, cause) {
        this.logger.log(this, 'rendering hidden');
        var newVDOM;
        if (hiddenModel.type === smodel_factory_1.EMPTY_ROOT.type) {
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.hiddenDiv });
        }
        else {
            var hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);
            if (hiddenVNode) {
                vnode_utils_1.setAttr(hiddenVNode, 'opacity', 0);
            }
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.hiddenDiv }, hiddenVNode);
        }
        if (this.lastHiddenVDOM !== undefined) {
            vnode_utils_1.copyClassesFromVNode(this.lastHiddenVDOM, newVDOM);
            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);
        }
        else {
            var placeholder = document.getElementById(this.options.hiddenDiv);
            if (placeholder === null) {
                placeholder = document.createElement("div");
                document.body.appendChild(placeholder);
            }
            else {
                vnode_utils_1.copyClassesFromElement(placeholder, newVDOM);
            }
            vnode_utils_1.setClass(newVDOM, this.options.baseClass, true);
            vnode_utils_1.setClass(newVDOM, this.options.hiddenClass, true);
            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.hiddenRenderer.postUpdate(cause);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], HiddenModelViewer.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], HiddenModelViewer.prototype, "logger", void 0);
    HiddenModelViewer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ModelRendererFactory)),
        __param(1, inversify_1.inject(types_1.TYPES.PatcherProvider)),
        __param(2, inversify_1.multiInject(types_1.TYPES.HiddenVNodePostprocessor)), __param(2, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], HiddenModelViewer);
    return HiddenModelViewer;
}());
exports.HiddenModelViewer = HiddenModelViewer;
var PopupModelViewer = /** @class */ (function () {
    function PopupModelViewer(modelRendererFactory, patcherProvider, popupPostprocessors) {
        this.modelRendererFactory = modelRendererFactory;
        this.popupRenderer = this.modelRendererFactory('popup', popupPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    PopupModelViewer.prototype.update = function (model, cause) {
        this.logger.log(this, 'rendering popup', model);
        var popupClosed = model.type === smodel_factory_1.EMPTY_ROOT.type;
        var newVDOM;
        if (popupClosed) {
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.popupDiv });
        }
        else {
            var position = model.canvasBounds;
            var inlineStyle = {
                top: position.y + 'px',
                left: position.x + 'px'
            };
            newVDOM = snabbdom_jsx_1.html("div", { id: this.options.popupDiv, style: inlineStyle }, this.popupRenderer.renderElement(model));
        }
        if (this.lastPopupVDOM !== undefined) {
            vnode_utils_1.copyClassesFromVNode(this.lastPopupVDOM, newVDOM);
            vnode_utils_1.setClass(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);
        }
        else if (typeof document !== 'undefined') {
            var placeholder = document.getElementById(this.options.popupDiv);
            if (placeholder === null) {
                placeholder = document.createElement("div");
                document.body.appendChild(placeholder);
            }
            else {
                vnode_utils_1.copyClassesFromElement(placeholder, newVDOM);
            }
            vnode_utils_1.setClass(newVDOM, this.options.popupClass, true);
            vnode_utils_1.setClass(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.popupRenderer.postUpdate(cause);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], PopupModelViewer.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], PopupModelViewer.prototype, "logger", void 0);
    PopupModelViewer = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ModelRendererFactory)),
        __param(1, inversify_1.inject(types_1.TYPES.PatcherProvider)),
        __param(2, inversify_1.multiInject(types_1.TYPES.PopupVNodePostprocessor)), __param(2, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], PopupModelViewer);
    return PopupModelViewer;
}());
exports.PopupModelViewer = PopupModelViewer;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/vnode-postprocessor.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var FocusFixPostprocessor = /** @class */ (function () {
    function FocusFixPostprocessor() {
    }
    FocusFixPostprocessor.prototype.decorate = function (vnode, element) {
        if (vnode.sel && vnode.sel.startsWith('svg'))
            // allows to set focus in Firefox
            vnode_utils_1.setAttr(vnode, 'tabindex', 0);
        return vnode;
    };
    FocusFixPostprocessor.prototype.postUpdate = function () {
    };
    FocusFixPostprocessor = __decorate([
        inversify_1.injectable()
    ], FocusFixPostprocessor);
    return FocusFixPostprocessor;
}());
exports.FocusFixPostprocessor = FocusFixPostprocessor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/base/views/vnode-utils.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
function setAttr(vnode, name, value) {
    getAttrs(vnode)[name] = value;
}
exports.setAttr = setAttr;
function setClass(vnode, name, value) {
    getClass(vnode)[name] = value;
}
exports.setClass = setClass;
function setNamespace(node, ns) {
    if (node.data === undefined)
        node.data = {};
    node.data.ns = ns;
    var children = node.children;
    if (children !== undefined) {
        for (var i = 0; i < children.length; i++) {
            var child = children[i];
            if (typeof child !== 'string')
                setNamespace(child, ns);
        }
    }
}
exports.setNamespace = setNamespace;
function copyClassesFromVNode(source, target) {
    var classList = getClass(source);
    for (var c in classList) {
        if (classList.hasOwnProperty(c))
            setClass(target, c, true);
    }
}
exports.copyClassesFromVNode = copyClassesFromVNode;
function copyClassesFromElement(element, target) {
    var classList = element.classList;
    for (var i = 0; i < classList.length; i++) {
        var item = classList.item(i);
        if (item)
            setClass(target, item, true);
    }
}
exports.copyClassesFromElement = copyClassesFromElement;
function mergeStyle(vnode, style) {
    getData(vnode).style = __assign(__assign({}, (getData(vnode).style || {})), style);
}
exports.mergeStyle = mergeStyle;
function on(vnode, event, listener, element) {
    var val = getOn(vnode);
    if (val[event]) {
        throw new Error('EventListener for ' + event + ' already registered on VNode');
    }
    val[event] = [listener, element];
}
exports.on = on;
function getAttrs(vnode) {
    var data = getData(vnode);
    if (!data.attrs)
        data.attrs = {};
    return data.attrs;
}
exports.getAttrs = getAttrs;
function getData(vnode) {
    if (!vnode.data)
        vnode.data = {};
    return vnode.data;
}
function getClass(vnode) {
    var data = getData(vnode);
    if (!data.class)
        data.class = {};
    return data.class;
}
function getOn(vnode) {
    var data = getData(vnode);
    if (!data.on)
        data.on = {};
    return data.on;
}


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/abstract-layout.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/abstract-layout.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var AbstractLayout = /** @class */ (function () {
    function AbstractLayout() {
    }
    AbstractLayout.prototype.layout = function (container, layouter) {
        var boundsData = layouter.getBoundsData(container);
        var options = this.getLayoutOptions(container);
        var childrenSize = this.getChildrenSize(container, options, layouter);
        var maxWidth = options.paddingFactor * (options.resizeContainer
            ? childrenSize.width
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);
        var maxHeight = options.paddingFactor * (options.resizeContainer
            ? childrenSize.height
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);
        if (maxWidth > 0 && maxHeight > 0) {
            var offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);
            boundsData.boundsChanged = true;
        }
    };
    AbstractLayout.prototype.getFinalContainerBounds = function (container, lastOffset, options, maxWidth, maxHeight) {
        return {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)
        };
    };
    AbstractLayout.prototype.getFixedContainerBounds = function (container, layoutOptions, layouter) {
        var currentContainer = container;
        while (true) {
            if (model_1.isBoundsAware(currentContainer)) {
                var bounds = currentContainer.bounds;
                if (model_1.isLayoutContainer(currentContainer) && layoutOptions.resizeContainer)
                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');
                if (geometry_1.isValidDimension(bounds))
                    return bounds;
            }
            if (currentContainer instanceof smodel_1.SChildElement) {
                currentContainer = currentContainer.parent;
            }
            else {
                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');
                return geometry_1.EMPTY_BOUNDS;
            }
        }
    };
    AbstractLayout.prototype.layoutChildren = function (container, layouter, containerOptions, maxWidth, maxHeight) {
        var _this = this;
        var currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))
        };
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var boundsData = layouter.getBoundsData(child);
                var bounds = boundsData.bounds;
                var childOptions = _this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    currentOffset = _this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
                }
            }
        });
        return currentOffset;
    };
    AbstractLayout.prototype.getDx = function (hAlign, bounds, maxWidth) {
        switch (hAlign) {
            case 'left':
                return 0;
            case 'center':
                return 0.5 * (maxWidth - bounds.width);
            case 'right':
                return maxWidth - bounds.width;
        }
    };
    AbstractLayout.prototype.getDy = function (vAlign, bounds, maxHeight) {
        switch (vAlign) {
            case 'top':
                return 0;
            case 'center':
                return 0.5 * (maxHeight - bounds.height);
            case 'bottom':
                return maxHeight - bounds.height;
        }
    };
    AbstractLayout.prototype.getChildLayoutOptions = function (child, containerOptions) {
        var layoutOptions = child.layoutOptions;
        if (layoutOptions === undefined)
            return containerOptions;
        else
            return this.spread(containerOptions, layoutOptions);
    };
    AbstractLayout.prototype.getLayoutOptions = function (element) {
        var _this = this;
        var current = element;
        var allOptions = [];
        while (current !== undefined) {
            var layoutOptions = current.layoutOptions;
            if (layoutOptions !== undefined)
                allOptions.push(layoutOptions);
            if (current instanceof smodel_1.SChildElement)
                current = current.parent;
            else
                break;
        }
        return allOptions.reverse().reduce(function (a, b) { return _this.spread(a, b); }, this.getDefaultLayoutOptions());
    };
    return AbstractLayout;
}());
exports.AbstractLayout = AbstractLayout;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js":
/*!********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/bounds-manipulation.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some
 * (or all) model elements.
 */
var SetBoundsAction = /** @class */ (function () {
    function SetBoundsAction(bounds) {
        this.bounds = bounds;
        this.kind = SetBoundsAction.KIND;
    }
    SetBoundsAction.KIND = 'setBounds';
    return SetBoundsAction;
}());
exports.SetBoundsAction = SetBoundsAction;
/**
 * Sent from the model source to the client to request bounds for the given model. The model is
 * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.
 * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout
 * (see `needsClientLayout` viewer option).
 */
var RequestBoundsAction = /** @class */ (function () {
    function RequestBoundsAction(newRoot, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.newRoot = newRoot;
        this.requestId = requestId;
        this.kind = RequestBoundsAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestBoundsAction.create = function (newRoot) {
        return new RequestBoundsAction(newRoot, action_1.generateRequestId());
    };
    RequestBoundsAction.KIND = 'requestBounds';
    return RequestBoundsAction;
}());
exports.RequestBoundsAction = RequestBoundsAction;
/**
 * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds
 * computation as a response to a RequestBoundsAction. If the server is responsible for parts of
 * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds
 * received with this action. Otherwise there is no need to send the computed bounds to the server,
 * so they can be processed locally by the client.
 */
var ComputedBoundsAction = /** @class */ (function () {
    function ComputedBoundsAction(bounds, revision, alignments, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.bounds = bounds;
        this.revision = revision;
        this.alignments = alignments;
        this.responseId = responseId;
        this.kind = ComputedBoundsAction.KIND;
    }
    ComputedBoundsAction.KIND = 'computedBounds';
    return ComputedBoundsAction;
}());
exports.ComputedBoundsAction = ComputedBoundsAction;
/**
 * Request a layout of the diagram or the selected elements only.
 */
var LayoutAction = /** @class */ (function () {
    function LayoutAction() {
        this.kind = LayoutAction.KIND;
    }
    LayoutAction.KIND = 'layout';
    return LayoutAction;
}());
exports.LayoutAction = LayoutAction;
var SetBoundsCommand = /** @class */ (function (_super) {
    __extends(SetBoundsCommand, _super);
    function SetBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.bounds = [];
        return _this;
    }
    SetBoundsCommand.prototype.execute = function (context) {
        var _this = this;
        this.action.bounds.forEach(function (b) {
            var element = context.root.index.getById(b.elementId);
            if (element && model_1.isBoundsAware(element)) {
                _this.bounds.push({
                    element: element,
                    oldBounds: element.bounds,
                    newPosition: b.newPosition,
                    newSize: b.newSize
                });
            }
        });
        return this.redo(context);
    };
    SetBoundsCommand.prototype.undo = function (context) {
        this.bounds.forEach(function (b) { return b.element.bounds = b.oldBounds; });
        return context.root;
    };
    SetBoundsCommand.prototype.redo = function (context) {
        this.bounds.forEach(function (b) {
            if (b.newPosition)
                b.element.bounds = __assign(__assign({}, b.newPosition), b.newSize);
            else
                // keep the position
                b.element.bounds = __assign({ x: b.element.bounds.x, y: b.element.bounds.y }, b.newSize);
        });
        return context.root;
    };
    SetBoundsCommand.KIND = SetBoundsAction.KIND;
    SetBoundsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetBoundsAction])
    ], SetBoundsCommand);
    return SetBoundsCommand;
}(command_1.SystemCommand));
exports.SetBoundsCommand = SetBoundsCommand;
var RequestBoundsCommand = /** @class */ (function (_super) {
    __extends(RequestBoundsCommand, _super);
    function RequestBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    RequestBoundsCommand.prototype.execute = function (context) {
        return {
            model: context.modelFactory.createRoot(this.action.newRoot),
            modelChanged: true,
            cause: this.action
        };
    };
    Object.defineProperty(RequestBoundsCommand.prototype, "blockUntil", {
        get: function () {
            return function (action) { return action.kind === ComputedBoundsAction.KIND; };
        },
        enumerable: true,
        configurable: true
    });
    RequestBoundsCommand.KIND = RequestBoundsAction.KIND;
    RequestBoundsCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [RequestBoundsAction])
    ], RequestBoundsCommand);
    return RequestBoundsCommand;
}(command_1.HiddenCommand));
exports.RequestBoundsCommand = RequestBoundsCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ./bounds-manipulation */ "../../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var hidden_bounds_updater_1 = __webpack_require__(/*! ./hidden-bounds-updater */ "../../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js");
var layout_1 = __webpack_require__(/*! ./layout */ "../../../node_modules/sprotty/lib/features/bounds/layout.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var boundsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, bounds_manipulation_1.SetBoundsCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, bounds_manipulation_1.RequestBoundsCommand);
    bind(hidden_bounds_updater_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(hidden_bounds_updater_1.HiddenBoundsUpdater);
    bind(types_1.TYPES.Layouter).to(layout_1.Layouter).inSingletonScope();
    bind(types_1.TYPES.LayoutRegistry).to(layout_1.LayoutRegistry).inSingletonScope();
});
exports.default = boundsModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/hbox-layout.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/hbox-layout.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../../../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in horizontal (left->right) direction.
 */
var HBoxLayouter = /** @class */ (function (_super) {
    __extends(HBoxLayouter, _super);
    function HBoxLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HBoxLayouter.prototype.getChildrenSize = function (container, containerOptions, layouter) {
        var maxWidth = 0;
        var maxHeight = -1;
        var isFirst = true;
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    if (isFirst)
                        isFirst = false;
                    else
                        maxWidth += containerOptions.hGap;
                    maxWidth += bounds.width;
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    HBoxLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: currentOffset.x + child.bounds.x - bounds.x,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x + bounds.width + containerOptions.hGap,
            y: currentOffset.y
        };
    };
    HBoxLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hGap: 1,
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    HBoxLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    HBoxLayouter.KIND = 'hbox';
    return HBoxLayouter;
}(abstract_layout_1.AbstractLayout));
exports.HBoxLayouter = HBoxLayouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ./bounds-manipulation */ "../../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var layout_1 = __webpack_require__(/*! ./layout */ "../../../node_modules/sprotty/lib/features/bounds/layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var BoundsData = /** @class */ (function () {
    function BoundsData() {
    }
    return BoundsData;
}());
exports.BoundsData = BoundsData;
/**
 * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires
 * ComputedBoundsActions.
 *
 * The actual bounds of an element can usually not be determined from the SModel
 * as they depend on the view implementation and CSS stylings. So the best way is
 * to grab them from a live (but hidden) SVG using getBBox().
 *
 * If an element is Alignable, and the top-left corner of its bounding box is not
 * the origin, we also issue a realign with the ComputedBoundsAction.
 */
var HiddenBoundsUpdater = /** @class */ (function () {
    function HiddenBoundsUpdater() {
        this.element2boundsData = new Map;
    }
    HiddenBoundsUpdater.prototype.decorate = function (vnode, element) {
        if (model_1.isSizeable(element) || model_1.isLayoutContainer(element)) {
            this.element2boundsData.set(element, {
                vnode: vnode,
                bounds: element.bounds,
                boundsChanged: false,
                alignmentChanged: false
            });
        }
        if (element instanceof smodel_1.SModelRoot)
            this.root = element;
        return vnode;
    };
    HiddenBoundsUpdater.prototype.postUpdate = function (cause) {
        if (cause === undefined || cause.kind !== bounds_manipulation_1.RequestBoundsAction.KIND) {
            return;
        }
        var request = cause;
        this.getBoundsFromDOM();
        this.layouter.layout(this.element2boundsData);
        var resizes = [];
        var realignments = [];
        this.element2boundsData.forEach(function (boundsData, element) {
            if (boundsData.boundsChanged && boundsData.bounds !== undefined) {
                var resize = {
                    elementId: element.id,
                    newSize: {
                        width: boundsData.bounds.width,
                        height: boundsData.bounds.height
                    }
                };
                // don't copy position if the element is layouted by the server
                if (element instanceof smodel_1.SChildElement && model_1.isLayoutContainer(element.parent))
                    resize.newPosition = {
                        x: boundsData.bounds.x,
                        y: boundsData.bounds.y,
                    };
                resizes.push(resize);
            }
            if (boundsData.alignmentChanged && boundsData.alignment !== undefined)
                realignments.push({
                    elementId: element.id,
                    newAlignment: boundsData.alignment
                });
        });
        var revision = (this.root !== undefined) ? this.root.revision : undefined;
        this.actionDispatcher.dispatch(new bounds_manipulation_1.ComputedBoundsAction(resizes, revision, realignments, request.requestId));
        this.element2boundsData.clear();
    };
    HiddenBoundsUpdater.prototype.getBoundsFromDOM = function () {
        var _this = this;
        this.element2boundsData.forEach(function (boundsData, element) {
            if (boundsData.bounds && model_1.isSizeable(element)) {
                var vnode = boundsData.vnode;
                if (vnode && vnode.elm) {
                    var boundingBox = _this.getBounds(vnode.elm, element);
                    if (model_1.isAlignable(element) && !(geometry_1.almostEquals(boundingBox.x, 0) && geometry_1.almostEquals(boundingBox.y, 0))) {
                        boundsData.alignment = {
                            x: -boundingBox.x,
                            y: -boundingBox.y
                        };
                        boundsData.alignmentChanged = true;
                    }
                    var newBounds = {
                        x: element.bounds.x,
                        y: element.bounds.y,
                        width: boundingBox.width,
                        height: boundingBox.height
                    };
                    if (!(geometry_1.almostEquals(newBounds.x, element.bounds.x)
                        && geometry_1.almostEquals(newBounds.y, element.bounds.y)
                        && geometry_1.almostEquals(newBounds.width, element.bounds.width)
                        && geometry_1.almostEquals(newBounds.height, element.bounds.height))) {
                        boundsData.bounds = newBounds;
                        boundsData.boundsChanged = true;
                    }
                }
            }
        });
    };
    HiddenBoundsUpdater.prototype.getBounds = function (elm, element) {
        if (typeof elm.getBBox !== 'function') {
            this.logger.error(this, 'Not an SVG element:', elm);
            return geometry_1.EMPTY_BOUNDS;
        }
        var bounds = elm.getBBox();
        return {
            x: bounds.x,
            y: bounds.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], HiddenBoundsUpdater.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], HiddenBoundsUpdater.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.Layouter),
        __metadata("design:type", layout_1.Layouter)
    ], HiddenBoundsUpdater.prototype, "layouter", void 0);
    HiddenBoundsUpdater = __decorate([
        inversify_1.injectable()
    ], HiddenBoundsUpdater);
    return HiddenBoundsUpdater;
}());
exports.HiddenBoundsUpdater = HiddenBoundsUpdater;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/layout.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/layout.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var vbox_layout_1 = __webpack_require__(/*! ./vbox-layout */ "../../../node_modules/sprotty/lib/features/bounds/vbox-layout.js");
var hbox_layout_1 = __webpack_require__(/*! ./hbox-layout */ "../../../node_modules/sprotty/lib/features/bounds/hbox-layout.js");
var stack_layout_1 = __webpack_require__(/*! ./stack-layout */ "../../../node_modules/sprotty/lib/features/bounds/stack-layout.js");
var LayoutRegistry = /** @class */ (function (_super) {
    __extends(LayoutRegistry, _super);
    function LayoutRegistry() {
        var _this = _super.call(this) || this;
        _this.register(vbox_layout_1.VBoxLayouter.KIND, new vbox_layout_1.VBoxLayouter());
        _this.register(hbox_layout_1.HBoxLayouter.KIND, new hbox_layout_1.HBoxLayouter());
        _this.register(stack_layout_1.StackLayouter.KIND, new stack_layout_1.StackLayouter());
        return _this;
    }
    return LayoutRegistry;
}(registry_1.InstanceRegistry));
exports.LayoutRegistry = LayoutRegistry;
var Layouter = /** @class */ (function () {
    function Layouter() {
    }
    Layouter.prototype.layout = function (element2boundsData) {
        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.LayoutRegistry),
        __metadata("design:type", LayoutRegistry)
    ], Layouter.prototype, "layoutRegistry", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], Layouter.prototype, "logger", void 0);
    Layouter = __decorate([
        inversify_1.injectable()
    ], Layouter);
    return Layouter;
}());
exports.Layouter = Layouter;
var StatefulLayouter = /** @class */ (function () {
    function StatefulLayouter(element2boundsData, layoutRegistry, log) {
        var _this = this;
        this.element2boundsData = element2boundsData;
        this.layoutRegistry = layoutRegistry;
        this.log = log;
        this.toBeLayouted = [];
        element2boundsData.forEach(function (data, element) {
            if (model_1.isLayoutContainer(element))
                _this.toBeLayouted.push(element);
        });
    }
    StatefulLayouter.prototype.getBoundsData = function (element) {
        var boundsData = this.element2boundsData.get(element);
        var bounds = element.bounds;
        if (model_1.isLayoutContainer(element) && this.toBeLayouted.indexOf(element) >= 0) {
            bounds = this.doLayout(element);
        }
        if (!boundsData) {
            boundsData = {
                bounds: bounds,
                boundsChanged: false,
                alignmentChanged: false
            };
            this.element2boundsData.set(element, boundsData);
        }
        return boundsData;
    };
    StatefulLayouter.prototype.layout = function () {
        while (this.toBeLayouted.length > 0) {
            var element = this.toBeLayouted[0];
            this.doLayout(element);
        }
    };
    StatefulLayouter.prototype.doLayout = function (element) {
        var index = this.toBeLayouted.indexOf(element);
        if (index >= 0)
            this.toBeLayouted.splice(index, 1);
        var layout = this.layoutRegistry.get(element.layout);
        if (layout)
            layout.layout(element, this);
        var boundsData = this.element2boundsData.get(element);
        if (boundsData !== undefined && boundsData.bounds !== undefined) {
            return boundsData.bounds;
        }
        else {
            this.log.error(element, 'Layout failed');
            return geometry_1.EMPTY_BOUNDS;
        }
    };
    return StatefulLayouter;
}());
exports.StatefulLayouter = StatefulLayouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/model.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/model.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../../node_modules/sprotty/lib/utils/browser.js");
exports.boundsFeature = Symbol('boundsFeature');
exports.layoutContainerFeature = Symbol('layoutContainerFeature');
exports.layoutableChildFeature = Symbol('layoutableChildFeature');
exports.alignFeature = Symbol('alignFeature');
function isBoundsAware(element) {
    return 'bounds' in element;
}
exports.isBoundsAware = isBoundsAware;
function isLayoutContainer(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutContainerFeature)
        && 'layout' in element;
}
exports.isLayoutContainer = isLayoutContainer;
function isLayoutableChild(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutableChildFeature);
}
exports.isLayoutableChild = isLayoutableChild;
function isSizeable(element) {
    return element.hasFeature(exports.boundsFeature) && isBoundsAware(element);
}
exports.isSizeable = isSizeable;
function isAlignable(element) {
    return element.hasFeature(exports.alignFeature)
        && 'alignment' in element;
}
exports.isAlignable = isAlignable;
function getAbsoluteBounds(element) {
    var boundsAware = smodel_utils_1.findParentByFeature(element, isBoundsAware);
    if (boundsAware !== undefined) {
        var bounds = boundsAware.bounds;
        var current = boundsAware;
        while (current instanceof smodel_1.SChildElement) {
            var parent_1 = current.parent;
            bounds = parent_1.localToParent(bounds);
            current = parent_1;
        }
        return bounds;
    }
    else if (element instanceof smodel_1.SModelRoot) {
        var canvasBounds = element.canvasBounds;
        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };
    }
    else {
        return geometry_1.EMPTY_BOUNDS;
    }
}
exports.getAbsoluteBounds = getAbsoluteBounds;
/**
 * Returns the "client-absolute" bounds of the specified `element`.
 *
 * The client-absolute bounds are relative to the entire browser page.
 *
 * @param element The element to get the bounds for.
 * @param domHelper The dom helper to obtain the SVG element's id.
 * @param viewerOptions The viewer options to obtain sprotty's container div id.
 */
function getAbsoluteClientBounds(element, domHelper, viewerOptions) {
    var x = 0;
    var y = 0;
    var width = 0;
    var height = 0;
    var svgElementId = domHelper.createUniqueDOMElementId(element);
    var svgElement = document.getElementById(svgElementId);
    if (svgElement) {
        var rect = svgElement.getBoundingClientRect();
        var scroll_1 = browser_1.getWindowScroll();
        x = rect.left + scroll_1.x;
        y = rect.top + scroll_1.y;
        width = rect.width;
        height = rect.height;
    }
    var container = document.getElementById(viewerOptions.baseDiv);
    if (container) {
        while (container.offsetParent instanceof HTMLElement
            && (container = container.offsetParent)) {
            x -= container.offsetLeft;
            y -= container.offsetTop;
        }
    }
    return { x: x, y: y, width: width, height: height };
}
exports.getAbsoluteClientBounds = getAbsoluteClientBounds;
function findChildrenAtPosition(parent, point) {
    var matches = [];
    doFindChildrenAtPosition(parent, point, matches);
    return matches;
}
exports.findChildrenAtPosition = findChildrenAtPosition;
function doFindChildrenAtPosition(parent, point, matches) {
    parent.children.forEach(function (child) {
        if (isBoundsAware(child) && geometry_1.includes(child.bounds, point))
            matches.push(child);
        if (child instanceof smodel_1.SParentElement) {
            var newPoint = child.parentToLocal(point);
            doFindChildrenAtPosition(child, newPoint, matches);
        }
    });
}
/**
 * Abstract class for elements with a position and a size.
 */
var SShapeElement = /** @class */ (function (_super) {
    __extends(SShapeElement, _super);
    function SShapeElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.position = geometry_1.ORIGIN_POINT;
        _this.size = geometry_1.EMPTY_DIMENSION;
        return _this;
    }
    Object.defineProperty(SShapeElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: true,
        configurable: true
    });
    SShapeElement.prototype.localToParent = function (point) {
        var result = {
            x: point.x + this.position.x,
            y: point.y + this.position.y,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    };
    SShapeElement.prototype.parentToLocal = function (point) {
        var result = {
            x: point.x - this.position.x,
            y: point.y - this.position.y,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    };
    return SShapeElement;
}(smodel_1.SChildElement));
exports.SShapeElement = SShapeElement;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/resize.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/resize.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../../node_modules/sprotty/lib/base/animations/animation.js");
var ResizeAnimation = /** @class */ (function (_super) {
    __extends(ResizeAnimation, _super);
    function ResizeAnimation(model, elementResizes, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementResizes = elementResizes;
        _this.reverse = reverse;
        return _this;
    }
    ResizeAnimation.prototype.tween = function (t) {
        var _this = this;
        this.elementResizes.forEach(function (elementResize) {
            var element = elementResize.element;
            var newDimension = (_this.reverse) ? {
                width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,
                height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height
            } : {
                width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,
                height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height
            };
            element.bounds = {
                x: element.bounds.x,
                y: element.bounds.y,
                width: newDimension.width,
                height: newDimension.height
            };
        });
        return this.model;
    };
    return ResizeAnimation;
}(animation_1.Animation));
exports.ResizeAnimation = ResizeAnimation;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/stack-layout.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/stack-layout.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../../../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var StackLayouter = /** @class */ (function (_super) {
    __extends(StackLayouter, _super);
    function StackLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackLayouter.prototype.getChildrenSize = function (container, options, layouter) {
        var maxWidth = -1;
        var maxHeight = -1;
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    maxWidth = Math.max(maxWidth, bounds.width);
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    StackLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        var dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return currentOffset;
    };
    StackLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hAlign: 'center',
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    StackLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    StackLayouter.KIND = 'stack';
    return StackLayouter;
}(abstract_layout_1.AbstractLayout));
exports.StackLayouter = StackLayouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/vbox-layout.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/vbox-layout.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "../../../node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in vertical (top->bottom) direction.
 */
var VBoxLayouter = /** @class */ (function (_super) {
    __extends(VBoxLayouter, _super);
    function VBoxLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VBoxLayouter.prototype.getChildrenSize = function (container, containerOptions, layouter) {
        var maxWidth = -1;
        var maxHeight = 0;
        var isFirst = true;
        container.children.forEach(function (child) {
            if (model_1.isLayoutableChild(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.isValidDimension(bounds)) {
                    maxHeight += bounds.height;
                    if (isFirst)
                        isFirst = false;
                    else
                        maxHeight += containerOptions.vGap;
                    maxWidth = Math.max(maxWidth, bounds.width);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    VBoxLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: currentOffset.y + child.bounds.y - bounds.y,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x,
            y: currentOffset.y + bounds.height + containerOptions.vGap
        };
    };
    VBoxLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            vGap: 1,
            hAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    VBoxLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    VBoxLayouter.KIND = 'vbox';
    return VBoxLayouter;
}(abstract_layout_1.AbstractLayout));
exports.VBoxLayouter = VBoxLayouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/bounds/views.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/bounds/views.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var ShapeView = /** @class */ (function () {
    function ShapeView() {
    }
    /**
     * Check whether the given model element is in the current viewport. Use this method
     * in your `render` implementation to skip rendering in case the element is not visible.
     * This can greatly enhance performance for large models.
     */
    ShapeView.prototype.isVisible = function (model, context) {
        if (context.targetKind === 'hidden') {
            // Don't hide any element for hidden rendering
            return true;
        }
        if (!geometry_1.isValidDimension(model.bounds)) {
            // We should hide only if we know the element's bounds
            return true;
        }
        var ab = model_1.getAbsoluteBounds(model);
        var canvasBounds = model.root.canvasBounds;
        return ab.x <= canvasBounds.width
            && ab.x + ab.width >= 0
            && ab.y <= canvasBounds.height
            && ab.y + ab.height >= 0;
    };
    ShapeView = __decorate([
        inversify_1.injectable()
    ], ShapeView);
    return ShapeView;
}());
exports.ShapeView = ShapeView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/button/button-handler.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/button/button-handler.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var ButtonHandlerRegistry = /** @class */ (function (_super) {
    __extends(ButtonHandlerRegistry, _super);
    function ButtonHandlerRegistry(buttonHandlerFactories) {
        var _this = _super.call(this) || this;
        buttonHandlerFactories.forEach(function (factory) { return _this.register(factory.TYPE, new factory()); });
        return _this;
    }
    ButtonHandlerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IButtonHandler)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ButtonHandlerRegistry);
    return ButtonHandlerRegistry;
}(registry_1.InstanceRegistry));
exports.ButtonHandlerRegistry = ButtonHandlerRegistry;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/button/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/button/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var button_handler_1 = __webpack_require__(/*! ./button-handler */ "../../../node_modules/sprotty/lib/features/button/button-handler.js");
var buttonModule = new inversify_1.ContainerModule(function (bind) {
    bind(button_handler_1.ButtonHandlerRegistry).toSelf().inSingletonScope();
});
exports.default = buttonModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/button/model.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/button/model.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../fade/model */ "../../../node_modules/sprotty/lib/features/fade/model.js");
var SButton = /** @class */ (function (_super) {
    __extends(SButton, _super);
    function SButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.enabled = true;
        return _this;
    }
    SButton.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutableChildFeature, model_2.fadeFeature];
    return SButton;
}(model_1.SShapeElement));
exports.SButton = SButton;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/command-palette/action-providers.js":
/*!**************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/command-palette/action-providers.js ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
var model_1 = __webpack_require__(/*! ../nameable/model */ "../../../node_modules/sprotty/lib/features/nameable/model.js");
var select_1 = __webpack_require__(/*! ../select/select */ "../../../node_modules/sprotty/lib/features/select/select.js");
var center_fit_1 = __webpack_require__(/*! ../viewport/center-fit */ "../../../node_modules/sprotty/lib/features/viewport/center-fit.js");
var CommandPaletteActionProviderRegistry = /** @class */ (function () {
    function CommandPaletteActionProviderRegistry(actionProviders) {
        if (actionProviders === void 0) { actionProviders = []; }
        this.actionProviders = actionProviders;
    }
    CommandPaletteActionProviderRegistry.prototype.getActions = function (root, text, lastMousePosition, index) {
        var actionLists = this.actionProviders.map(function (provider) { return provider.getActions(root, text, lastMousePosition, index); });
        return Promise.all(actionLists).then(function (p) { return p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }); });
    };
    CommandPaletteActionProviderRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.ICommandPaletteActionProvider)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], CommandPaletteActionProviderRegistry);
    return CommandPaletteActionProviderRegistry;
}());
exports.CommandPaletteActionProviderRegistry = CommandPaletteActionProviderRegistry;
var RevealNamedElementActionProvider = /** @class */ (function () {
    function RevealNamedElementActionProvider(logger) {
        this.logger = logger;
    }
    RevealNamedElementActionProvider.prototype.getActions = function (root, text, lastMousePosition, index) {
        if (index !== undefined && index % 2 === 0)
            return Promise.resolve(this.createSelectActions(root));
        else
            return Promise.resolve([new action_1.LabeledAction("Select all", [new select_1.SelectAllAction()])]);
    };
    RevealNamedElementActionProvider.prototype.createSelectActions = function (modelRoot) {
        var nameables = iterable_1.toArray(modelRoot.index.all().filter(function (element) { return model_1.isNameable(element); }));
        return nameables.map(function (nameable) { return new action_1.LabeledAction("Reveal " + model_1.name(nameable), [new select_1.SelectAction([nameable.id]), new center_fit_1.CenterAction([nameable.id])], 'fa-eye'); });
    };
    RevealNamedElementActionProvider = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.ILogger)),
        __metadata("design:paramtypes", [Object])
    ], RevealNamedElementActionProvider);
    return RevealNamedElementActionProvider;
}());
exports.RevealNamedElementActionProvider = RevealNamedElementActionProvider;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/command-palette/command-palette.js":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/command-palette/command-palette.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
var ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "../../../node_modules/sprotty/lib/base/views/dom-helper.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var action_providers_1 = __webpack_require__(/*! ./action-providers */ "../../../node_modules/sprotty/lib/features/command-palette/action-providers.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
// import of function autocomplete(...) doesn't work
// see also https://github.com/kraaden/autocomplete/issues/13
// this is a workaround to still get the function including type support
var configureAutocomplete = __webpack_require__(/*! autocompleter */ "../../../node_modules/autocompleter/autocomplete.js");
var CommandPalette = /** @class */ (function (_super) {
    __extends(CommandPalette, _super);
    function CommandPalette() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loadingIndicatorClasses = ['loading'];
        _this.xOffset = 20;
        _this.yOffset = 20;
        _this.defaultWidth = 400;
        _this.debounceWaitMs = 100;
        _this.noCommandsMsg = "No commands available";
        _this.paletteIndex = 0;
        return _this;
    }
    CommandPalette_1 = CommandPalette;
    CommandPalette.prototype.id = function () { return CommandPalette_1.ID; };
    CommandPalette.prototype.containerClass = function () { return "command-palette"; };
    CommandPalette.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        _super.prototype.show.apply(this, __spreadArrays([root], contextElementIds));
        this.paletteIndex = 0;
        this.contextActions = undefined;
        this.inputElement.value = "";
        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));
        this.inputElement.focus();
    };
    CommandPalette.prototype.initializeContents = function (containerElement) {
        var _this = this;
        containerElement.style.position = "absolute";
        this.inputElement = document.createElement('input');
        this.inputElement.style.width = '100%';
        this.inputElement.addEventListener('keydown', function (event) { return _this.hideIfEscapeEvent(event); });
        this.inputElement.addEventListener('keydown', function (event) { return _this.cylceIfInvokePaletteKey(event); });
        this.inputElement.onblur = function () { return window.setTimeout(function () { return _this.hide(); }, 200); };
        containerElement.appendChild(this.inputElement);
    };
    CommandPalette.prototype.hideIfEscapeEvent = function (event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            this.hide();
        }
    };
    CommandPalette.prototype.cylceIfInvokePaletteKey = function (event) {
        if (CommandPalette_1.isInvokePaletteKey(event)) {
            this.cycle();
        }
    };
    CommandPalette.prototype.cycle = function () {
        this.contextActions = undefined;
        this.paletteIndex++;
    };
    CommandPalette.prototype.onBeforeShow = function (containerElement, root) {
        var selectedElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            selectedElementIds[_i - 2] = arguments[_i];
        }
        var x = this.xOffset;
        var y = this.yOffset;
        var selectedElements = iterable_1.toArray(root.index.all().filter(function (e) { return model_2.isSelectable(e) && e.selected; }));
        if (selectedElements.length === 1) {
            var bounds = model_1.getAbsoluteClientBounds(selectedElements[0], this.domHelper, this.viewerOptions);
            x += bounds.x + bounds.width;
            y += bounds.y;
        }
        else {
            var bounds = model_1.getAbsoluteClientBounds(root, this.domHelper, this.viewerOptions);
            x += bounds.x;
            y += bounds.y;
        }
        containerElement.style.left = x + "px";
        containerElement.style.top = y + "px";
        containerElement.style.width = this.defaultWidth + "px";
    };
    CommandPalette.prototype.autocompleteSettings = function (root) {
        var _this = this;
        return {
            input: this.inputElement,
            emptyMsg: this.noCommandsMsg,
            className: "command-palette-suggestions",
            debounceWaitMs: this.debounceWaitMs,
            showOnFocus: true,
            minLength: -1,
            fetch: function (text, update) {
                return _this.updateAutoCompleteActions(update, text, root);
            },
            onSelect: function (item) { return _this.onSelect(item); },
            render: function (item, currentValue) {
                return _this.renderLabeledActionSuggestion(item, currentValue);
            },
            customize: function (input, inputRect, container, maxHeight) {
                _this.customizeSuggestionContainer(container, inputRect, maxHeight);
            }
        };
    };
    CommandPalette.prototype.onSelect = function (item) {
        this.executeAction(item);
        this.hide();
    };
    CommandPalette.prototype.updateAutoCompleteActions = function (update, text, root) {
        var _this = this;
        this.onLoading();
        if (this.contextActions) {
            update(this.filterActions(text, this.contextActions));
            this.onLoaded('success');
        }
        else {
            this.actionProviderRegistry
                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)
                .then(function (actions) {
                _this.contextActions = actions;
                update(_this.filterActions(text, actions));
                _this.onLoaded('success');
            })
                .catch(function (reason) {
                _this.logger.error(_this, "Failed to obtain actions from command palette action providers", reason);
                _this.onLoaded('error');
            });
        }
    };
    CommandPalette.prototype.onLoading = function () {
        var _a;
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        (_a = this.loadingIndicator.classList).add.apply(_a, this.loadingIndicatorClasses);
        this.containerElement.appendChild(this.loadingIndicator);
    };
    CommandPalette.prototype.onLoaded = function (success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
    };
    CommandPalette.prototype.renderLabeledActionSuggestion = function (item, value) {
        var itemElement = document.createElement("div");
        var wordMatcher = espaceForRegExp(value).split(" ").join("|");
        var regex = new RegExp(wordMatcher, "gi");
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        itemElement.innerHTML += item.label.replace(regex, function (match) { return "<em>" + match + "</em>"; });
        return itemElement;
    };
    CommandPalette.prototype.renderIcon = function (itemElement, icon) {
        itemElement.innerHTML += "<span class=\"icon fa " + icon + "\"></span>";
    };
    CommandPalette.prototype.filterActions = function (filterText, actions) {
        return iterable_1.toArray(actions.filter(function (action) {
            var label = action.label.toLowerCase();
            var searchWords = filterText.split(' ');
            return searchWords.every(function (word) { return label.indexOf(word.toLowerCase()) !== -1; });
        }));
    };
    CommandPalette.prototype.customizeSuggestionContainer = function (container, inputRect, maxHeight) {
        // move container into our command palette container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
        }
    };
    CommandPalette.prototype.hide = function () {
        _super.prototype.hide.call(this);
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    };
    CommandPalette.prototype.executeAction = function (input) {
        var _this = this;
        this.actionDispatcherProvider()
            .then(function (actionDispatcher) { return actionDispatcher.dispatchAll(toActionArray(input)); })
            .catch(function (reason) { return _this.logger.error(_this, 'No action dispatcher available to execute command palette action', reason); });
    };
    var CommandPalette_1;
    CommandPalette.ID = "command-palette";
    CommandPalette.isInvokePaletteKey = function (event) { return keyboard_1.matchesKeystroke(event, 'Space', 'ctrl'); };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], CommandPalette.prototype, "actionDispatcherProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ICommandPaletteActionProviderRegistry),
        __metadata("design:type", action_providers_1.CommandPaletteActionProviderRegistry)
    ], CommandPalette.prototype, "actionProviderRegistry", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], CommandPalette.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], CommandPalette.prototype, "domHelper", void 0);
    __decorate([
        inversify_1.inject(mouse_tool_1.MousePositionTracker),
        __metadata("design:type", mouse_tool_1.MousePositionTracker)
    ], CommandPalette.prototype, "mousePositionTracker", void 0);
    CommandPalette = CommandPalette_1 = __decorate([
        inversify_1.injectable()
    ], CommandPalette);
    return CommandPalette;
}(ui_extension_1.AbstractUIExtension));
exports.CommandPalette = CommandPalette;
function toActionArray(input) {
    if (action_1.isLabeledAction(input)) {
        return input.actions;
    }
    else if (action_1.isAction(input)) {
        return [input];
    }
    return [];
}
function espaceForRegExp(value) {
    return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
}
var CommandPaletteKeyListener = /** @class */ (function (_super) {
    __extends(CommandPaletteKeyListener, _super);
    function CommandPaletteKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommandPaletteKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            return [new ui_extension_registry_1.SetUIExtensionVisibilityAction(CommandPalette.ID, false, [])];
        }
        else if (CommandPalette.isInvokePaletteKey(event)) {
            var selectedElements = iterable_1.toArray(element.index.all().filter(function (e) { return model_2.isSelectable(e) && e.selected; }).map(function (e) { return e.id; }));
            return [new ui_extension_registry_1.SetUIExtensionVisibilityAction(CommandPalette.ID, true, selectedElements)];
        }
        return [];
    };
    return CommandPaletteKeyListener;
}(key_tool_1.KeyListener));
exports.CommandPaletteKeyListener = CommandPaletteKeyListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/command-palette/di.config.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/command-palette/di.config.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var action_providers_1 = __webpack_require__(/*! ./action-providers */ "../../../node_modules/sprotty/lib/features/command-palette/action-providers.js");
var command_palette_1 = __webpack_require__(/*! ./command-palette */ "../../../node_modules/sprotty/lib/features/command-palette/command-palette.js");
var commandPaletteModule = new inversify_1.ContainerModule(function (bind) {
    bind(command_palette_1.CommandPalette).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(command_palette_1.CommandPalette);
    bind(types_1.TYPES.KeyListener).to(command_palette_1.CommandPaletteKeyListener);
    bind(action_providers_1.CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ICommandPaletteActionProviderRegistry).toService(action_providers_1.CommandPaletteActionProviderRegistry);
});
exports.default = commandPaletteModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/context-menu/context-menu-service.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/context-menu/context-menu-service.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function toAnchor(anchor) {
    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;
}
exports.toAnchor = toAnchor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/context-menu/di.config.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/context-menu/di.config.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "../../../node_modules/sprotty/lib/features/context-menu/menu-providers.js");
var mouse_listener_1 = __webpack_require__(/*! ./mouse-listener */ "../../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var contextMenuModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IContextMenuServiceProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve, reject) {
                if (ctx.container.isBound(types_1.TYPES.IContextMenuService)) {
                    resolve(ctx.container.get(types_1.TYPES.IContextMenuService));
                }
                else {
                    reject();
                }
            });
        };
    });
    bind(types_1.TYPES.MouseListener).to(mouse_listener_1.ContextMenuMouseListener);
    bind(types_1.TYPES.IContextMenuProviderRegistry).to(menu_providers_1.ContextMenuProviderRegistry);
});
exports.default = contextMenuModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/context-menu/menu-providers.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/context-menu/menu-providers.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "../../../node_modules/sprotty/lib/features/edit/delete.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var ContextMenuProviderRegistry = /** @class */ (function () {
    function ContextMenuProviderRegistry(menuProviders) {
        if (menuProviders === void 0) { menuProviders = []; }
        this.menuProviders = menuProviders;
    }
    ContextMenuProviderRegistry.prototype.getItems = function (root, lastMousePosition) {
        var menues = this.menuProviders.map(function (provider) { return provider.getItems(root, lastMousePosition); });
        return Promise.all(menues).then(this.flattenAndRestructure);
    };
    ContextMenuProviderRegistry.prototype.flattenAndRestructure = function (p) {
        var menuItems = p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }, []);
        var menuItemsWithParentId = menuItems.filter(function (menuItem) { return menuItem.parentId; });
        var _loop_1 = function (menuItem) {
            if (menuItem.parentId) {
                var fragments = menuItem.parentId.split(".");
                var matchingParent = undefined;
                var nextParents = menuItems;
                var _loop_2 = function (fragment) {
                    matchingParent = nextParents.find(function (item) { return fragment === item.id; });
                    if (matchingParent && matchingParent.children)
                        nextParents = matchingParent.children;
                };
                for (var _i = 0, fragments_1 = fragments; _i < fragments_1.length; _i++) {
                    var fragment = fragments_1[_i];
                    _loop_2(fragment);
                }
                if (matchingParent) {
                    if (matchingParent.children) {
                        matchingParent.children.push(menuItem);
                    }
                    else {
                        matchingParent.children = [menuItem];
                    }
                    menuItems = menuItems.filter(function (item) { return item !== menuItem; });
                }
            }
        };
        for (var _i = 0, menuItemsWithParentId_1 = menuItemsWithParentId; _i < menuItemsWithParentId_1.length; _i++) {
            var menuItem = menuItemsWithParentId_1[_i];
            _loop_1(menuItem);
        }
        return menuItems;
    };
    ContextMenuProviderRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IContextMenuItemProvider)), __param(0, inversify_1.optional()),
        __metadata("design:paramtypes", [Array])
    ], ContextMenuProviderRegistry);
    return ContextMenuProviderRegistry;
}());
exports.ContextMenuProviderRegistry = ContextMenuProviderRegistry;
var DeleteContextMenuItemProvider = /** @class */ (function () {
    function DeleteContextMenuItemProvider() {
    }
    DeleteContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var selectedElements = Array.from(root.index.all().filter(model_1.isSelected).filter(delete_1.isDeletable));
        return Promise.resolve([
            {
                id: "delete",
                label: "Delete",
                sortString: "d",
                group: "edit",
                actions: [new delete_1.DeleteElementAction(selectedElements.map(function (e) { return e.id; }))],
                isEnabled: function () { return selectedElements.length > 0; }
            }
        ]);
    };
    DeleteContextMenuItemProvider = __decorate([
        inversify_1.injectable()
    ], DeleteContextMenuItemProvider);
    return DeleteContextMenuItemProvider;
}());
exports.DeleteContextMenuItemProvider = DeleteContextMenuItemProvider;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js":
/*!*********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/context-menu/mouse-listener.js ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "../../../node_modules/sprotty/lib/features/context-menu/menu-providers.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var ContextMenuMouseListener = /** @class */ (function (_super) {
    __extends(ContextMenuMouseListener, _super);
    function ContextMenuMouseListener(contextMenuService, menuProvider) {
        var _this = _super.call(this) || this;
        _this.contextMenuService = contextMenuService;
        _this.menuProvider = menuProvider;
        return _this;
    }
    ContextMenuMouseListener.prototype.mouseDown = function (target, event) {
        if (event.button === 2 && this.contextMenuService && this.menuProvider) {
            var mousePosition_1 = { x: event.x, y: event.y };
            var isTargetSelected_1 = false;
            var selectableTarget_1 = smodel_utils_1.findParentByFeature(target, model_1.isSelectable);
            if (selectableTarget_1) {
                isTargetSelected_1 = selectableTarget_1.selected;
                selectableTarget_1.selected = true;
            }
            var restoreSelection_1 = function () { if (selectableTarget_1)
                selectableTarget_1.selected = isTargetSelected_1; };
            Promise.all([this.contextMenuService(), this.menuProvider.getItems(target.root, mousePosition_1)])
                .then(function (_a) {
                var menuService = _a[0], menuItems = _a[1];
                return menuService.show(menuItems, mousePosition_1, restoreSelection_1);
            });
        }
        return [];
    };
    ContextMenuMouseListener = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.IContextMenuServiceProvider)), __param(0, inversify_1.optional()),
        __param(1, inversify_1.inject(types_1.TYPES.IContextMenuProviderRegistry)), __param(1, inversify_1.optional()),
        __metadata("design:paramtypes", [Function, menu_providers_1.ContextMenuProviderRegistry])
    ], ContextMenuMouseListener);
    return ContextMenuMouseListener;
}(mouse_tool_1.MouseListener));
exports.ContextMenuMouseListener = ContextMenuMouseListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/decoration/decoration-placer.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/decoration/decoration-placer.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/decoration/model.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_2 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var DecorationPlacer = /** @class */ (function () {
    function DecorationPlacer() {
    }
    DecorationPlacer.prototype.decorate = function (vnode, element) {
        if (model_1.isDecoration(element)) {
            var position = this.getPosition(element);
            var translate = 'translate(' + position.x + ', ' + position.y + ')';
            vnode_utils_1.setAttr(vnode, 'transform', translate);
        }
        return vnode;
    };
    DecorationPlacer.prototype.getPosition = function (element) {
        if (element instanceof smodel_1.SChildElement && element.parent instanceof model_3.SRoutableElement) {
            var router = this.edgeRouterRegistry.get(element.parent.routerKind);
            var route = router.route(element.parent);
            if (route.length > 1) {
                var index = Math.floor(0.5 * (route.length - 1));
                var offset = model_2.isSizeable(element)
                    ? {
                        x: -0.5 * element.bounds.width,
                        y: -0.5 * element.bounds.width
                    }
                    : geometry_1.ORIGIN_POINT;
                return {
                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,
                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y
                };
            }
        }
        if (model_2.isSizeable(element))
            return {
                x: -0.666 * element.bounds.width,
                y: -0.666 * element.bounds.height
            };
        return geometry_1.ORIGIN_POINT;
    };
    DecorationPlacer.prototype.postUpdate = function () {
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], DecorationPlacer.prototype, "edgeRouterRegistry", void 0);
    DecorationPlacer = __decorate([
        inversify_1.injectable()
    ], DecorationPlacer);
    return DecorationPlacer;
}());
exports.DecorationPlacer = DecorationPlacer;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/decoration/di.config.js":
/*!**************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/decoration/di.config.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var view_1 = __webpack_require__(/*! ../../base/views/view */ "../../../node_modules/sprotty/lib/base/views/view.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/decoration/model.js");
var views_1 = __webpack_require__(/*! ./views */ "../../../node_modules/sprotty/lib/features/decoration/views.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "../../../node_modules/sprotty/lib/features/decoration/decoration-placer.js");
var decorationModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    view_1.configureModelElement({ bind: bind, isBound: isBound }, 'marker', model_1.SIssueMarker, views_1.IssueMarkerView);
    bind(decoration_placer_1.DecorationPlacer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(decoration_placer_1.DecorationPlacer);
});
exports.default = decorationModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/decoration/model.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/decoration/model.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../hover/model */ "../../../node_modules/sprotty/lib/features/hover/model.js");
var model_2 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
exports.decorationFeature = Symbol('decorationFeature');
function isDecoration(e) {
    return e.hasFeature(exports.decorationFeature);
}
exports.isDecoration = isDecoration;
var SDecoration = /** @class */ (function (_super) {
    __extends(SDecoration, _super);
    function SDecoration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SDecoration.DEFAULT_FEATURES = [exports.decorationFeature, model_2.boundsFeature, model_1.hoverFeedbackFeature, model_1.popupFeature];
    return SDecoration;
}(model_2.SShapeElement));
exports.SDecoration = SDecoration;
var SIssueMarker = /** @class */ (function (_super) {
    __extends(SIssueMarker, _super);
    function SIssueMarker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SIssueMarker;
}(SDecoration));
exports.SIssueMarker = SIssueMarker;
var SIssue = /** @class */ (function () {
    function SIssue() {
    }
    return SIssue;
}());
exports.SIssue = SIssue;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/decoration/views.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/decoration/views.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var IssueMarkerView = /** @class */ (function () {
    function IssueMarkerView() {
    }
    IssueMarkerView.prototype.render = function (marker, context) {
        var scale = 16 / 1792;
        var trafo = "scale(" + scale + ", " + scale + ")";
        var maxSeverity = this.getMaxSeverity(marker);
        var group = snabbdom_jsx_1.svg("g", { "class-sprotty-issue": true },
            snabbdom_jsx_1.svg("g", { transform: trafo },
                snabbdom_jsx_1.svg("path", { d: this.getPath(maxSeverity) })));
        vnode_utils_1.setClass(group, 'sprotty-' + maxSeverity, true);
        return group;
    };
    IssueMarkerView.prototype.getMaxSeverity = function (marker) {
        var currentSeverity = 'info';
        for (var _i = 0, _a = marker.issues.map(function (s) { return s.severity; }); _i < _a.length; _i++) {
            var severity = _a[_i];
            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))
                currentSeverity = severity;
        }
        return currentSeverity;
    };
    IssueMarkerView.prototype.getPath = function (severity) {
        switch (severity) {
            case 'error':
            case 'warning':
                // tslint:disable-next-line:max-line-length
                return "M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z";
            case 'info':
                // tslint:disable-next-line:max-line-length
                return "M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z";
        }
    };
    IssueMarkerView = __decorate([
        inversify_1.injectable()
    ], IssueMarkerView);
    return IssueMarkerView;
}());
exports.IssueMarkerView = IssueMarkerView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edge-layout/di.config.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edge-layout/di.config.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var edge_layout_1 = __webpack_require__(/*! ./edge-layout */ "../../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js");
var edgeLayoutModule = new inversify_1.ContainerModule(function (bind) {
    bind(edge_layout_1.EdgeLayoutPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
});
exports.default = edgeLayoutModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js":
/*!*****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edge-layout/edge-layout.js ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "../../../node_modules/sprotty/lib/graph/sgraph.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/edge-layout/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var EdgeLayoutPostprocessor = /** @class */ (function () {
    function EdgeLayoutPostprocessor() {
    }
    EdgeLayoutPostprocessor.prototype.decorate = function (vnode, element) {
        if (model_2.isEdgeLayoutable(element) && element.parent instanceof sgraph_1.SEdge) {
            if (element.bounds !== geometry_1.EMPTY_BOUNDS) {
                var placement = this.getEdgePlacement(element);
                var edge = element.parent;
                var position = Math.min(1, Math.max(0, placement.position));
                var router = this.edgeRouterRegistry.get(edge.routerKind);
                var pointOnEdge = router.pointAt(edge, position);
                var derivativeOnEdge = router.derivativeAt(edge, position);
                var transform = '';
                if (pointOnEdge && derivativeOnEdge) {
                    transform += "translate(" + pointOnEdge.x + ", " + pointOnEdge.y + ")";
                    var angle = geometry_1.toDegrees(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));
                    if (placement.rotate) {
                        var flippedAngle = angle;
                        if (Math.abs(angle) > 90) {
                            if (angle < 0)
                                flippedAngle += 180;
                            else if (angle > 0)
                                flippedAngle -= 180;
                        }
                        transform += " rotate(" + flippedAngle + ")";
                        var alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);
                        transform += " translate(" + alignment.x + ", " + alignment.y + ")";
                    }
                    else {
                        var alignment = this.getAlignment(element, placement, angle);
                        transform += " translate(" + alignment.x + ", " + alignment.y + ")";
                    }
                    vnode_utils_1.setAttr(vnode, 'transform', transform);
                }
            }
        }
        return vnode;
    };
    EdgeLayoutPostprocessor.prototype.getRotatedAlignment = function (element, placement, flip) {
        var x = model_1.isAlignable(element) ? element.alignment.x : 0;
        var y = model_1.isAlignable(element) ? element.alignment.y : 0;
        var bounds = element.bounds;
        if (placement.side === 'on')
            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height };
        if (flip) {
            if (placement.position < 0.3333333)
                x -= bounds.width + placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x += placement.offset;
            switch (placement.side) {
                case 'left':
                case 'bottom':
                    y -= placement.offset + bounds.height;
                    break;
                case 'right':
                case 'top':
                    y += placement.offset;
            }
        }
        else {
            if (placement.position < 0.3333333)
                x += placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x -= bounds.width + placement.offset;
            switch (placement.side) {
                case 'right':
                case 'bottom':
                    y += -placement.offset - bounds.height;
                    break;
                case 'left':
                case 'top':
                    y += placement.offset;
            }
        }
        return { x: x, y: y };
    };
    EdgeLayoutPostprocessor.prototype.getEdgePlacement = function (element) {
        var current = element;
        var allPlacements = [];
        while (current !== undefined) {
            var placement = current.edgePlacement;
            if (placement !== undefined)
                allPlacements.push(placement);
            if (current instanceof smodel_1.SChildElement)
                current = current.parent;
            else
                break;
        }
        return allPlacements.reverse().reduce(function (a, b) { return __assign(__assign({}, a), b); }, model_2.DEFAULT_EDGE_PLACEMENT);
    };
    EdgeLayoutPostprocessor.prototype.getAlignment = function (label, placement, angle) {
        var bounds = label.bounds;
        var x = model_1.isAlignable(label) ? label.alignment.x - bounds.width : 0;
        var y = model_1.isAlignable(label) ? label.alignment.y - bounds.height : 0;
        if (placement.side === 'on')
            return { x: x + 0.5 * bounds.height, y: y + 0.5 * bounds.height };
        var quadrant = this.getQuadrant(angle);
        var midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };
        var topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };
        var topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset };
        var midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };
        var bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset };
        var bottomLeft = { x: placement.offset, y: y - placement.offset };
        switch (placement.side) {
            case 'left':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return geometry_1.linear(topRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return geometry_1.linear(bottomLeft, topLeft, quadrant.position);
                }
                break;
            case 'right':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return geometry_1.linear(bottomLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return geometry_1.linear(topRight, bottomRight, quadrant.position);
                }
                break;
            case 'top':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                }
                break;
            case 'bottom':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                }
                break;
        }
        return { x: 0, y: 0 };
    };
    EdgeLayoutPostprocessor.prototype.getQuadrant = function (angle) {
        if (Math.abs(angle) > 135)
            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };
        else if (angle < -45)
            return { orientation: 'north', position: (angle + 135) / 90 };
        else if (angle < 45)
            return { orientation: 'east', position: (angle + 45) / 90 };
        else
            return { orientation: 'south', position: (angle - 45) / 90 };
    };
    EdgeLayoutPostprocessor.prototype.linearFlip = function (p0, p1, p2, p3, position) {
        return position < 0.5 ? geometry_1.linear(p0, p1, 2 * position) : geometry_1.linear(p2, p3, 2 * position - 1);
    };
    EdgeLayoutPostprocessor.prototype.postUpdate = function () { };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], EdgeLayoutPostprocessor.prototype, "edgeRouterRegistry", void 0);
    EdgeLayoutPostprocessor = __decorate([
        inversify_1.injectable()
    ], EdgeLayoutPostprocessor);
    return EdgeLayoutPostprocessor;
}());
exports.EdgeLayoutPostprocessor = EdgeLayoutPostprocessor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edge-layout/model.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edge-layout/model.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
exports.edgeLayoutFeature = Symbol('edgeLayout');
function isEdgeLayoutable(element) {
    return element instanceof smodel_1.SChildElement
        && element.parent instanceof model_2.SRoutableElement
        && 'edgePlacement' in element
        && model_1.isBoundsAware(element)
        && element.hasFeature(exports.edgeLayoutFeature);
}
exports.isEdgeLayoutable = isEdgeLayoutable;
var EdgePlacement = /** @class */ (function (_super) {
    __extends(EdgePlacement, _super);
    function EdgePlacement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EdgePlacement;
}(Object));
exports.EdgePlacement = EdgePlacement;
exports.DEFAULT_EDGE_PLACEMENT = {
    rotate: true,
    side: 'top',
    position: 0.5,
    offset: 7
};


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/create-on-drag.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/create-on-drag.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.creatingOnDragFeature = Symbol('creatingOnDragFeature');
function isCreatingOnDrag(element) {
    return element.hasFeature(exports.creatingOnDragFeature) && element.createAction !== undefined;
}
exports.isCreatingOnDrag = isCreatingOnDrag;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/create.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/create.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var CreateElementAction = /** @class */ (function () {
    function CreateElementAction(containerId, elementSchema) {
        this.containerId = containerId;
        this.elementSchema = elementSchema;
        this.kind = CreateElementAction.KIND;
    }
    CreateElementAction.KIND = "createElement";
    return CreateElementAction;
}());
exports.CreateElementAction = CreateElementAction;
var CreateElementCommand = /** @class */ (function (_super) {
    __extends(CreateElementCommand, _super);
    function CreateElementCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    CreateElementCommand.prototype.execute = function (context) {
        var container = context.root.index.getById(this.action.containerId);
        if (container instanceof smodel_1.SParentElement) {
            this.container = container;
            this.newElement = context.modelFactory.createElement(this.action.elementSchema);
            this.container.add(this.newElement);
        }
        return context.root;
    };
    CreateElementCommand.prototype.undo = function (context) {
        this.container.remove(this.newElement);
        return context.root;
    };
    CreateElementCommand.prototype.redo = function (context) {
        this.container.add(this.newElement);
        return context.root;
    };
    CreateElementCommand.KIND = CreateElementAction.KIND;
    CreateElementCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [CreateElementAction])
    ], CreateElementCommand);
    return CreateElementCommand;
}(command_1.Command));
exports.CreateElementCommand = CreateElementCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/delete.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/delete.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
exports.deletableFeature = Symbol('deletableFeature');
function isDeletable(element) {
    return element instanceof smodel_1.SChildElement && element.hasFeature(exports.deletableFeature);
}
exports.isDeletable = isDeletable;
var DeleteElementAction = /** @class */ (function () {
    function DeleteElementAction(elementIds) {
        this.elementIds = elementIds;
        this.kind = DeleteElementAction.KIND;
    }
    DeleteElementAction.KIND = 'delete';
    return DeleteElementAction;
}());
exports.DeleteElementAction = DeleteElementAction;
var ResolvedDelete = /** @class */ (function () {
    function ResolvedDelete() {
    }
    return ResolvedDelete;
}());
exports.ResolvedDelete = ResolvedDelete;
var DeleteElementCommand = /** @class */ (function (_super) {
    __extends(DeleteElementCommand, _super);
    function DeleteElementCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.resolvedDeletes = [];
        return _this;
    }
    DeleteElementCommand.prototype.execute = function (context) {
        var index = context.root.index;
        for (var _i = 0, _a = this.action.elementIds; _i < _a.length; _i++) {
            var id = _a[_i];
            var element = index.getById(id);
            if (element && isDeletable(element)) {
                this.resolvedDeletes.push({ child: element, parent: element.parent });
                element.parent.remove(element);
            }
        }
        return context.root;
    };
    DeleteElementCommand.prototype.undo = function (context) {
        for (var _i = 0, _a = this.resolvedDeletes; _i < _a.length; _i++) {
            var resolvedDelete = _a[_i];
            resolvedDelete.parent.add(resolvedDelete.child);
        }
        return context.root;
    };
    DeleteElementCommand.prototype.redo = function (context) {
        for (var _i = 0, _a = this.resolvedDeletes; _i < _a.length; _i++) {
            var resolvedDelete = _a[_i];
            resolvedDelete.parent.remove(resolvedDelete.child);
        }
        return context.root;
    };
    DeleteElementCommand.KIND = DeleteElementAction.KIND;
    DeleteElementCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [DeleteElementAction])
    ], DeleteElementCommand);
    return DeleteElementCommand;
}(command_1.Command));
exports.DeleteElementCommand = DeleteElementCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/di.config.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/di.config.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "../../../node_modules/sprotty/lib/base/actions/action-handler.js");
var view_1 = __webpack_require__(/*! ../../base/views/view */ "../../../node_modules/sprotty/lib/base/views/view.js");
var model_1 = __webpack_require__(/*! ../../features/routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var svg_views_1 = __webpack_require__(/*! ../../lib/svg-views */ "../../../node_modules/sprotty/lib/lib/svg-views.js");
var delete_1 = __webpack_require__(/*! ./delete */ "../../../node_modules/sprotty/lib/features/edit/delete.js");
var edit_label_1 = __webpack_require__(/*! ./edit-label */ "../../../node_modules/sprotty/lib/features/edit/edit-label.js");
var edit_label_ui_1 = __webpack_require__(/*! ./edit-label-ui */ "../../../node_modules/sprotty/lib/features/edit/edit-label-ui.js");
var edit_routing_1 = __webpack_require__(/*! ./edit-routing */ "../../../node_modules/sprotty/lib/features/edit/edit-routing.js");
var reconnect_1 = __webpack_require__(/*! ./reconnect */ "../../../node_modules/sprotty/lib/features/edit/reconnect.js");
exports.edgeEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, edit_routing_1.SwitchEditModeCommand);
    command_registration_1.configureCommand(context, reconnect_1.ReconnectCommand);
    command_registration_1.configureCommand(context, delete_1.DeleteElementCommand);
    view_1.configureModelElement(context, 'dangling-anchor', model_1.SDanglingAnchor, svg_views_1.EmptyGroupView);
});
exports.labelEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.MouseListener).to(edit_label_1.EditLabelMouseListener);
    bind(types_1.TYPES.KeyListener).to(edit_label_1.EditLabelKeyListener);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, edit_label_1.ApplyLabelEditCommand);
});
exports.labelEditUiModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    action_handler_1.configureActionHandler(context, edit_label_1.EditLabelAction.KIND, edit_label_ui_1.EditLabelActionHandler);
    bind(edit_label_ui_1.EditLabelUI).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(edit_label_ui_1.EditLabelUI);
});


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/edit-label-ui.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/edit-label-ui.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/********************************************************************************
 * Copyright (c) 2019-2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
var ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "../../../node_modules/sprotty/lib/base/views/dom-helper.js");
var commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "../../../node_modules/sprotty/lib/model-source/commit-model.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var zoom_1 = __webpack_require__(/*! ../viewport/zoom */ "../../../node_modules/sprotty/lib/features/viewport/zoom.js");
var edit_label_1 = __webpack_require__(/*! ./edit-label */ "../../../node_modules/sprotty/lib/features/edit/edit-label.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/edit/model.js");
/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */
var EditLabelActionHandler = /** @class */ (function () {
    function EditLabelActionHandler() {
    }
    EditLabelActionHandler.prototype.handle = function (action) {
        if (edit_label_1.isEditLabelAction(action)) {
            return new ui_extension_registry_1.SetUIExtensionVisibilityAction(EditLabelUI.ID, true, [action.labelId]);
        }
    };
    EditLabelActionHandler = __decorate([
        inversify_1.injectable()
    ], EditLabelActionHandler);
    return EditLabelActionHandler;
}());
exports.EditLabelActionHandler = EditLabelActionHandler;
var EditLabelUI = /** @class */ (function (_super) {
    __extends(EditLabelUI, _super);
    function EditLabelUI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.validationTimeout = undefined;
        _this.isActive = false;
        _this.blockApplyEditOnInvalidInput = true;
        _this.isCurrentLabelValid = true;
        return _this;
    }
    EditLabelUI_1 = EditLabelUI;
    EditLabelUI.prototype.id = function () { return EditLabelUI_1.ID; };
    EditLabelUI.prototype.containerClass = function () { return "label-edit"; };
    Object.defineProperty(EditLabelUI.prototype, "labelId", {
        get: function () { return this.label ? this.label.id : 'unknown'; },
        enumerable: true,
        configurable: true
    });
    EditLabelUI.prototype.initializeContents = function (containerElement) {
        var _this = this;
        containerElement.style.position = 'absolute';
        this.inputElement = document.createElement('input');
        this.textAreaElement = document.createElement('textarea');
        [this.inputElement, this.textAreaElement].forEach(function (element) {
            element.onkeydown = function (event) { return _this.applyLabelEditOnEvent(event, 'Enter'); };
            _this.configureAndAdd(element, containerElement);
        });
    };
    EditLabelUI.prototype.configureAndAdd = function (element, containerElement) {
        var _this = this;
        element.style.visibility = 'hidden';
        element.style.position = 'absolute';
        element.style.top = '0px';
        element.style.left = '0px';
        element.addEventListener('keydown', function (event) { return _this.hideIfEscapeEvent(event); });
        element.addEventListener('keyup', function (event) { return _this.validateLabelIfContentChange(event, element.value); });
        element.addEventListener('blur', function () { return window.setTimeout(function () { return _this.applyLabelEdit(); }, 200); });
        containerElement.appendChild(element);
    };
    Object.defineProperty(EditLabelUI.prototype, "editControl", {
        get: function () {
            if (this.label && this.label.isMultiLine) {
                return this.textAreaElement;
            }
            return this.inputElement;
        },
        enumerable: true,
        configurable: true
    });
    EditLabelUI.prototype.hideIfEscapeEvent = function (event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            this.hide();
        }
    };
    EditLabelUI.prototype.applyLabelEditOnEvent = function (event, code) {
        var modifiers = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            modifiers[_i - 2] = arguments[_i];
        }
        if (keyboard_1.matchesKeystroke.apply(void 0, __spreadArrays([event, code ? code : 'Enter'], modifiers))) {
            event.preventDefault();
            this.applyLabelEdit();
        }
    };
    EditLabelUI.prototype.validateLabelIfContentChange = function (event, value) {
        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {
            this.previousLabelContent = value;
            this.performLabelValidation(event, this.editControl.value);
        }
    };
    EditLabelUI.prototype.applyLabelEdit = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.isActive) {
                            return [2 /*return*/];
                        }
                        if (!this.blockApplyEditOnInvalidInput) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.validateLabel(this.editControl.value)];
                    case 1:
                        result = _a.sent();
                        if ('error' === result.severity) {
                            this.editControl.focus();
                            return [2 /*return*/];
                        }
                        _a.label = 2;
                    case 2:
                        this.actionDispatcherProvider()
                            .then(function (actionDispatcher) { return actionDispatcher.dispatchAll([new edit_label_1.ApplyLabelEditAction(_this.labelId, _this.editControl.value), new commit_model_1.CommitModelAction()]); })
                            .catch(function (reason) { return _this.logger.error(_this, 'No action dispatcher available to execute apply label edit action', reason); });
                        this.hide();
                        return [2 /*return*/];
                }
            });
        });
    };
    EditLabelUI.prototype.performLabelValidation = function (event, value) {
        var _this = this;
        if (this.validationTimeout) {
            window.clearTimeout(this.validationTimeout);
        }
        this.validationTimeout = window.setTimeout(function () { return _this.validateLabel(value); }, 200);
    };
    EditLabelUI.prototype.validateLabel = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var result, reason_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.labelValidator && this.label)) return [3 /*break*/, 4];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.labelValidator.validate(value, this.label)];
                    case 2:
                        result = _a.sent();
                        this.isCurrentLabelValid = 'error' !== result.severity;
                        this.showValidationResult(result);
                        return [2 /*return*/, result];
                    case 3:
                        reason_1 = _a.sent();
                        this.logger.error(this, 'Error validating edited label', reason_1);
                        return [3 /*break*/, 4];
                    case 4:
                        this.isCurrentLabelValid = true;
                        return [2 /*return*/, { severity: 'ok', message: undefined }];
                }
            });
        });
    };
    EditLabelUI.prototype.showValidationResult = function (result) {
        this.clearValidationResult();
        if (this.validationDecorator) {
            this.validationDecorator.decorate(this.editControl, result);
        }
    };
    EditLabelUI.prototype.clearValidationResult = function () {
        if (this.validationDecorator) {
            this.validationDecorator.dispose(this.editControl);
        }
    };
    EditLabelUI.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {
            return;
        }
        _super.prototype.show.apply(this, __spreadArrays([root], contextElementIds));
        this.isActive = true;
    };
    EditLabelUI.prototype.hide = function () {
        this.editControl.style.visibility = 'hidden';
        _super.prototype.hide.call(this);
        this.clearValidationResult();
        this.isActive = false;
        this.isCurrentLabelValid = true;
        this.previousLabelContent = undefined;
        if (this.labelElement) {
            this.labelElement.style.visibility = 'visible';
        }
    };
    EditLabelUI.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        this.label = getEditableLabels(contextElementIds, root)[0];
        this.previousLabelContent = this.label.text;
        this.setPosition(containerElement);
        this.applyTextContents();
        this.applyFontStyling();
        this.editControl.style.visibility = 'visible';
        this.editControl.focus();
    };
    EditLabelUI.prototype.setPosition = function (containerElement) {
        var x = 0;
        var y = 0;
        var width = 100;
        var height = 20;
        if (this.label) {
            var zoom = zoom_1.getZoom(this.label);
            var bounds = model_1.getAbsoluteClientBounds(this.label, this.domHelper, this.viewerOptions);
            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;
            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;
            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;
            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;
        }
        containerElement.style.left = x + "px";
        containerElement.style.top = y + "px";
        containerElement.style.width = width + "px";
        this.editControl.style.width = width + "px";
        containerElement.style.height = height + "px";
        this.editControl.style.height = height + "px";
    };
    EditLabelUI.prototype.applyTextContents = function () {
        if (this.label) {
            this.editControl.value = this.label.text;
            if (this.editControl instanceof HTMLTextAreaElement) {
                this.editControl.selectionStart = 0;
                this.editControl.selectionEnd = 0;
                this.editControl.scrollTop = 0;
                this.editControl.scrollLeft = 0;
            }
            else {
                this.editControl.setSelectionRange(0, this.editControl.value.length);
            }
        }
    };
    EditLabelUI.prototype.applyFontStyling = function () {
        if (this.label) {
            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));
            if (this.labelElement) {
                this.labelElement.style.visibility = 'hidden';
                var style = window.getComputedStyle(this.labelElement);
                this.editControl.style.font = style.font;
                this.editControl.style.fontStyle = style.fontStyle;
                this.editControl.style.fontFamily = style.fontFamily;
                this.editControl.style.fontSize = scaledFont(style.fontSize, zoom_1.getZoom(this.label));
                this.editControl.style.fontWeight = style.fontWeight;
                this.editControl.style.lineHeight = style.lineHeight;
            }
        }
    };
    var EditLabelUI_1;
    EditLabelUI.ID = "editLabelUi";
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], EditLabelUI.prototype, "actionDispatcherProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "viewerOptions", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], EditLabelUI.prototype, "domHelper", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IEditLabelValidator), inversify_1.optional(),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "labelValidator", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IEditLabelValidationDecorator), inversify_1.optional(),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "validationDecorator", void 0);
    EditLabelUI = EditLabelUI_1 = __decorate([
        inversify_1.injectable()
    ], EditLabelUI);
    return EditLabelUI;
}(ui_extension_1.AbstractUIExtension));
exports.EditLabelUI = EditLabelUI;
function hasEditableLabel(contextElementIds, root) {
    return getEditableLabels(contextElementIds, root).length === 1;
}
function getEditableLabels(contextElementIds, root) {
    return contextElementIds.map(function (id) { return root.index.getById(id); }).filter(model_2.isEditableLabel);
}
function scaledFont(font, zoom) {
    return font.replace(/([0-9]+)/, function (match) {
        return String(Number.parseInt(match, 10) * zoom);
    });
}


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/edit-label.js":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/edit-label.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/edit/model.js");
var EditLabelAction = /** @class */ (function () {
    function EditLabelAction(labelId) {
        this.labelId = labelId;
        this.kind = EditLabelAction.KIND;
    }
    EditLabelAction.KIND = 'EditLabel';
    return EditLabelAction;
}());
exports.EditLabelAction = EditLabelAction;
function isEditLabelAction(element) {
    return action_1.isAction(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;
}
exports.isEditLabelAction = isEditLabelAction;
var ApplyLabelEditAction = /** @class */ (function () {
    function ApplyLabelEditAction(labelId, text) {
        this.labelId = labelId;
        this.text = text;
        this.kind = ApplyLabelEditAction.KIND;
    }
    ApplyLabelEditAction.KIND = 'applyLabelEdit';
    return ApplyLabelEditAction;
}());
exports.ApplyLabelEditAction = ApplyLabelEditAction;
var ResolvedLabelEdit = /** @class */ (function () {
    function ResolvedLabelEdit() {
    }
    return ResolvedLabelEdit;
}());
exports.ResolvedLabelEdit = ResolvedLabelEdit;
var ApplyLabelEditCommand = /** @class */ (function (_super) {
    __extends(ApplyLabelEditCommand, _super);
    function ApplyLabelEditCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ApplyLabelEditCommand.prototype.execute = function (context) {
        var index = context.root.index;
        var label = index.getById(this.action.labelId);
        if (label && model_2.isEditableLabel(label)) {
            this.resolvedLabelEdit = { label: label, oldLabel: label.text, newLabel: this.action.text };
            label.text = this.action.text;
        }
        return context.root;
    };
    ApplyLabelEditCommand.prototype.undo = function (context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;
        }
        return context.root;
    };
    ApplyLabelEditCommand.prototype.redo = function (context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;
        }
        return context.root;
    };
    ApplyLabelEditCommand.KIND = ApplyLabelEditAction.KIND;
    ApplyLabelEditCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [ApplyLabelEditAction])
    ], ApplyLabelEditCommand);
    return ApplyLabelEditCommand;
}(command_1.Command));
exports.ApplyLabelEditCommand = ApplyLabelEditCommand;
var EditLabelMouseListener = /** @class */ (function (_super) {
    __extends(EditLabelMouseListener, _super);
    function EditLabelMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditLabelMouseListener.prototype.doubleClick = function (target, event) {
        var editableLabel = getEditableLabel(target);
        if (editableLabel) {
            return [new EditLabelAction(editableLabel.id)];
        }
        return [];
    };
    return EditLabelMouseListener;
}(mouse_tool_1.MouseListener));
exports.EditLabelMouseListener = EditLabelMouseListener;
var EditLabelKeyListener = /** @class */ (function (_super) {
    __extends(EditLabelKeyListener, _super);
    function EditLabelKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditLabelKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'F2')) {
            var editableLabels = iterable_1.toArray(element.index.all()
                .filter(function (e) { return model_1.isSelectable(e) && e.selected; })).map(getEditableLabel)
                .filter(function (e) { return e !== undefined; });
            if (editableLabels.length === 1) {
                return [new EditLabelAction(editableLabels[0].id)];
            }
        }
        return [];
    };
    return EditLabelKeyListener;
}(key_tool_1.KeyListener));
exports.EditLabelKeyListener = EditLabelKeyListener;
function getEditableLabel(element) {
    if (model_2.isEditableLabel(element)) {
        return element;
    }
    else if (model_2.isWithEditableLabel(element) && element.editableLabel) {
        return element.editableLabel;
    }
    return undefined;
}
exports.getEditableLabel = getEditableLabel;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/edit-routing.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/edit-routing.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/edit/model.js");
var SwitchEditModeAction = /** @class */ (function () {
    function SwitchEditModeAction(elementsToActivate, elementsToDeactivate) {
        if (elementsToActivate === void 0) { elementsToActivate = []; }
        if (elementsToDeactivate === void 0) { elementsToDeactivate = []; }
        this.elementsToActivate = elementsToActivate;
        this.elementsToDeactivate = elementsToDeactivate;
        this.kind = SwitchEditModeAction.KIND;
    }
    SwitchEditModeAction.KIND = "switchEditMode";
    return SwitchEditModeAction;
}());
exports.SwitchEditModeAction = SwitchEditModeAction;
var SwitchEditModeCommand = /** @class */ (function (_super) {
    __extends(SwitchEditModeCommand, _super);
    function SwitchEditModeCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.elementsToActivate = [];
        _this.elementsToDeactivate = [];
        _this.handlesToRemove = [];
        return _this;
    }
    SwitchEditModeCommand.prototype.execute = function (context) {
        var _this = this;
        var index = context.root.index;
        this.action.elementsToActivate.forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined)
                _this.elementsToActivate.push(element);
        });
        this.action.elementsToDeactivate.forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined)
                _this.elementsToDeactivate.push(element);
            if (element instanceof model_1.SRoutingHandle && element.parent instanceof model_1.SRoutableElement) {
                var parent_1 = element.parent;
                if (_this.shouldRemoveHandle(element, parent_1)) {
                    _this.handlesToRemove.push({ handle: element, parent: parent_1 });
                    _this.elementsToDeactivate.push(parent_1);
                    _this.elementsToActivate.push(parent_1);
                }
            }
        });
        return this.doExecute(context);
    };
    SwitchEditModeCommand.prototype.doExecute = function (context) {
        var _this = this;
        this.handlesToRemove.forEach(function (entry) {
            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];
        });
        this.elementsToDeactivate.forEach(function (element) {
            if (element instanceof model_1.SRoutableElement)
                element.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
            else if (element instanceof model_1.SRoutingHandle) {
                element.editMode = false;
                if (element.danglingAnchor) {
                    if (element.parent instanceof model_1.SRoutableElement && element.danglingAnchor.original) {
                        if (element.parent.source === element.danglingAnchor)
                            element.parent.sourceId = element.danglingAnchor.original.id;
                        else if (element.parent.target === element.danglingAnchor)
                            element.parent.targetId = element.danglingAnchor.original.id;
                        element.danglingAnchor.parent.remove(element.danglingAnchor);
                        element.danglingAnchor = undefined;
                    }
                }
            }
        });
        this.elementsToActivate.forEach(function (element) {
            if (model_2.canEditRouting(element) && element instanceof smodel_1.SParentElement) {
                var router = _this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = true;
        });
        return context.root;
    };
    SwitchEditModeCommand.prototype.shouldRemoveHandle = function (handle, parent) {
        if (handle.kind === 'junction') {
            var router = this.edgeRouterRegistry.get(parent.routerKind);
            var route = router.route(parent);
            return route.find(function (rp) { return rp.pointIndex === handle.pointIndex; }) === undefined;
        }
        return false;
    };
    SwitchEditModeCommand.prototype.undo = function (context) {
        var _this = this;
        this.handlesToRemove.forEach(function (entry) {
            if (entry.point !== undefined)
                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);
        });
        this.elementsToActivate.forEach(function (element) {
            if (element instanceof model_1.SRoutableElement)
                element.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = false;
        });
        this.elementsToDeactivate.forEach(function (element) {
            if (model_2.canEditRouting(element)) {
                var router = _this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = true;
        });
        return context.root;
    };
    SwitchEditModeCommand.prototype.redo = function (context) {
        return this.doExecute(context);
    };
    SwitchEditModeCommand.KIND = SwitchEditModeAction.KIND;
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SwitchEditModeCommand.prototype, "edgeRouterRegistry", void 0);
    SwitchEditModeCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SwitchEditModeAction])
    ], SwitchEditModeCommand);
    return SwitchEditModeCommand;
}(command_1.Command));
exports.SwitchEditModeCommand = SwitchEditModeCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/model.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/model.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
exports.editFeature = Symbol('editFeature');
function canEditRouting(element) {
    return element instanceof model_1.SRoutableElement && element.hasFeature(exports.editFeature);
}
exports.canEditRouting = canEditRouting;
exports.editLabelFeature = Symbol('editLabelFeature');
function isEditableLabel(element) {
    return 'text' in element && element.hasFeature(exports.editLabelFeature);
}
exports.isEditableLabel = isEditableLabel;
exports.withEditLabelFeature = Symbol('withEditLabelFeature');
function isWithEditableLabel(element) {
    return 'editableLabel' in element && element.hasFeature(exports.withEditLabelFeature);
}
exports.isWithEditableLabel = isWithEditableLabel;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/edit/reconnect.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/edit/reconnect.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var ReconnectAction = /** @class */ (function () {
    function ReconnectAction(routableId, newSourceId, newTargetId) {
        this.routableId = routableId;
        this.newSourceId = newSourceId;
        this.newTargetId = newTargetId;
        this.kind = ReconnectAction.KIND;
    }
    ReconnectAction.KIND = 'reconnect';
    return ReconnectAction;
}());
exports.ReconnectAction = ReconnectAction;
var ReconnectCommand = /** @class */ (function (_super) {
    __extends(ReconnectCommand, _super);
    function ReconnectCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ReconnectCommand.prototype.execute = function (context) {
        this.doExecute(context);
        return context.root;
    };
    ReconnectCommand.prototype.doExecute = function (context) {
        var index = context.root.index;
        var edge = index.getById(this.action.routableId);
        if (edge instanceof model_1.SRoutableElement) {
            var router = this.edgeRouterRegistry.get(edge.routerKind);
            var before = router.takeSnapshot(edge);
            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);
            var after = router.takeSnapshot(edge);
            this.memento = {
                edge: edge,
                before: before,
                after: after
            };
        }
    };
    ReconnectCommand.prototype.undo = function (context) {
        if (this.memento) {
            var router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.before);
        }
        return context.root;
    };
    ReconnectCommand.prototype.redo = function (context) {
        if (this.memento) {
            var router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.after);
        }
        return context.root;
    };
    ReconnectCommand.KIND = ReconnectAction.KIND;
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], ReconnectCommand.prototype, "edgeRouterRegistry", void 0);
    ReconnectCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [ReconnectAction])
    ], ReconnectCommand);
    return ReconnectCommand;
}(command_1.Command));
exports.ReconnectCommand = ReconnectCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/expand/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/expand/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var expand_1 = __webpack_require__(/*! ./expand */ "../../../node_modules/sprotty/lib/features/expand/expand.js");
var expandModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IButtonHandler).toConstructor(expand_1.ExpandButtonHandler);
});
exports.default = expandModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/expand/expand.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/expand/expand.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/expand/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
/**
 * Sent from the client to the model source to recalculate a diagram when elements
 * are collapsed/expanded by the client.
 */
var CollapseExpandAction = /** @class */ (function () {
    function CollapseExpandAction(expandIds, collapseIds) {
        this.expandIds = expandIds;
        this.collapseIds = collapseIds;
        this.kind = CollapseExpandAction.KIND;
    }
    CollapseExpandAction.KIND = 'collapseExpand';
    return CollapseExpandAction;
}());
exports.CollapseExpandAction = CollapseExpandAction;
/**
 * Programmatic action for expanding or collapsing all elements.
 */
var CollapseExpandAllAction = /** @class */ (function () {
    /**
     * If `expand` is true, all elements are expanded, othewise they are collapsed.
     */
    function CollapseExpandAllAction(expand) {
        if (expand === void 0) { expand = true; }
        this.expand = expand;
        this.kind = CollapseExpandAllAction.KIND;
    }
    CollapseExpandAllAction.KIND = 'collapseExpandAll';
    return CollapseExpandAllAction;
}());
exports.CollapseExpandAllAction = CollapseExpandAllAction;
var ExpandButtonHandler = /** @class */ (function () {
    function ExpandButtonHandler() {
    }
    ExpandButtonHandler.prototype.buttonPressed = function (button) {
        var expandable = smodel_utils_1.findParentByFeature(button, model_1.isExpandable);
        if (expandable !== undefined) {
            return [new CollapseExpandAction(expandable.expanded ? [] : [expandable.id], expandable.expanded ? [expandable.id] : [])];
        }
        else {
            return [];
        }
    };
    ExpandButtonHandler.TYPE = 'button:expand';
    ExpandButtonHandler = __decorate([
        inversify_1.injectable()
    ], ExpandButtonHandler);
    return ExpandButtonHandler;
}());
exports.ExpandButtonHandler = ExpandButtonHandler;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/expand/model.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/expand/model.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.expandFeature = Symbol('expandFeature');
function isExpandable(element) {
    return element.hasFeature(exports.expandFeature) && 'expanded' in element;
}
exports.isExpandable = isExpandable;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/expand/views.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/expand/views.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/expand/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var ExpandButtonView = /** @class */ (function () {
    function ExpandButtonView() {
    }
    ExpandButtonView.prototype.render = function (button, context) {
        var expandable = smodel_utils_1.findParentByFeature(button, model_1.isExpandable);
        var path = (expandable !== undefined && expandable.expanded)
            ? 'M 1,5 L 8,12 L 15,5 Z'
            : 'M 1,8 L 8,15 L 8,1 Z';
        return snabbdom_jsx_1.svg("g", { "class-sprotty-button": "{true}", "class-enabled": "{button.enabled}" },
            snabbdom_jsx_1.svg("rect", { x: 0, y: 0, width: 16, height: 16, opacity: 0 }),
            snabbdom_jsx_1.svg("path", { d: path }));
    };
    ExpandButtonView = __decorate([
        inversify_1.injectable()
    ], ExpandButtonView);
    return ExpandButtonView;
}());
exports.ExpandButtonView = ExpandButtonView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/export/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/export/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var export_1 = __webpack_require__(/*! ./export */ "../../../node_modules/sprotty/lib/features/export/export.js");
var svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var exportSvgModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.KeyListener).to(export_1.ExportSvgKeyListener).inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).to(export_1.ExportSvgPostprocessor).inSingletonScope();
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, export_1.ExportSvgCommand);
    bind(types_1.TYPES.SvgExporter).to(svg_exporter_1.SvgExporter).inSingletonScope();
});
exports.default = exportSvgModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/export/export.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/export/export.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var model_1 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/export/model.js");
var svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js");
var model_3 = __webpack_require__(/*! ../viewport/model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var model_4 = __webpack_require__(/*! ../hover/model */ "../../../node_modules/sprotty/lib/features/hover/model.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var ExportSvgKeyListener = /** @class */ (function (_super) {
    __extends(ExportSvgKeyListener, _super);
    function ExportSvgKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExportSvgKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyE', 'ctrlCmd', 'shift'))
            return [new RequestExportSvgAction()];
        else
            return [];
    };
    ExportSvgKeyListener = __decorate([
        inversify_1.injectable()
    ], ExportSvgKeyListener);
    return ExportSvgKeyListener;
}(key_tool_1.KeyListener));
exports.ExportSvgKeyListener = ExportSvgKeyListener;
var RequestExportSvgAction = /** @class */ (function () {
    function RequestExportSvgAction(requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.requestId = requestId;
        this.kind = RequestExportSvgAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestExportSvgAction.create = function () {
        return new RequestExportSvgAction(action_1.generateRequestId());
    };
    RequestExportSvgAction.KIND = 'requestExportSvg';
    return RequestExportSvgAction;
}());
exports.RequestExportSvgAction = RequestExportSvgAction;
var ExportSvgCommand = /** @class */ (function (_super) {
    __extends(ExportSvgCommand, _super);
    function ExportSvgCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ExportSvgCommand.prototype.execute = function (context) {
        if (model_2.isExportable(context.root)) {
            var root = context.modelFactory.createRoot(context.root);
            if (model_2.isExportable(root)) {
                if (model_3.isViewport(root)) {
                    root.zoom = 1;
                    root.scroll = { x: 0, y: 0 };
                }
                root.index.all().forEach(function (element) {
                    if (model_1.isSelectable(element) && element.selected)
                        element.selected = false;
                    if (model_4.isHoverable(element) && element.hoverFeedback)
                        element.hoverFeedback = false;
                });
                return {
                    model: root,
                    modelChanged: true,
                    cause: this.action
                };
            }
        }
        return {
            model: context.root,
            modelChanged: false
        };
    };
    ExportSvgCommand.KIND = RequestExportSvgAction.KIND;
    ExportSvgCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [RequestExportSvgAction])
    ], ExportSvgCommand);
    return ExportSvgCommand;
}(command_1.HiddenCommand));
exports.ExportSvgCommand = ExportSvgCommand;
var ExportSvgPostprocessor = /** @class */ (function () {
    function ExportSvgPostprocessor() {
    }
    ExportSvgPostprocessor.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot)
            this.root = element;
        return vnode;
    };
    ExportSvgPostprocessor.prototype.postUpdate = function (cause) {
        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {
            this.svgExporter.export(this.root, cause);
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.SvgExporter),
        __metadata("design:type", svg_exporter_1.SvgExporter)
    ], ExportSvgPostprocessor.prototype, "svgExporter", void 0);
    ExportSvgPostprocessor = __decorate([
        inversify_1.injectable()
    ], ExportSvgPostprocessor);
    return ExportSvgPostprocessor;
}());
exports.ExportSvgPostprocessor = ExportSvgPostprocessor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/export/model.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/export/model.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.exportFeature = Symbol('exportFeature');
function isExportable(element) {
    return element.hasFeature(exports.exportFeature);
}
exports.isExportable = isExportable;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/export/svg-exporter.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/actions/action-dispatcher */ "../../../node_modules/sprotty/lib/base/actions/action-dispatcher.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var ExportSvgAction = /** @class */ (function () {
    function ExportSvgAction(svg, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.svg = svg;
        this.responseId = responseId;
        this.kind = ExportSvgAction.KIND;
    }
    ExportSvgAction.KIND = 'exportSvg';
    return ExportSvgAction;
}());
exports.ExportSvgAction = ExportSvgAction;
var SvgExporter = /** @class */ (function () {
    function SvgExporter() {
    }
    SvgExporter.prototype.export = function (root, request) {
        if (typeof document !== 'undefined') {
            var div = document.getElementById(this.options.hiddenDiv);
            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {
                var svgElement = div.firstElementChild;
                var svg = this.createSvg(svgElement, root);
                this.actionDispatcher.dispatch(new ExportSvgAction(svg, request ? request.requestId : ''));
            }
        }
    };
    SvgExporter.prototype.createSvg = function (svgElementOrig, root) {
        var serializer = new XMLSerializer();
        var svgCopy = serializer.serializeToString(svgElementOrig);
        var iframe = document.createElement('iframe');
        document.body.appendChild(iframe);
        if (!iframe.contentWindow)
            throw new Error('IFrame has no contentWindow');
        var docCopy = iframe.contentWindow.document;
        docCopy.open();
        docCopy.write(svgCopy);
        docCopy.close();
        var svgElementNew = docCopy.getElementById(svgElementOrig.id);
        svgElementNew.removeAttribute('opacity');
        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);
        svgElementNew.setAttribute('version', '1.1');
        var bounds = this.getBounds(root);
        svgElementNew.setAttribute('viewBox', bounds.x + " " + bounds.y + " " + bounds.width + " " + bounds.height);
        var svgCode = serializer.serializeToString(svgElementNew);
        document.body.removeChild(iframe);
        return svgCode;
    };
    SvgExporter.prototype.copyStyles = function (source, target, skipedProperties) {
        var sourceStyle = getComputedStyle(source);
        var targetStyle = getComputedStyle(target);
        var diffStyle = '';
        for (var i = 0; i < sourceStyle.length; i++) {
            var key = sourceStyle[i];
            if (skipedProperties.indexOf(key) === -1) {
                var value = sourceStyle.getPropertyValue(key);
                if (targetStyle.getPropertyValue(key) !== value) {
                    diffStyle += key + ":" + value + ";";
                }
            }
        }
        if (diffStyle !== '')
            target.setAttribute('style', diffStyle);
        // IE doesn't retrun anything on source.children
        for (var i = 0; i < source.childNodes.length; ++i) {
            var sourceChild = source.childNodes[i];
            var targetChild = target.childNodes[i];
            if (sourceChild instanceof Element)
                this.copyStyles(sourceChild, targetChild, []);
        }
    };
    SvgExporter.prototype.getBounds = function (root) {
        var allBounds = [geometry_1.EMPTY_BOUNDS];
        root.children.forEach(function (element) {
            if (model_1.isBoundsAware(element)) {
                allBounds.push(element.bounds);
            }
        });
        return allBounds.reduce(function (one, two) { return geometry_1.combine(one, two); });
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], SvgExporter.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.ActionDispatcher)
    ], SvgExporter.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], SvgExporter.prototype, "log", void 0);
    SvgExporter = __decorate([
        inversify_1.injectable()
    ], SvgExporter);
    return SvgExporter;
}());
exports.SvgExporter = SvgExporter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/fade/di.config.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/fade/di.config.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var fade_1 = __webpack_require__(/*! ./fade */ "../../../node_modules/sprotty/lib/features/fade/fade.js");
var fadeModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IVNodePostprocessor).to(fade_1.ElementFader).inSingletonScope();
});
exports.default = fadeModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/fade/fade.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/fade/fade.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../../node_modules/sprotty/lib/base/animations/animation.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/fade/model.js");
var FadeAnimation = /** @class */ (function (_super) {
    __extends(FadeAnimation, _super);
    function FadeAnimation(model, elementFades, context, removeAfterFadeOut) {
        if (removeAfterFadeOut === void 0) { removeAfterFadeOut = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementFades = elementFades;
        _this.removeAfterFadeOut = removeAfterFadeOut;
        return _this;
    }
    FadeAnimation.prototype.tween = function (t, context) {
        for (var _i = 0, _a = this.elementFades; _i < _a.length; _i++) {
            var elementFade = _a[_i];
            var element = elementFade.element;
            if (elementFade.type === 'in') {
                element.opacity = t;
            }
            else if (elementFade.type === 'out') {
                element.opacity = 1 - t;
                if (t === 1 && this.removeAfterFadeOut && element instanceof smodel_1.SChildElement) {
                    element.parent.remove(element);
                }
            }
        }
        return this.model;
    };
    return FadeAnimation;
}(animation_1.Animation));
exports.FadeAnimation = FadeAnimation;
var ElementFader = /** @class */ (function () {
    function ElementFader() {
    }
    ElementFader.prototype.decorate = function (vnode, element) {
        if (model_1.isFadeable(element) && element.opacity !== 1) {
            vnode_utils_1.setAttr(vnode, 'opacity', element.opacity);
        }
        return vnode;
    };
    ElementFader.prototype.postUpdate = function () {
    };
    ElementFader = __decorate([
        inversify_1.injectable()
    ], ElementFader);
    return ElementFader;
}());
exports.ElementFader = ElementFader;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/fade/model.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/fade/model.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.fadeFeature = Symbol('fadeFeature');
function isFadeable(element) {
    return element.hasFeature(exports.fadeFeature) && element['opacity'] !== undefined;
}
exports.isFadeable = isFadeable;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/hover/di.config.js":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/hover/di.config.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var hover_1 = __webpack_require__(/*! ./hover */ "../../../node_modules/sprotty/lib/features/hover/hover.js");
var popup_position_updater_1 = __webpack_require__(/*! ./popup-position-updater */ "../../../node_modules/sprotty/lib/features/hover/popup-position-updater.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "../../../node_modules/sprotty/lib/base/actions/action-handler.js");
var center_fit_1 = __webpack_require__(/*! ../viewport/center-fit */ "../../../node_modules/sprotty/lib/features/viewport/center-fit.js");
var viewport_1 = __webpack_require__(/*! ../viewport/viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js");
var move_1 = __webpack_require__(/*! ../move/move */ "../../../node_modules/sprotty/lib/features/move/move.js");
var hoverModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.PopupVNodePostprocessor).to(popup_position_updater_1.PopupPositionUpdater).inSingletonScope();
    bind(types_1.TYPES.MouseListener).to(hover_1.HoverMouseListener);
    bind(types_1.TYPES.PopupMouseListener).to(hover_1.PopupHoverMouseListener);
    bind(types_1.TYPES.KeyListener).to(hover_1.HoverKeyListener);
    bind(types_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(hover_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    var context = { bind: bind, isBound: isBound };
    command_registration_1.configureCommand(context, hover_1.HoverFeedbackCommand);
    command_registration_1.configureCommand(context, hover_1.SetPopupModelCommand);
    action_handler_1.configureActionHandler(context, hover_1.SetPopupModelCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, center_fit_1.FitToScreenCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, center_fit_1.CenterCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, viewport_1.SetViewportCommand.KIND, hover_1.ClosePopupActionHandler);
    action_handler_1.configureActionHandler(context, move_1.MoveCommand.KIND, hover_1.ClosePopupActionHandler);
});
exports.default = hoverModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/hover/hover.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/hover/hover.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var smodel_factory_1 = __webpack_require__(/*! ../../base/model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/hover/model.js");
/**
 * Triggered when the user puts the mouse pointer over an element.
 */
var HoverFeedbackAction = /** @class */ (function () {
    function HoverFeedbackAction(mouseoverElement, mouseIsOver) {
        this.mouseoverElement = mouseoverElement;
        this.mouseIsOver = mouseIsOver;
        this.kind = HoverFeedbackAction.KIND;
    }
    HoverFeedbackAction.KIND = 'hoverFeedback';
    return HoverFeedbackAction;
}());
exports.HoverFeedbackAction = HoverFeedbackAction;
var HoverFeedbackCommand = /** @class */ (function (_super) {
    __extends(HoverFeedbackCommand, _super);
    function HoverFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    HoverFeedbackCommand.prototype.execute = function (context) {
        var model = context.root;
        var modelElement = model.index.getById(this.action.mouseoverElement);
        if (modelElement) {
            if (model_2.isHoverable(modelElement)) {
                modelElement.hoverFeedback = this.action.mouseIsOver;
            }
        }
        return this.redo(context);
    };
    HoverFeedbackCommand.prototype.undo = function (context) {
        return context.root;
    };
    HoverFeedbackCommand.prototype.redo = function (context) {
        return context.root;
    };
    HoverFeedbackCommand.KIND = HoverFeedbackAction.KIND;
    HoverFeedbackCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [HoverFeedbackAction])
    ], HoverFeedbackCommand);
    return HoverFeedbackCommand;
}(command_1.SystemCommand));
exports.HoverFeedbackCommand = HoverFeedbackCommand;
/**
 * Triggered when the user hovers the mouse pointer over an element to get a popup with details on
 * that element. This action is sent from the client to the model source, e.g. a DiagramServer.
 * The response is a SetPopupModelAction.
 */
var RequestPopupModelAction = /** @class */ (function () {
    function RequestPopupModelAction(elementId, bounds, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.elementId = elementId;
        this.bounds = bounds;
        this.requestId = requestId;
        this.kind = RequestPopupModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestPopupModelAction.create = function (elementId, bounds) {
        return new RequestPopupModelAction(elementId, bounds, action_1.generateRequestId());
    };
    RequestPopupModelAction.KIND = 'requestPopupModel';
    return RequestPopupModelAction;
}());
exports.RequestPopupModelAction = RequestPopupModelAction;
/**
 * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.
 * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.
 */
var SetPopupModelAction = /** @class */ (function () {
    function SetPopupModelAction(newRoot, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetPopupModelAction.KIND;
    }
    SetPopupModelAction.KIND = 'setPopupModel';
    return SetPopupModelAction;
}());
exports.SetPopupModelAction = SetPopupModelAction;
var SetPopupModelCommand = /** @class */ (function (_super) {
    __extends(SetPopupModelCommand, _super);
    function SetPopupModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetPopupModelCommand.prototype.execute = function (context) {
        this.oldRoot = context.root;
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    };
    SetPopupModelCommand.prototype.undo = function (context) {
        return this.oldRoot;
    };
    SetPopupModelCommand.prototype.redo = function (context) {
        return this.newRoot;
    };
    SetPopupModelCommand.KIND = SetPopupModelAction.KIND;
    SetPopupModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetPopupModelAction])
    ], SetPopupModelCommand);
    return SetPopupModelCommand;
}(command_1.PopupCommand));
exports.SetPopupModelCommand = SetPopupModelCommand;
var AbstractHoverMouseListener = /** @class */ (function (_super) {
    __extends(AbstractHoverMouseListener, _super);
    function AbstractHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractHoverMouseListener.prototype.mouseDown = function (target, event) {
        this.mouseIsDown = true;
        return [];
    };
    AbstractHoverMouseListener.prototype.mouseUp = function (target, event) {
        this.mouseIsDown = false;
        return [];
    };
    AbstractHoverMouseListener.prototype.stopMouseOutTimer = function () {
        if (this.state.mouseOutTimer !== undefined) {
            window.clearTimeout(this.state.mouseOutTimer);
            this.state.mouseOutTimer = undefined;
        }
    };
    AbstractHoverMouseListener.prototype.startMouseOutTimer = function () {
        var _this = this;
        this.stopMouseOutTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOutTimer = window.setTimeout(function () {
                _this.state.popupOpen = false;
                _this.state.previousPopupElement = undefined;
                resolve(new SetPopupModelAction({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id }));
            }, _this.options.popupCloseDelay);
        });
    };
    AbstractHoverMouseListener.prototype.stopMouseOverTimer = function () {
        if (this.state.mouseOverTimer !== undefined) {
            window.clearTimeout(this.state.mouseOverTimer);
            this.state.mouseOverTimer = undefined;
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], AbstractHoverMouseListener.prototype, "options", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.HoverState),
        __metadata("design:type", Object)
    ], AbstractHoverMouseListener.prototype, "state", void 0);
    return AbstractHoverMouseListener;
}(mouse_tool_1.MouseListener));
exports.AbstractHoverMouseListener = AbstractHoverMouseListener;
var HoverMouseListener = /** @class */ (function (_super) {
    __extends(HoverMouseListener, _super);
    function HoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HoverMouseListener.prototype.computePopupBounds = function (target, mousePosition) {
        // Default position: below the mouse cursor
        var offset = { x: -5, y: 20 };
        var targetBounds = model_1.getAbsoluteBounds(target);
        var canvasBounds = target.root.canvasBounds;
        var boundsInWindow = geometry_1.translate(targetBounds, canvasBounds);
        var distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;
        var distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;
        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {
            // Put the popup below the target element
            offset = { x: -5, y: Math.round(distBottom + 5) };
        }
        else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {
            // Put the popup right of the target element
            offset = { x: Math.round(distRight + 5), y: -5 };
        }
        var leftPopupPosition = mousePosition.x + offset.x;
        var canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;
        if (leftPopupPosition > canvasRightBorderPosition) {
            leftPopupPosition = canvasRightBorderPosition;
        }
        var topPopupPosition = mousePosition.y + offset.y;
        var canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;
        if (topPopupPosition > canvasBottomBorderPosition) {
            topPopupPosition = canvasBottomBorderPosition;
        }
        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };
    };
    HoverMouseListener.prototype.allowSidePosition = function (target, side, distance) {
        return !(target instanceof smodel_1.SModelRoot) && distance <= 150;
    };
    HoverMouseListener.prototype.startMouseOverTimer = function (target, event) {
        var _this = this;
        this.stopMouseOverTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOverTimer = window.setTimeout(function () {
                var popupBounds = _this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                resolve(new RequestPopupModelAction(target.id, popupBounds));
                _this.state.popupOpen = true;
                _this.state.previousPopupElement = target;
            }, _this.options.popupOpenDelay);
        });
    };
    HoverMouseListener.prototype.mouseOver = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            var popupTarget = smodel_utils_1.findParent(target, model_2.hasPopupFeature);
            if (this.state.popupOpen && (popupTarget === undefined ||
                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOutTimer());
            }
            else {
                this.stopMouseOverTimer();
                this.stopMouseOutTimer();
            }
            if (popupTarget !== undefined &&
                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
            if (this.lastHoverFeedbackElementId) {
                result.push(new HoverFeedbackAction(this.lastHoverFeedbackElementId, false));
                this.lastHoverFeedbackElementId = undefined;
            }
            var hoverTarget = smodel_utils_1.findParentByFeature(target, model_2.isHoverable);
            if (hoverTarget !== undefined) {
                result.push(new HoverFeedbackAction(hoverTarget.id, true));
                this.lastHoverFeedbackElementId = hoverTarget.id;
            }
        }
        return result;
    };
    HoverMouseListener.prototype.mouseOut = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            var elementUnderMouse = document.elementFromPoint(event.x, event.y);
            if (!this.isSprottyPopup(elementUnderMouse)) {
                if (this.state.popupOpen) {
                    var popupTarget = smodel_utils_1.findParent(target, model_2.hasPopupFeature);
                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined
                        && this.state.previousPopupElement.id === popupTarget.id)
                        result.push(this.startMouseOutTimer());
                }
                this.stopMouseOverTimer();
                var hoverTarget = smodel_utils_1.findParentByFeature(target, model_2.isHoverable);
                if (hoverTarget !== undefined) {
                    result.push(new HoverFeedbackAction(hoverTarget.id, false));
                    this.lastHoverFeedbackElementId = undefined;
                }
            }
        }
        return result;
    };
    HoverMouseListener.prototype.isSprottyPopup = function (element) {
        return element
            ? (element.id === this.options.popupDiv
                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))
            : false;
    };
    HoverMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {
                result.push(this.startMouseOutTimer());
            }
            var popupTarget = smodel_utils_1.findParent(target, model_2.hasPopupFeature);
            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined
                || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
        }
        return result;
    };
    HoverMouseListener.prototype.closeOnMouseMove = function (target, event) {
        return target instanceof smodel_1.SModelRoot;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], HoverMouseListener.prototype, "options", void 0);
    HoverMouseListener = __decorate([
        inversify_1.injectable()
    ], HoverMouseListener);
    return HoverMouseListener;
}(AbstractHoverMouseListener));
exports.HoverMouseListener = HoverMouseListener;
var PopupHoverMouseListener = /** @class */ (function (_super) {
    __extends(PopupHoverMouseListener, _super);
    function PopupHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupHoverMouseListener.prototype.mouseOut = function (target, event) {
        return [this.startMouseOutTimer()];
    };
    PopupHoverMouseListener.prototype.mouseOver = function (target, event) {
        this.stopMouseOutTimer();
        this.stopMouseOverTimer();
        return [];
    };
    PopupHoverMouseListener = __decorate([
        inversify_1.injectable()
    ], PopupHoverMouseListener);
    return PopupHoverMouseListener;
}(AbstractHoverMouseListener));
exports.PopupHoverMouseListener = PopupHoverMouseListener;
var HoverKeyListener = /** @class */ (function (_super) {
    __extends(HoverKeyListener, _super);
    function HoverKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HoverKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'Escape')) {
            return [new SetPopupModelAction({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id })];
        }
        return [];
    };
    return HoverKeyListener;
}(key_tool_1.KeyListener));
exports.HoverKeyListener = HoverKeyListener;
var ClosePopupActionHandler = /** @class */ (function () {
    function ClosePopupActionHandler() {
        this.popupOpen = false;
    }
    ClosePopupActionHandler.prototype.handle = function (action) {
        if (action.kind === SetPopupModelCommand.KIND) {
            this.popupOpen = action.newRoot.type !== smodel_factory_1.EMPTY_ROOT.type;
        }
        else if (this.popupOpen) {
            return new SetPopupModelAction({ id: smodel_factory_1.EMPTY_ROOT.id, type: smodel_factory_1.EMPTY_ROOT.type });
        }
    };
    ClosePopupActionHandler = __decorate([
        inversify_1.injectable()
    ], ClosePopupActionHandler);
    return ClosePopupActionHandler;
}());
exports.ClosePopupActionHandler = ClosePopupActionHandler;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/hover/model.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/hover/model.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.hoverFeedbackFeature = Symbol('hoverFeedbackFeature');
function isHoverable(element) {
    return element.hasFeature(exports.hoverFeedbackFeature);
}
exports.isHoverable = isHoverable;
exports.popupFeature = Symbol('popupFeature');
function hasPopupFeature(element) {
    return element.hasFeature(exports.popupFeature);
}
exports.hasPopupFeature = hasPopupFeature;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/hover/popup-position-updater.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/hover/popup-position-updater.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var PopupPositionUpdater = /** @class */ (function () {
    function PopupPositionUpdater() {
    }
    PopupPositionUpdater.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    PopupPositionUpdater.prototype.postUpdate = function () {
        var popupDiv = document.getElementById(this.options.popupDiv);
        if (popupDiv !== null && typeof window !== 'undefined') {
            var boundingClientRect = popupDiv.getBoundingClientRect();
            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {
                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';
            }
            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {
                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';
            }
            if (boundingClientRect.left < 0) {
                popupDiv.style.left = '0px';
            }
            if (boundingClientRect.top < 0) {
                popupDiv.style.top = '0px';
            }
        }
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], PopupPositionUpdater.prototype, "options", void 0);
    PopupPositionUpdater = __decorate([
        inversify_1.injectable()
    ], PopupPositionUpdater);
    return PopupPositionUpdater;
}());
exports.PopupPositionUpdater = PopupPositionUpdater;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/move/di.config.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/move/di.config.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var move_1 = __webpack_require__(/*! ./move */ "../../../node_modules/sprotty/lib/features/move/move.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var moveModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.MouseListener).to(move_1.MoveMouseListener);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, move_1.MoveCommand);
    bind(move_1.LocationPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(move_1.LocationPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(move_1.LocationPostprocessor);
});
exports.default = moveModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/move/model.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/move/model.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.moveFeature = Symbol('moveFeature');
function isLocateable(element) {
    return element['position'] !== undefined;
}
exports.isLocateable = isLocateable;
function isMoveable(element) {
    return element.hasFeature(exports.moveFeature) && isLocateable(element);
}
exports.isMoveable = isMoveable;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/move/move.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/move/move.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../../node_modules/sprotty/lib/base/animations/animation.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "../../../node_modules/sprotty/lib/graph/sgraph.js");
var commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "../../../node_modules/sprotty/lib/model-source/commit-model.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var create_on_drag_1 = __webpack_require__(/*! ../edit/create-on-drag */ "../../../node_modules/sprotty/lib/features/edit/create-on-drag.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "../../../node_modules/sprotty/lib/features/edit/delete.js");
var edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "../../../node_modules/sprotty/lib/features/edit/edit-routing.js");
var reconnect_1 = __webpack_require__(/*! ../edit/reconnect */ "../../../node_modules/sprotty/lib/features/edit/reconnect.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var model_3 = __webpack_require__(/*! ../edge-layout/model */ "../../../node_modules/sprotty/lib/features/edge-layout/model.js");
var model_4 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var select_1 = __webpack_require__(/*! ../select/select */ "../../../node_modules/sprotty/lib/features/select/select.js");
var model_5 = __webpack_require__(/*! ../viewport/model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var model_6 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/move/model.js");
var MoveAction = /** @class */ (function () {
    function MoveAction(moves, animate, finished) {
        if (animate === void 0) { animate = true; }
        if (finished === void 0) { finished = false; }
        this.moves = moves;
        this.animate = animate;
        this.finished = finished;
        this.kind = MoveCommand.KIND;
    }
    return MoveAction;
}());
exports.MoveAction = MoveAction;
var MoveCommand = /** @class */ (function (_super) {
    __extends(MoveCommand, _super);
    function MoveCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.resolvedMoves = new Map;
        _this.edgeMementi = [];
        return _this;
    }
    MoveCommand_1 = MoveCommand;
    MoveCommand.prototype.execute = function (context) {
        var _this = this;
        var index = context.root.index;
        var edge2handleMoves = new Map();
        var attachedEdgeShifts = new Map();
        this.action.moves.forEach(function (move) {
            var element = index.getById(move.elementId);
            if (element instanceof model_2.SRoutingHandle && _this.edgeRouterRegistry) {
                var edge = element.parent;
                if (edge instanceof model_2.SRoutableElement) {
                    var resolvedMove = _this.resolveHandleMove(element, edge, move);
                    if (resolvedMove) {
                        var movesByEdge = edge2handleMoves.get(edge);
                        if (!movesByEdge) {
                            movesByEdge = [];
                            edge2handleMoves.set(edge, movesByEdge);
                        }
                        movesByEdge.push(resolvedMove);
                    }
                }
            }
            else if (element && model_6.isLocateable(element)) {
                var resolvedMove_1 = _this.resolveElementMove(element, move);
                if (resolvedMove_1) {
                    _this.resolvedMoves.set(resolvedMove_1.element.id, resolvedMove_1);
                    if (_this.edgeRouterRegistry) {
                        index.getAttachedElements(element).forEach(function (edge) {
                            if (edge instanceof model_2.SRoutableElement) {
                                var existingDelta = attachedEdgeShifts.get(edge);
                                var newDelta = geometry_1.subtract(resolvedMove_1.toPosition, resolvedMove_1.fromPosition);
                                var delta = (existingDelta)
                                    ? geometry_1.linear(existingDelta, newDelta, 0.5)
                                    : newDelta;
                                attachedEdgeShifts.set(edge, delta);
                            }
                        });
                    }
                }
            }
        });
        this.doMove(edge2handleMoves, attachedEdgeShifts);
        if (this.action.animate) {
            this.undoMove();
            return new animation_1.CompoundAnimation(context.root, context, [
                new MoveAnimation(context.root, this.resolvedMoves, context, false),
                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
            ]).start();
        }
        return context.root;
    };
    MoveCommand.prototype.resolveHandleMove = function (handle, edge, move) {
        var fromPosition = move.fromPosition;
        if (!fromPosition) {
            var router = this.edgeRouterRegistry.get(edge.routerKind);
            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);
        }
        if (fromPosition)
            return {
                handle: handle,
                fromPosition: fromPosition,
                toPosition: move.toPosition
            };
        return undefined;
    };
    MoveCommand.prototype.resolveElementMove = function (element, move) {
        var fromPosition = move.fromPosition
            || { x: element.position.x, y: element.position.y };
        return {
            element: element,
            fromPosition: fromPosition,
            toPosition: move.toPosition
        };
    };
    MoveCommand.prototype.doMove = function (edge2move, attachedEdgeShifts) {
        var _this = this;
        this.resolvedMoves.forEach(function (res) {
            res.element.position = res.toPosition;
        });
        // reset edges to state before
        edge2move.forEach(function (moves, edge) {
            var router = _this.edgeRouterRegistry.get(edge.routerKind);
            var before = router.takeSnapshot(edge);
            router.applyHandleMoves(edge, moves);
            var after = router.takeSnapshot(edge);
            _this.edgeMementi.push({ edge: edge, before: before, after: after });
        });
        attachedEdgeShifts.forEach(function (delta, edge) {
            if (!edge2move.get(edge)) {
                var router = _this.edgeRouterRegistry.get(edge.routerKind);
                var before = router.takeSnapshot(edge);
                if (edge.source
                    && edge.target
                    && _this.resolvedMoves.get(edge.source.id)
                    && _this.resolvedMoves.get(edge.target.id)) {
                    // move the entire edge when both source and target are moved
                    edge.routingPoints = edge.routingPoints.map(function (rp) { return geometry_1.add(rp, delta); });
                }
                else {
                    // add/remove RPs according to the new source/target positions
                    var updateHandles = model_4.isSelectable(edge) && edge.selected;
                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, _this.action.finished);
                }
                var after = router.takeSnapshot(edge);
                _this.edgeMementi.push({ edge: edge, before: before, after: after });
            }
        });
    };
    MoveCommand.prototype.undoMove = function () {
        var _this = this;
        this.resolvedMoves.forEach(function (res) {
            res.element.position = res.fromPosition;
        });
        this.edgeMementi.forEach(function (memento) {
            var router = _this.edgeRouterRegistry.get(memento.edge.routerKind);
            router.applySnapshot(memento.edge, memento.before);
        });
    };
    MoveCommand.prototype.undo = function (context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, true),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)
        ]).start();
    };
    MoveCommand.prototype.redo = function (context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, false),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
        ]).start();
    };
    MoveCommand.prototype.merge = function (other, context) {
        var _this = this;
        if (!this.action.animate && other instanceof MoveCommand_1) {
            other.resolvedMoves.forEach(function (otherMove, otherElementId) {
                var existingMove = _this.resolvedMoves.get(otherElementId);
                if (existingMove) {
                    existingMove.toPosition = otherMove.toPosition;
                }
                else {
                    _this.resolvedMoves.set(otherElementId, otherMove);
                }
            });
            other.edgeMementi.forEach(function (otherMemento) {
                var existingMemento = _this.edgeMementi.find(function (edgeMemento) { return edgeMemento.edge.id === otherMemento.edge.id; });
                if (existingMemento) {
                    existingMemento.after = otherMemento.after;
                }
                else {
                    _this.edgeMementi.push(otherMemento);
                }
            });
            return true;
        }
        else if (other instanceof reconnect_1.ReconnectCommand) {
            var otherMemento_1 = other.memento;
            if (otherMemento_1) {
                var existingMemento = this.edgeMementi.find(function (edgeMemento) { return edgeMemento.edge.id === otherMemento_1.edge.id; });
                if (existingMemento) {
                    existingMemento.after = otherMemento_1.after;
                }
                else {
                    this.edgeMementi.push(otherMemento_1);
                }
            }
            return true;
        }
        return false;
    };
    var MoveCommand_1;
    MoveCommand.KIND = 'move';
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], MoveCommand.prototype, "edgeRouterRegistry", void 0);
    MoveCommand = MoveCommand_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [MoveAction])
    ], MoveCommand);
    return MoveCommand;
}(command_1.MergeableCommand));
exports.MoveCommand = MoveCommand;
var MoveAnimation = /** @class */ (function (_super) {
    __extends(MoveAnimation, _super);
    function MoveAnimation(model, elementMoves, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementMoves = elementMoves;
        _this.reverse = reverse;
        return _this;
    }
    MoveAnimation.prototype.tween = function (t) {
        var _this = this;
        this.elementMoves.forEach(function (elementMove) {
            if (_this.reverse) {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,
                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y
                };
            }
            else {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,
                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y
                };
            }
        });
        return this.model;
    };
    return MoveAnimation;
}(animation_1.Animation));
exports.MoveAnimation = MoveAnimation;
var MorphEdgesAnimation = /** @class */ (function (_super) {
    __extends(MorphEdgesAnimation, _super);
    function MorphEdgesAnimation(model, originalMementi, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.reverse = reverse;
        _this.expanded = [];
        originalMementi.forEach(function (edgeMemento) {
            var start = _this.reverse ? edgeMemento.after : edgeMemento.before;
            var end = _this.reverse ? edgeMemento.before : edgeMemento.after;
            var startRoute = start.routedPoints;
            var endRoute = end.routedPoints;
            var maxRoutingPoints = Math.max(startRoute.length, endRoute.length);
            _this.expanded.push({
                startExpandedRoute: _this.growToSize(startRoute, maxRoutingPoints),
                endExpandedRoute: _this.growToSize(endRoute, maxRoutingPoints),
                memento: edgeMemento
            });
        });
        return _this;
    }
    MorphEdgesAnimation.prototype.midPoint = function (edgeMemento) {
        var edge = edgeMemento.edge;
        var source = edgeMemento.edge.source;
        var target = edgeMemento.edge.target;
        return geometry_1.linear(smodel_utils_1.translatePoint(geometry_1.center(source.bounds), source.parent, edge.parent), smodel_utils_1.translatePoint(geometry_1.center(target.bounds), target.parent, edge.parent), 0.5);
    };
    MorphEdgesAnimation.prototype.start = function () {
        this.expanded.forEach(function (morph) {
            morph.memento.edge.removeAll(function (e) { return e instanceof model_2.SRoutingHandle; });
        });
        return _super.prototype.start.call(this);
    };
    MorphEdgesAnimation.prototype.tween = function (t) {
        var _this = this;
        if (t === 1) {
            this.expanded.forEach(function (morph) {
                var memento = morph.memento;
                if (_this.reverse)
                    memento.before.router.applySnapshot(memento.edge, memento.before);
                else
                    memento.after.router.applySnapshot(memento.edge, memento.after);
            });
        }
        else {
            this.expanded.forEach(function (morph) {
                var newRoutingPoints = [];
                // ignore source and target anchor
                for (var i = 1; i < morph.startExpandedRoute.length - 1; ++i)
                    newRoutingPoints.push(geometry_1.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));
                var closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;
                var newSnapshot = __assign(__assign({}, closestSnapshot), { routingPoints: newRoutingPoints, routingHandles: [] });
                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);
            });
        }
        return this.model;
    };
    MorphEdgesAnimation.prototype.growToSize = function (route, targetSize) {
        var diff = targetSize - route.length;
        if (diff <= 0)
            return route;
        var result = [];
        result.push(route[0]);
        var deltaDiff = 1 / (diff + 1);
        var deltaSmaller = 1 / (route.length - 1);
        var nextInsertion = 1;
        for (var i = 1; i < route.length; ++i) {
            var pos = deltaSmaller * i;
            var insertions = 0;
            while (pos > (nextInsertion + insertions) * deltaDiff)
                ++insertions;
            nextInsertion += insertions;
            for (var j = 0; j < insertions; ++j) {
                var p = geometry_1.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));
                result.push(p);
            }
            result.push(route[i]);
        }
        return result;
    };
    return MorphEdgesAnimation;
}(animation_1.Animation));
exports.MorphEdgesAnimation = MorphEdgesAnimation;
var MoveMouseListener = /** @class */ (function (_super) {
    __extends(MoveMouseListener, _super);
    function MoveMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasDragged = false;
        _this.elementId2startPos = new Map();
        return _this;
    }
    MoveMouseListener.prototype.mouseDown = function (target, event) {
        var result = [];
        if (event.button === 0) {
            var moveable = smodel_utils_1.findParentByFeature(target, model_6.isMoveable);
            var isRoutingHandle = target instanceof model_2.SRoutingHandle;
            if (moveable !== undefined || isRoutingHandle || create_on_drag_1.isCreatingOnDrag(target)) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
            if (create_on_drag_1.isCreatingOnDrag(target)) {
                result.push(new select_1.SelectAllAction(false));
                result.push(target.createAction(model_2.edgeInProgressID));
                result.push(new select_1.SelectAction([model_2.edgeInProgressID], []));
                result.push(new edit_routing_1.SwitchEditModeAction([model_2.edgeInProgressID], []));
                result.push(new select_1.SelectAction([model_2.edgeInProgressTargetHandleID], []));
                result.push(new edit_routing_1.SwitchEditModeAction([model_2.edgeInProgressTargetHandleID], []));
            }
            else if (isRoutingHandle) {
                result.push(new edit_routing_1.SwitchEditModeAction([target.id], []));
            }
        }
        return result;
    };
    MoveMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            var moveAction = this.getElementMoves(target, event, false);
            if (moveAction)
                result.push(moveAction);
        }
        return result;
    };
    MoveMouseListener.prototype.collectStartPositions = function (root) {
        var _this = this;
        root.index.all()
            .filter(function (element) { return model_4.isSelectable(element) && element.selected; })
            .forEach(function (element) {
            if (model_6.isMoveable(element))
                _this.elementId2startPos.set(element.id, element.position);
            else if (element instanceof model_2.SRoutingHandle) {
                var position = _this.getHandlePosition(element);
                if (position)
                    _this.elementId2startPos.set(element.id, position);
            }
        });
    };
    MoveMouseListener.prototype.getElementMoves = function (target, event, isFinished) {
        var _this = this;
        if (!this.startDragPosition)
            return undefined;
        var elementMoves = [];
        var viewport = smodel_utils_1.findParentByFeature(target, model_5.isViewport);
        var zoom = viewport ? viewport.zoom : 1;
        var delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach(function (startPosition, elementId) {
            var element = target.root.index.getById(elementId);
            if (element) {
                var toPosition = _this.snap({
                    x: startPosition.x + delta.x,
                    y: startPosition.y + delta.y
                }, element, !event.shiftKey);
                if (model_6.isMoveable(element)) {
                    elementMoves.push({
                        elementId: element.id,
                        fromPosition: {
                            x: element.position.x,
                            y: element.position.y
                        },
                        toPosition: toPosition
                    });
                }
                else if (element instanceof model_2.SRoutingHandle) {
                    var point = _this.getHandlePosition(element);
                    if (point !== undefined) {
                        elementMoves.push({
                            elementId: element.id,
                            fromPosition: point,
                            toPosition: toPosition
                        });
                    }
                }
            }
        });
        if (elementMoves.length > 0)
            return new MoveAction(elementMoves, false, isFinished);
        else
            return undefined;
    };
    MoveMouseListener.prototype.snap = function (position, element, isSnap) {
        if (isSnap && this.snapper)
            return this.snapper.snap(position, element);
        else
            return position;
    };
    MoveMouseListener.prototype.getHandlePosition = function (handle) {
        if (this.edgeRouterRegistry) {
            var parent_1 = handle.parent;
            if (!(parent_1 instanceof model_2.SRoutableElement))
                return undefined;
            var router = this.edgeRouterRegistry.get(parent_1.routerKind);
            var route = router.route(parent_1);
            return router.getHandlePosition(parent_1, route, handle);
        }
        return undefined;
    };
    MoveMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof smodel_1.SModelRoot && event.buttons === 0)
            this.mouseUp(target, event);
        return [];
    };
    MoveMouseListener.prototype.mouseUp = function (target, event) {
        var _this = this;
        var result = [];
        var hasReconnected = false;
        if (this.startDragPosition) {
            var moveAction = this.getElementMoves(target, event, true);
            if (moveAction)
                result.push(moveAction);
            target.root.index.all()
                .forEach(function (element) {
                if (element instanceof model_2.SRoutingHandle) {
                    var parent_2 = element.parent;
                    if (parent_2 instanceof model_2.SRoutableElement && element.danglingAnchor) {
                        var handlePos = _this.getHandlePosition(element);
                        if (handlePos) {
                            var handlePosAbs = smodel_utils_1.translatePoint(handlePos, element.parent, element.root);
                            var newEnd = model_1.findChildrenAtPosition(target.root, handlePosAbs)
                                .find(function (e) { return model_2.isConnectable(e) && e.canConnect(parent_2, element.kind); });
                            if (newEnd && _this.hasDragged) {
                                result.push(new reconnect_1.ReconnectAction(element.parent.id, element.kind === 'source' ? newEnd.id : parent_2.sourceId, element.kind === 'target' ? newEnd.id : parent_2.targetId));
                                hasReconnected = true;
                            }
                        }
                    }
                    if (element.editMode)
                        result.push(new edit_routing_1.SwitchEditModeAction([], [element.id]));
                }
            });
        }
        if (!hasReconnected) {
            var edgeInProgress = target.root.index.getById(model_2.edgeInProgressID);
            if (edgeInProgress instanceof smodel_1.SChildElement) {
                var deleteIds_1 = [];
                deleteIds_1.push(model_2.edgeInProgressID);
                edgeInProgress.children.forEach(function (c) {
                    if (c instanceof model_2.SRoutingHandle && c.danglingAnchor)
                        deleteIds_1.push(c.danglingAnchor.id);
                });
                result.push(new delete_1.DeleteElementAction(deleteIds_1));
            }
        }
        if (this.hasDragged)
            result.push(new commit_model_1.CommitModelAction());
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    };
    MoveMouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], MoveMouseListener.prototype, "edgeRouterRegistry", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ISnapper), inversify_1.optional(),
        __metadata("design:type", Object)
    ], MoveMouseListener.prototype, "snapper", void 0);
    return MoveMouseListener;
}(mouse_tool_1.MouseListener));
exports.MoveMouseListener = MoveMouseListener;
var LocationPostprocessor = /** @class */ (function () {
    function LocationPostprocessor() {
    }
    LocationPostprocessor.prototype.decorate = function (vnode, element) {
        if (model_3.isEdgeLayoutable(element) && element.parent instanceof sgraph_1.SEdge) {
            // The element is handled by EdgeLayoutDecorator
            return vnode;
        }
        var translate = '';
        if (model_6.isLocateable(element) && element instanceof smodel_1.SChildElement && element.parent !== undefined) {
            var pos = element.position;
            if (pos.x !== 0 || pos.y !== 0) {
                translate = 'translate(' + pos.x + ', ' + pos.y + ')';
            }
        }
        if (model_1.isAlignable(element)) {
            var ali = element.alignment;
            if (ali.x !== 0 || ali.y !== 0) {
                if (translate.length > 0) {
                    translate += ' ';
                }
                translate += 'translate(' + ali.x + ', ' + ali.y + ')';
            }
        }
        if (translate.length > 0) {
            vnode_utils_1.setAttr(vnode, 'transform', translate);
        }
        return vnode;
    };
    LocationPostprocessor.prototype.postUpdate = function () {
    };
    LocationPostprocessor = __decorate([
        inversify_1.injectable()
    ], LocationPostprocessor);
    return LocationPostprocessor;
}());
exports.LocationPostprocessor = LocationPostprocessor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/move/snap.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/move/snap.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
/**
 * A simple snapper that snaps the center of nodes and routing points to a grid.
 */
var CenterGridSnapper = /** @class */ (function () {
    function CenterGridSnapper() {
    }
    Object.defineProperty(CenterGridSnapper.prototype, "gridX", {
        get: function () {
            return 10;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CenterGridSnapper.prototype, "gridY", {
        get: function () {
            return 10;
        },
        enumerable: true,
        configurable: true
    });
    CenterGridSnapper.prototype.snap = function (position, element) {
        if (element && model_1.isBoundsAware(element))
            return {
                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,
                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height
            };
        else
            return {
                x: Math.round(position.x / this.gridX) * this.gridX,
                y: Math.round(position.y / this.gridY) * this.gridY
            };
    };
    CenterGridSnapper = __decorate([
        inversify_1.injectable()
    ], CenterGridSnapper);
    return CenterGridSnapper;
}());
exports.CenterGridSnapper = CenterGridSnapper;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/nameable/model.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/nameable/model.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.nameFeature = Symbol('nameableFeature');
function isNameable(element) {
    return element.hasFeature(exports.nameFeature);
}
exports.isNameable = isNameable;
function name(element) {
    if (isNameable(element)) {
        return element.name;
    }
    else {
        return undefined;
    }
}
exports.name = name;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/open/di.config.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/open/di.config.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var open_1 = __webpack_require__(/*! ./open */ "../../../node_modules/sprotty/lib/features/open/open.js");
var openModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.MouseListener).to(open_1.OpenMouseListener);
});
exports.default = openModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/open/model.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/open/model.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.openFeature = Symbol('openFeature');
function isOpenable(element) {
    return element.hasFeature(exports.openFeature);
}
exports.isOpenable = isOpenable;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/open/open.js":
/*!***************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/open/open.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/open/model.js");
var OpenAction = /** @class */ (function () {
    function OpenAction(elementId) {
        this.elementId = elementId;
        this.kind = OpenAction.KIND;
    }
    OpenAction.KIND = 'open';
    return OpenAction;
}());
exports.OpenAction = OpenAction;
var OpenMouseListener = /** @class */ (function (_super) {
    __extends(OpenMouseListener, _super);
    function OpenMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OpenMouseListener.prototype.doubleClick = function (target, event) {
        var openableTarget = smodel_utils_1.findParentByFeature(target, model_1.isOpenable);
        if (openableTarget !== undefined) {
            return [new OpenAction(openableTarget.id)];
        }
        return [];
    };
    return OpenMouseListener;
}(mouse_tool_1.MouseListener));
exports.OpenMouseListener = OpenMouseListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/anchor.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/anchor.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
exports.DIAMOND_ANCHOR_KIND = 'diamond';
exports.ELLIPTIC_ANCHOR_KIND = 'elliptic';
exports.RECTANGULAR_ANCHOR_KIND = 'rectangular';
var AnchorComputerRegistry = /** @class */ (function (_super) {
    __extends(AnchorComputerRegistry, _super);
    function AnchorComputerRegistry(anchors) {
        var _this = _super.call(this) || this;
        anchors.forEach(function (anchor) { return _this.register(anchor.kind, anchor); });
        return _this;
    }
    Object.defineProperty(AnchorComputerRegistry.prototype, "defaultAnchorKind", {
        get: function () {
            return exports.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    AnchorComputerRegistry.prototype.get = function (routerKind, anchorKind) {
        return _super.prototype.get.call(this, routerKind + ":" + (anchorKind || this.defaultAnchorKind));
    };
    AnchorComputerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IAnchorComputer)),
        __metadata("design:paramtypes", [Array])
    ], AnchorComputerRegistry);
    return AnchorComputerRegistry;
}(registry_1.InstanceRegistry));
exports.AnchorComputerRegistry = AnchorComputerRegistry;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/di.config.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/di.config.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "../../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var manhattan_anchors_1 = __webpack_require__(/*! ./manhattan-anchors */ "../../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js");
var polyline_anchors_1 = __webpack_require__(/*! ./polyline-anchors */ "../../../node_modules/sprotty/lib/features/routing/polyline-anchors.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js");
var routing_1 = __webpack_require__(/*! ./routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var routingModule = new inversify_1.ContainerModule(function (bind) {
    bind(routing_1.EdgeRouterRegistry).toSelf().inSingletonScope();
    bind(anchor_1.AnchorComputerRegistry).toSelf().inSingletonScope();
    bind(manhattan_edge_router_1.ManhattanEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(manhattan_edge_router_1.ManhattanEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanEllipticAnchor).inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanRectangularAnchor).inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanDiamondAnchor).inSingletonScope();
    bind(polyline_edge_router_1.PolylineEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(polyline_edge_router_1.PolylineEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.EllipseAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.RectangleAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.DiamondAnchor);
});
exports.default = routingModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/linear-edge-router.js":
/*!********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/linear-edge-router.js ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js");
var model_2 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var Side;
(function (Side) {
    Side[Side["RIGHT"] = 0] = "RIGHT";
    Side[Side["LEFT"] = 1] = "LEFT";
    Side[Side["TOP"] = 2] = "TOP";
    Side[Side["BOTTOM"] = 3] = "BOTTOM";
})(Side = exports.Side || (exports.Side = {}));
var DefaultAnchors = /** @class */ (function () {
    function DefaultAnchors(element, edgeParent, kind) {
        this.element = element;
        this.kind = kind;
        var bounds = element.bounds;
        this.bounds = smodel_utils_1.translateBounds(bounds, element.parent, edgeParent);
        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind: kind };
        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind: kind };
        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind: kind };
        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind: kind };
    }
    DefaultAnchors.prototype.get = function (side) {
        return this[Side[side].toLowerCase()];
    };
    DefaultAnchors.prototype.getNearestSide = function (point) {
        var leftDistance = geometry_1.euclideanDistance(point, this.left);
        var rightDistance = geometry_1.euclideanDistance(point, this.right);
        var topDistance = geometry_1.euclideanDistance(point, this.top);
        var bottomDistance = geometry_1.euclideanDistance(point, this.bottom);
        var currentNearestSide = Side.LEFT;
        var currentMinDist = leftDistance;
        if (rightDistance < currentMinDist) {
            currentMinDist = rightDistance;
            currentNearestSide = Side.RIGHT;
        }
        if (topDistance < currentMinDist) {
            currentMinDist = topDistance;
            currentNearestSide = Side.TOP;
        }
        if (bottomDistance < currentMinDist) {
            currentMinDist = bottomDistance;
            currentNearestSide = Side.BOTTOM;
        }
        return currentNearestSide;
    };
    return DefaultAnchors;
}());
exports.DefaultAnchors = DefaultAnchors;
var LinearEdgeRouter = /** @class */ (function () {
    function LinearEdgeRouter() {
    }
    LinearEdgeRouter.prototype.pointAt = function (edge, t) {
        var segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        var segmentStart = segments.segmentStart, segmentEnd = segments.segmentEnd, lambda = segments.lambda;
        return geometry_1.linear(segmentStart, segmentEnd, lambda);
    };
    LinearEdgeRouter.prototype.derivativeAt = function (edge, t) {
        var segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        var segmentStart = segments.segmentStart, segmentEnd = segments.segmentEnd;
        return {
            x: segmentEnd.x - segmentStart.x,
            y: segmentEnd.y - segmentStart.y
        };
    };
    LinearEdgeRouter.prototype.calculateSegment = function (edge, t) {
        if (t < 0 || t > 1)
            return undefined;
        var routedPoints = this.route(edge);
        if (routedPoints.length < 2)
            return undefined;
        var segmentLengths = [];
        var totalLength = 0;
        for (var i = 0; i < routedPoints.length - 1; ++i) {
            segmentLengths[i] = geometry_1.euclideanDistance(routedPoints[i], routedPoints[i + 1]);
            totalLength += segmentLengths[i];
        }
        var currentLenght = 0;
        var tAsLenght = t * totalLength;
        for (var i = 0; i < routedPoints.length - 1; ++i) {
            var newLength = currentLenght + segmentLengths[i];
            // avoid division by (almost) zero
            if (segmentLengths[i] > 1E-8) {
                if (newLength >= tAsLenght) {
                    var lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];
                    return {
                        segmentStart: routedPoints[i],
                        segmentEnd: routedPoints[i + 1],
                        lambda: lambda
                    };
                }
            }
            currentLenght = newLength;
        }
        return {
            segmentEnd: routedPoints.pop(),
            segmentStart: routedPoints.pop(),
            lambda: 1
        };
    };
    LinearEdgeRouter.prototype.addHandle = function (edge, kind, type, routingPointIndex) {
        var handle = new model_1.SRoutingHandle();
        handle.kind = kind;
        handle.pointIndex = routingPointIndex;
        handle.type = type;
        if (kind === 'target' && edge.id === model_1.edgeInProgressID)
            handle.id = model_1.edgeInProgressTargetHandleID;
        edge.add(handle);
        return handle;
    };
    LinearEdgeRouter.prototype.getHandlePosition = function (edge, route, handle) {
        switch (handle.kind) {
            case 'source':
                if (edge.source instanceof model_1.SDanglingAnchor)
                    return edge.source.position;
                else
                    return route[0];
            case 'target':
                if (edge.target instanceof model_1.SDanglingAnchor)
                    return edge.target.position;
                else {
                    return route[route.length - 1];
                }
            default:
                var position = this.getInnerHandlePosition(edge, route, handle);
                if (position !== undefined)
                    return position;
                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)
                    return edge.routingPoints[handle.pointIndex];
        }
        return undefined;
    };
    LinearEdgeRouter.prototype.findRouteSegment = function (edge, route, handleIndex) {
        var getIndex = function (rp) {
            if (rp.pointIndex !== undefined)
                return rp.pointIndex;
            else if (rp.kind === 'target')
                return edge.routingPoints.length;
            else
                return -2;
        };
        var start, end;
        for (var _i = 0, route_1 = route; _i < route_1.length; _i++) {
            var rp = route_1[_i];
            var i = getIndex(rp);
            if (i <= handleIndex && (start === undefined || i > getIndex(start)))
                start = rp;
            if (i > handleIndex && (end === undefined || i < getIndex(end)))
                end = rp;
        }
        return { start: start, end: end };
    };
    LinearEdgeRouter.prototype.getTranslatedAnchor = function (connectable, refPoint, refContainer, edge, anchorCorrection) {
        if (anchorCorrection === void 0) { anchorCorrection = 0; }
        var translatedRefPoint = smodel_utils_1.translatePoint(refPoint, refContainer, connectable.parent);
        var anchorComputer = this.getAnchorComputer(connectable);
        var strokeCorrection = 0.5 * connectable.strokeWidth;
        var anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);
        return smodel_utils_1.translatePoint(anchor, connectable.parent, edge.parent);
    };
    LinearEdgeRouter.prototype.getAnchorComputer = function (connectable) {
        return this.anchorRegistry.get(this.kind, connectable.anchorKind);
    };
    LinearEdgeRouter.prototype.applyHandleMoves = function (edge, moves) {
        var remainingMoves = moves.slice();
        moves.forEach(function (move) {
            var handle = move.handle;
            if (handle.kind === 'source' && !(edge.source instanceof model_1.SDanglingAnchor)) {
                // detach source
                var anchor = new model_1.SDanglingAnchor();
                anchor.id = edge.id + '_dangling-source';
                anchor.original = edge.source;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.sourceId = anchor.id;
            }
            else if (handle.kind === 'target' && !(edge.target instanceof model_1.SDanglingAnchor)) {
                // detach target
                var anchor = new model_1.SDanglingAnchor();
                anchor.id = edge.id + '_dangling-target';
                anchor.original = edge.target;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.targetId = anchor.id;
            }
            if (handle.danglingAnchor) {
                handle.danglingAnchor.position = move.toPosition;
                remainingMoves.splice(remainingMoves.indexOf(move), 1);
            }
        });
        if (remainingMoves.length > 0)
            this.applyInnerHandleMoves(edge, remainingMoves);
        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
    };
    LinearEdgeRouter.prototype.cleanupRoutingPoints = function (edge, routingPoints, updateHandles, addRoutingPoints) {
        var sourceAnchors = new DefaultAnchors(edge.source, edge.parent, "source");
        var targetAnchors = new DefaultAnchors(edge.target, edge.parent, "target");
        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);
    };
    LinearEdgeRouter.prototype.resetRoutingPointsOnReconnect = function (edge, routingPoints, updateHandles, sourceAnchors, targetAnchors) {
        if (routingPoints.length === 0 || edge.source instanceof model_1.SDanglingAnchor || edge.target instanceof model_1.SDanglingAnchor) {
            var options = this.getOptions(edge);
            var corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
            routingPoints.splice.apply(routingPoints, __spreadArrays([0, routingPoints.length], corners));
            if (updateHandles) {
                var maxPointIndex_1 = -2;
                edge.children.forEach(function (child) {
                    if (child instanceof model_1.SRoutingHandle) {
                        if (child.kind === 'target')
                            child.pointIndex = routingPoints.length;
                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)
                            edge.remove(child);
                        else
                            maxPointIndex_1 = Math.max(child.pointIndex, maxPointIndex_1);
                    }
                });
                for (var i = maxPointIndex_1; i < routingPoints.length - 1; ++i)
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);
            }
            return true;
        }
        return false;
    };
    LinearEdgeRouter.prototype.applyReconnect = function (edge, newSourceId, newTargetId) {
        var hasChanged = false;
        if (newSourceId) {
            var newSource = edge.root.index.getById(newSourceId);
            if (newSource instanceof model_2.SConnectableElement) {
                edge.sourceId = newSource.id;
                hasChanged = true;
            }
        }
        if (newTargetId) {
            var newTarget = edge.root.index.getById(newTargetId);
            if (newTarget instanceof model_2.SConnectableElement) {
                edge.targetId = newTarget.id;
                hasChanged = true;
            }
        }
        if (hasChanged) {
            // reset attached elements in index
            edge.index.remove(edge);
            edge.index.add(edge);
            if (this.getSelfEdgeIndex(edge) > -1) {
                edge.routingPoints = [];
                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
            }
        }
    };
    LinearEdgeRouter.prototype.takeSnapshot = function (edge) {
        return {
            routingPoints: edge.routingPoints.slice(),
            routingHandles: edge.children
                .filter(function (child) { return child instanceof model_1.SRoutingHandle; })
                .map(function (child) { return child; }),
            routedPoints: this.route(edge),
            router: this,
            source: edge.source,
            target: edge.target
        };
    };
    LinearEdgeRouter.prototype.applySnapshot = function (edge, snapshot) {
        edge.routingPoints = snapshot.routingPoints;
        edge.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
        edge.routerKind = snapshot.router.kind;
        snapshot.routingHandles.forEach(function (handle) { return edge.add(handle); });
        if (snapshot.source)
            edge.sourceId = snapshot.source.id;
        if (snapshot.target)
            edge.targetId = snapshot.target.id;
        // update index
        edge.root.index.remove(edge);
        edge.root.index.add(edge);
    };
    LinearEdgeRouter.prototype.calculateDefaultCorners = function (edge, sourceAnchors, targetAnchors, options) {
        var selfEdgeIndex = this.getSelfEdgeIndex(edge);
        if (selfEdgeIndex >= 0) {
            var standardDist = options.standardDistance;
            var delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);
            switch (selfEdgeIndex % 4) {
                case 0:
                    return [
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                    ];
                case 1:
                    return [
                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta },
                    ];
                case 2:
                    return [
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                    ];
                case 3:
                    return [
                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },
                    ];
            }
        }
        return [];
    };
    LinearEdgeRouter.prototype.getSelfEdgeIndex = function (edge) {
        if (!edge.source || edge.source !== edge.target)
            return -1;
        return edge.source.outgoingEdges
            .filter(function (otherEdge) { return otherEdge.target === edge.source; })
            .indexOf(edge);
    };
    __decorate([
        inversify_1.inject(anchor_1.AnchorComputerRegistry),
        __metadata("design:type", anchor_1.AnchorComputerRegistry)
    ], LinearEdgeRouter.prototype, "anchorRegistry", void 0);
    LinearEdgeRouter = __decorate([
        inversify_1.injectable()
    ], LinearEdgeRouter);
    return LinearEdgeRouter;
}());
exports.LinearEdgeRouter = LinearEdgeRouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js":
/*!*******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/manhattan-anchors.js ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js");
var manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "../../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var ManhattanRectangularAnchor = /** @class */ (function () {
    function ManhattanRectangularAnchor() {
    }
    ManhattanRectangularAnchor_1 = ManhattanRectangularAnchor;
    Object.defineProperty(ManhattanRectangularAnchor.prototype, "kind", {
        get: function () {
            return ManhattanRectangularAnchor_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanRectangularAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            if (refPoint.y < bounds.y + 0.5 * bounds.height)
                return { x: refPoint.x, y: bounds.y };
            else
                return { x: refPoint.x, y: bounds.y + bounds.height };
        }
        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            if (refPoint.x < bounds.x + 0.5 * bounds.width)
                return { x: bounds.x, y: refPoint.y };
            else
                return { x: bounds.x + bounds.width, y: refPoint.y };
        }
        return geometry_1.center(bounds);
    };
    var ManhattanRectangularAnchor_1;
    ManhattanRectangularAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
    ManhattanRectangularAnchor = ManhattanRectangularAnchor_1 = __decorate([
        inversify_1.injectable()
    ], ManhattanRectangularAnchor);
    return ManhattanRectangularAnchor;
}());
exports.ManhattanRectangularAnchor = ManhattanRectangularAnchor;
var ManhattanDiamondAnchor = /** @class */ (function () {
    function ManhattanDiamondAnchor() {
    }
    ManhattanDiamondAnchor_1 = ManhattanDiamondAnchor;
    Object.defineProperty(ManhattanDiamondAnchor.prototype, "kind", {
        get: function () {
            return ManhattanDiamondAnchor_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanDiamondAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        var c = geometry_1.center(bounds);
        var outline = undefined;
        var refLine = undefined;
        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {
            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
            else {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {
            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
            }
            else {
                refLine = new geometry_1.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_1.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
                else
                    outline = new geometry_1.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        if (!!refLine && !!outline)
            return geometry_1.intersection(outline, refLine);
        else
            return c;
    };
    var ManhattanDiamondAnchor_1;
    ManhattanDiamondAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
    ManhattanDiamondAnchor = ManhattanDiamondAnchor_1 = __decorate([
        inversify_1.injectable()
    ], ManhattanDiamondAnchor);
    return ManhattanDiamondAnchor;
}());
exports.ManhattanDiamondAnchor = ManhattanDiamondAnchor;
var ManhattanEllipticAnchor = /** @class */ (function () {
    function ManhattanEllipticAnchor() {
    }
    ManhattanEllipticAnchor_1 = ManhattanEllipticAnchor;
    Object.defineProperty(ManhattanEllipticAnchor.prototype, "kind", {
        get: function () {
            return ManhattanEllipticAnchor_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanEllipticAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        var c = geometry_1.center(bounds);
        var refRelative = geometry_1.subtract(refPoint, c);
        var x = c.x;
        var y = c.y;
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            x += refRelative.x;
            var dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));
            if (refRelative.y < 0)
                y -= dy;
            else
                y += dy;
        }
        else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            y += refRelative.y;
            var dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));
            if (refRelative.x < 0)
                x -= dx;
            else
                x += dx;
        }
        return { x: x, y: y };
    };
    var ManhattanEllipticAnchor_1;
    ManhattanEllipticAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
    ManhattanEllipticAnchor = ManhattanEllipticAnchor_1 = __decorate([
        inversify_1.injectable()
    ], ManhattanEllipticAnchor);
    return ManhattanEllipticAnchor;
}());
exports.ManhattanEllipticAnchor = ManhattanEllipticAnchor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js":
/*!***********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/manhattan-edge-router.js ***!
  \***********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var linear_edge_router_1 = __webpack_require__(/*! ./linear-edge-router */ "../../../node_modules/sprotty/lib/features/routing/linear-edge-router.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var ManhattanEdgeRouter = /** @class */ (function (_super) {
    __extends(ManhattanEdgeRouter, _super);
    function ManhattanEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ManhattanEdgeRouter.prototype, "kind", {
        get: function () {
            return ManhattanEdgeRouter.KIND;
        },
        enumerable: true,
        configurable: true
    });
    ManhattanEdgeRouter.prototype.getOptions = function (edge) {
        return {
            standardDistance: 20,
            minimalPointDistance: 3,
            selfEdgeOffset: 0.25
        };
    };
    ManhattanEdgeRouter.prototype.route = function (edge) {
        if (!edge.source || !edge.target)
            return [];
        var routedCorners = this.createRoutedCorners(edge);
        var sourceRefPoint = routedCorners[0]
            || smodel_utils_1.translatePoint(geometry_1.center(edge.target.bounds), edge.target.parent, edge.parent);
        var sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);
        var targetRefPoint = routedCorners[routedCorners.length - 1]
            || smodel_utils_1.translatePoint(geometry_1.center(edge.source.bounds), edge.source.parent, edge.parent);
        var targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);
        if (!sourceAnchor || !targetAnchor)
            return [];
        var routedPoints = [];
        routedPoints.push(__assign({ kind: 'source' }, sourceAnchor));
        routedCorners.forEach(function (corner) { return routedPoints.push(corner); });
        routedPoints.push(__assign({ kind: 'target' }, targetAnchor));
        return routedPoints;
    };
    ManhattanEdgeRouter.prototype.createRoutedCorners = function (edge) {
        var sourceAnchors = new linear_edge_router_1.DefaultAnchors(edge.source, edge.parent, 'source');
        var targetAnchors = new linear_edge_router_1.DefaultAnchors(edge.target, edge.parent, 'target');
        if (edge.routingPoints.length > 0) {
            var routingPointsCopy = edge.routingPoints.slice();
            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);
            if (routingPointsCopy.length > 0)
                return routingPointsCopy.map(function (routingPoint, index) {
                    return __assign({ kind: 'linear', pointIndex: index }, routingPoint);
                });
        }
        var options = this.getOptions(edge);
        var corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
        return corners.map(function (corner) {
            return __assign({ kind: 'linear' }, corner);
        });
    };
    ManhattanEdgeRouter.prototype.createRoutingHandles = function (edge) {
        var routedPoints = this.route(edge);
        this.commitRoute(edge, routedPoints);
        if (routedPoints.length > 0) {
            this.addHandle(edge, 'source', 'routing-point', -2);
            for (var i = 0; i < routedPoints.length - 1; ++i)
                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);
            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);
        }
    };
    ManhattanEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        var fraction = this.getFraction(handle.kind);
        if (fraction !== undefined) {
            var _a = this.findRouteSegment(edge, route, handle.pointIndex), start = _a.start, end = _a.end;
            if (start !== undefined && end !== undefined)
                return geometry_1.linear(start, end, fraction);
        }
        return undefined;
    };
    ManhattanEdgeRouter.prototype.getFraction = function (kind) {
        switch (kind) {
            case 'manhattan-50%': return 0.5;
            default: return undefined;
        }
    };
    ManhattanEdgeRouter.prototype.commitRoute = function (edge, routedPoints) {
        var newRoutingPoints = [];
        for (var i = 1; i < routedPoints.length - 1; ++i)
            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });
        edge.routingPoints = newRoutingPoints;
    };
    ManhattanEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        var _this = this;
        var route = this.route(edge);
        var routingPoints = edge.routingPoints;
        var minimalPointDistance = this.getOptions(edge).minimalPointDistance;
        moves.forEach(function (move) {
            var handle = move.handle;
            var index = handle.pointIndex;
            var correctedX = _this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);
            var correctedY = _this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);
            switch (handle.kind) {
                case 'manhattan-50%':
                    if (index < 0) {
                        if (geometry_1.almostEquals(route[0].x, route[1].x))
                            _this.alignX(routingPoints, 0, correctedX);
                        else
                            _this.alignY(routingPoints, 0, correctedY);
                    }
                    else if (index < routingPoints.length - 1) {
                        if (geometry_1.almostEquals(routingPoints[index].x, routingPoints[index + 1].x)) {
                            _this.alignX(routingPoints, index, correctedX);
                            _this.alignX(routingPoints, index + 1, correctedX);
                        }
                        else {
                            _this.alignY(routingPoints, index, correctedY);
                            _this.alignY(routingPoints, index + 1, correctedY);
                        }
                    }
                    else {
                        if (geometry_1.almostEquals(route[route.length - 2].x, route[route.length - 1].x))
                            _this.alignX(routingPoints, routingPoints.length - 1, correctedX);
                        else
                            _this.alignY(routingPoints, routingPoints.length - 1, correctedY);
                    }
                    break;
            }
        });
    };
    ManhattanEdgeRouter.prototype.correctX = function (routingPoints, index, x, minimalPointDistance) {
        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)
            return routingPoints[index - 1].x;
        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)
            return routingPoints[index + 2].x;
        else
            return x;
    };
    ManhattanEdgeRouter.prototype.alignX = function (routingPoints, index, x) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: x,
                y: routingPoints[index].y
            };
    };
    ManhattanEdgeRouter.prototype.correctY = function (routingPoints, index, y, minimalPointDistance) {
        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)
            return routingPoints[index - 1].y;
        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)
            return routingPoints[index + 2].y;
        else
            return y;
    };
    ManhattanEdgeRouter.prototype.alignY = function (routingPoints, index, y) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: routingPoints[index].x,
                y: y
            };
    };
    ManhattanEdgeRouter.prototype.cleanupRoutingPoints = function (edge, routingPoints, updateHandles, addRoutingPoints) {
        var sourceAnchors = new linear_edge_router_1.DefaultAnchors(edge.source, edge.parent, "source");
        var targetAnchors = new linear_edge_router_1.DefaultAnchors(edge.target, edge.parent, "target");
        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))
            return;
        // delete leading RPs inside the bounds of the source
        for (var i = 0; i < routingPoints.length; ++i)
            if (geometry_1.includes(sourceAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(0, 1);
                if (updateHandles) {
                    this.removeHandle(edge, -1);
                }
            }
            else {
                break;
            }
        // delete trailing RPs inside the bounds of the target
        for (var i = routingPoints.length - 1; i >= 0; --i)
            if (geometry_1.includes(targetAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(i, 1);
                if (updateHandles) {
                    this.removeHandle(edge, i);
                }
            }
            else {
                break;
            }
        if (routingPoints.length >= 2) {
            var options = this.getOptions(edge);
            for (var i = routingPoints.length - 2; i >= 0; --i) {
                if (geometry_1.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {
                    routingPoints.splice(i, 2);
                    --i;
                    if (updateHandles) {
                        this.removeHandle(edge, i - 1);
                        this.removeHandle(edge, i);
                    }
                }
            }
        }
        if (addRoutingPoints) {
            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);
            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);
            this.manhattanify(edge, routingPoints);
        }
    };
    ManhattanEdgeRouter.prototype.removeHandle = function (edge, pointIndex) {
        var toBeRemoved = [];
        edge.children.forEach(function (child) {
            if (child instanceof model_1.SRoutingHandle) {
                if (child.pointIndex > pointIndex)
                    --child.pointIndex;
                else if (child.pointIndex === pointIndex)
                    toBeRemoved.push(child);
            }
        });
        toBeRemoved.forEach(function (child) { return edge.remove(child); });
    };
    ManhattanEdgeRouter.prototype.addAdditionalCorner = function (edge, routingPoints, currentAnchors, otherAnchors, updateHandles) {
        if (routingPoints.length === 0)
            return;
        var refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];
        var index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;
        var shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);
        var isHorizontal;
        if (routingPoints.length > 1) {
            isHorizontal = index === 0
                ? geometry_1.almostEquals(routingPoints[0].x, routingPoints[1].x)
                : geometry_1.almostEquals(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);
        }
        else {
            var nearestSide = otherAnchors.getNearestSide(refPoint);
            isHorizontal = nearestSide === linear_edge_router_1.Side.TOP || nearestSide === linear_edge_router_1.Side.BOTTOM;
        }
        if (isHorizontal) {
            if (refPoint.y < currentAnchors.get(linear_edge_router_1.Side.TOP).y || refPoint.y > currentAnchors.get(linear_edge_router_1.Side.BOTTOM).y) {
                var newPoint = { x: currentAnchors.get(linear_edge_router_1.Side.TOP).x, y: refPoint.y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(function (child) {
                        if (child instanceof model_1.SRoutingHandle && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
        else {
            if (refPoint.x < currentAnchors.get(linear_edge_router_1.Side.LEFT).x || refPoint.x > currentAnchors.get(linear_edge_router_1.Side.RIGHT).x) {
                var newPoint = { x: refPoint.x, y: currentAnchors.get(linear_edge_router_1.Side.LEFT).y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(function (child) {
                        if (child instanceof model_1.SRoutingHandle && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
    };
    /**
     * Add artificial routing points to keep all angles rectilinear.
     *
     * This makes edge morphing look a lot smoother, where RP positions are interpolated
     * linearly probably resulting in non-rectilinear angles. We don't add handles for
     * these additional RPs.
     */
    ManhattanEdgeRouter.prototype.manhattanify = function (edge, routingPoints) {
        for (var i = 1; i < routingPoints.length; ++i) {
            var isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;
            var isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;
            if (!isVertical && !isHorizontal) {
                routingPoints.splice(i, 0, {
                    x: routingPoints[i - 1].x,
                    y: routingPoints[i].y
                });
                ++i;
            }
        }
    };
    ManhattanEdgeRouter.prototype.calculateDefaultCorners = function (edge, sourceAnchors, targetAnchors, options) {
        var selfEdge = _super.prototype.calculateDefaultCorners.call(this, edge, sourceAnchors, targetAnchors, options);
        if (selfEdge.length > 0)
            return selfEdge;
        var bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);
        var sourceSide = bestAnchors.source;
        var targetSide = bestAnchors.target;
        var corners = [];
        var startPoint = sourceAnchors.get(sourceSide);
        var endPoint = targetAnchors.get(targetSide);
        switch (sourceSide) {
            case linear_edge_router_1.Side.RIGHT:
                switch (targetSide) {
                    case linear_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case linear_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case linear_edge_router_1.Side.RIGHT:
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });
                        break;
                    case linear_edge_router_1.Side.LEFT:
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case linear_edge_router_1.Side.LEFT:
                switch (targetSide) {
                    case linear_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case linear_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    default:
                        endPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case linear_edge_router_1.Side.TOP:
                switch (targetSide) {
                    case linear_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case linear_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case linear_edge_router_1.Side.TOP:
                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        break;
                    case linear_edge_router_1.Side.BOTTOM:
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
            case linear_edge_router_1.Side.BOTTOM:
                switch (targetSide) {
                    case linear_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case linear_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    default:
                        endPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
        }
        return corners;
    };
    ManhattanEdgeRouter.prototype.getBestConnectionAnchors = function (edge, sourceAnchors, targetAnchors, options) {
        // distance is enough
        var sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.RIGHT);
        var targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)
            return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)
            return { source: linear_edge_router_1.Side.LEFT, target: linear_edge_router_1.Side.RIGHT };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.BOTTOM);
        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.TOP };
        // One additional point
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.TOP };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.BOTTOM);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.BOTTOM);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.LEFT, target: linear_edge_router_1.Side.BOTTOM };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: linear_edge_router_1.Side.LEFT, target: linear_edge_router_1.Side.TOP };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.LEFT };
        // Two points
        // priority NN >> EE >> NE >> NW >> SE >> SW
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.TOP);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.y - targetPoint.y) < 0) {
                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))
                    return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.TOP };
            }
            else {
                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))
                    return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.TOP };
            }
        }
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.x - targetPoint.x) > 0) {
                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))
                    return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.RIGHT };
            }
            else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))
                return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.RIGHT };
        }
        // Secondly, judge NE NW is available
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.TOP, target: linear_edge_router_1.Side.LEFT };
        // Finally, judge SE SW is available
        sourcePoint = sourceAnchors.get(linear_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.RIGHT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(linear_edge_router_1.Side.LEFT);
        if (!geometry_1.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.includes(sourceAnchors.bounds, targetPoint))
            return { source: linear_edge_router_1.Side.BOTTOM, target: linear_edge_router_1.Side.LEFT };
        // Only to return to the
        return { source: linear_edge_router_1.Side.RIGHT, target: linear_edge_router_1.Side.BOTTOM };
    };
    ManhattanEdgeRouter.KIND = 'manhattan';
    return ManhattanEdgeRouter;
}(linear_edge_router_1.LinearEdgeRouter));
exports.ManhattanEdgeRouter = ManhattanEdgeRouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/model.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/model.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "../../../node_modules/sprotty/lib/features/edit/delete.js");
var model_2 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var model_3 = __webpack_require__(/*! ../hover/model */ "../../../node_modules/sprotty/lib/features/hover/model.js");
var model_4 = __webpack_require__(/*! ../move/model */ "../../../node_modules/sprotty/lib/features/move/model.js");
var SRoutableElement = /** @class */ (function (_super) {
    __extends(SRoutableElement, _super);
    function SRoutableElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.routingPoints = [];
        return _this;
    }
    Object.defineProperty(SRoutableElement.prototype, "source", {
        get: function () {
            return this.index.getById(this.sourceId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SRoutableElement.prototype, "target", {
        get: function () {
            return this.index.getById(this.targetId);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SRoutableElement.prototype, "bounds", {
        get: function () {
            // this should also work for splines, which have the convex hull property
            return this.routingPoints.reduce(function (bounds, routingPoint) { return geometry_1.combine(bounds, {
                x: routingPoint.x,
                y: routingPoint.y,
                width: 0,
                height: 0
            }); }, geometry_1.EMPTY_BOUNDS);
        },
        enumerable: true,
        configurable: true
    });
    return SRoutableElement;
}(smodel_1.SChildElement));
exports.SRoutableElement = SRoutableElement;
exports.connectableFeature = Symbol('connectableFeature');
function isConnectable(element) {
    return element.hasFeature(exports.connectableFeature) && element.canConnect;
}
exports.isConnectable = isConnectable;
function getAbsoluteRouteBounds(model, route) {
    if (route === void 0) { route = model.routingPoints; }
    var bounds = getRouteBounds(route);
    var current = model;
    while (current instanceof smodel_1.SChildElement) {
        var parent_1 = current.parent;
        bounds = parent_1.localToParent(bounds);
        current = parent_1;
    }
    return bounds;
}
exports.getAbsoluteRouteBounds = getAbsoluteRouteBounds;
function getRouteBounds(route) {
    var bounds = { x: NaN, y: NaN, width: 0, height: 0 };
    for (var _i = 0, route_1 = route; _i < route_1.length; _i++) {
        var point = route_1[_i];
        if (isNaN(bounds.x)) {
            bounds.x = point.x;
            bounds.y = point.y;
        }
        else {
            if (point.x < bounds.x) {
                bounds.width += bounds.x - point.x;
                bounds.x = point.x;
            }
            else if (point.x > bounds.x + bounds.width) {
                bounds.width = point.x - bounds.x;
            }
            if (point.y < bounds.y) {
                bounds.height += bounds.y - point.y;
                bounds.y = point.y;
            }
            else if (point.y > bounds.y + bounds.height) {
                bounds.height = point.y - bounds.y;
            }
        }
    }
    return bounds;
}
exports.getRouteBounds = getRouteBounds;
/**
 * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source
 * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and
 * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.
 */
var SConnectableElement = /** @class */ (function (_super) {
    __extends(SConnectableElement, _super);
    function SConnectableElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.strokeWidth = 0;
        return _this;
    }
    Object.defineProperty(SConnectableElement.prototype, "incomingEdges", {
        /**
         * The incoming edges of this connectable element. They are resolved by the index, which must
         * be an `SGraphIndex`.
         */
        get: function () {
            return this.index.getIncomingEdges(this);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SConnectableElement.prototype, "outgoingEdges", {
        /**
         * The outgoing edges of this connectable element. They are resolved by the index, which must
         * be an `SGraphIndex`.
         */
        get: function () {
            return this.index.getOutgoingEdges(this);
        },
        enumerable: true,
        configurable: true
    });
    SConnectableElement.prototype.canConnect = function (routable, role) {
        return true;
    };
    return SConnectableElement;
}(model_1.SShapeElement));
exports.SConnectableElement = SConnectableElement;
var SRoutingHandle = /** @class */ (function (_super) {
    __extends(SRoutingHandle, _super);
    function SRoutingHandle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** Whether the routing point is being dragged. */
        _this.editMode = false;
        _this.hoverFeedback = false;
        _this.selected = false;
        return _this;
    }
    /**
     * SRoutingHandles are created using the constructor, so we hard-wire the
     * default features
     */
    SRoutingHandle.prototype.hasFeature = function (feature) {
        return SRoutingHandle.DEFAULT_FEATURES.indexOf(feature) !== -1;
    };
    SRoutingHandle.DEFAULT_FEATURES = [model_2.selectFeature, model_4.moveFeature, model_3.hoverFeedbackFeature];
    return SRoutingHandle;
}(smodel_1.SChildElement));
exports.SRoutingHandle = SRoutingHandle;
var SDanglingAnchor = /** @class */ (function (_super) {
    __extends(SDanglingAnchor, _super);
    function SDanglingAnchor() {
        var _this = _super.call(this) || this;
        _this.type = 'dangling-anchor';
        _this.size = { width: 0, height: 0 };
        return _this;
    }
    SDanglingAnchor.DEFAULT_FEATURES = [delete_1.deletableFeature];
    return SDanglingAnchor;
}(SConnectableElement));
exports.SDanglingAnchor = SDanglingAnchor;
exports.edgeInProgressID = 'edge-in-progress';
exports.edgeInProgressTargetHandleID = exports.edgeInProgressID + '-target-anchor';


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/polyline-anchors.js":
/*!******************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/polyline-anchors.js ***!
  \******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var anchor_1 = __webpack_require__(/*! ./anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var EllipseAnchor = /** @class */ (function () {
    function EllipseAnchor() {
    }
    Object.defineProperty(EllipseAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    EllipseAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var bounds = connectable.bounds;
        var c = geometry_1.center(bounds);
        var dx = c.x - refPoint.x;
        var dy = c.y - refPoint.y;
        var distance = Math.sqrt(dx * dx + dy * dy);
        var normX = (dx / distance) || 0;
        var normY = (dy / distance) || 0;
        return {
            x: c.x - normX * (0.5 * bounds.width + offset),
            y: c.y - normY * (0.5 * bounds.height + offset)
        };
    };
    EllipseAnchor = __decorate([
        inversify_1.injectable()
    ], EllipseAnchor);
    return EllipseAnchor;
}());
exports.EllipseAnchor = EllipseAnchor;
var RectangleAnchor = /** @class */ (function () {
    function RectangleAnchor() {
    }
    Object.defineProperty(RectangleAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    RectangleAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var bounds = connectable.bounds;
        var c = geometry_1.center(bounds);
        var finder = new NearestPointFinder(c, refPoint);
        if (!geometry_1.almostEquals(c.y, refPoint.y)) {
            var xTop = this.getXIntersection(bounds.y, c, refPoint);
            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)
                finder.addCandidate(xTop, bounds.y - offset);
            var xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);
            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)
                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);
        }
        if (!geometry_1.almostEquals(c.x, refPoint.x)) {
            var yLeft = this.getYIntersection(bounds.x, c, refPoint);
            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x - offset, yLeft);
            var yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);
            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x + bounds.width + offset, yRight);
        }
        return finder.best;
    };
    RectangleAnchor.prototype.getXIntersection = function (yIntersection, centerPoint, point) {
        var t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);
        return (point.x - centerPoint.x) * t + centerPoint.x;
    };
    RectangleAnchor.prototype.getYIntersection = function (xIntersection, centerPoint, point) {
        var t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);
        return (point.y - centerPoint.y) * t + centerPoint.y;
    };
    RectangleAnchor = __decorate([
        inversify_1.injectable()
    ], RectangleAnchor);
    return RectangleAnchor;
}());
exports.RectangleAnchor = RectangleAnchor;
var NearestPointFinder = /** @class */ (function () {
    function NearestPointFinder(centerPoint, refPoint) {
        this.centerPoint = centerPoint;
        this.refPoint = refPoint;
        this.currentDist = -1;
    }
    NearestPointFinder.prototype.addCandidate = function (x, y) {
        var dx = this.refPoint.x - x;
        var dy = this.refPoint.y - y;
        var dist = dx * dx + dy * dy;
        if (this.currentDist < 0 || dist < this.currentDist) {
            this.currentBest = {
                x: x,
                y: y
            };
            this.currentDist = dist;
        }
    };
    Object.defineProperty(NearestPointFinder.prototype, "best", {
        get: function () {
            if (this.currentBest === undefined)
                return this.centerPoint;
            else
                return this.currentBest;
        },
        enumerable: true,
        configurable: true
    });
    return NearestPointFinder;
}());
var DiamondAnchor = /** @class */ (function () {
    function DiamondAnchor() {
    }
    Object.defineProperty(DiamondAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    DiamondAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        var bounds = connectable.bounds;
        var referenceLine = new geometry_1.PointToPointLine(geometry_1.center(bounds), refPoint);
        var closestDiamondSide = new geometry_1.Diamond(bounds).closestSideLine(refPoint);
        var anchorPoint = geometry_1.intersection(closestDiamondSide, referenceLine);
        return geometry_1.shiftTowards(anchorPoint, refPoint, offset);
    };
    DiamondAnchor = __decorate([
        inversify_1.injectable()
    ], DiamondAnchor);
    return DiamondAnchor;
}());
exports.DiamondAnchor = DiamondAnchor;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js":
/*!**********************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/polyline-edge-router.js ***!
  \**********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js");
var linear_edge_router_1 = __webpack_require__(/*! ./linear-edge-router */ "../../../node_modules/sprotty/lib/features/routing/linear-edge-router.js");
var PolylineEdgeRouter = /** @class */ (function (_super) {
    __extends(PolylineEdgeRouter, _super);
    function PolylineEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PolylineEdgeRouter_1 = PolylineEdgeRouter;
    Object.defineProperty(PolylineEdgeRouter.prototype, "kind", {
        get: function () {
            return PolylineEdgeRouter_1.KIND;
        },
        enumerable: true,
        configurable: true
    });
    PolylineEdgeRouter.prototype.getOptions = function (edge) {
        return {
            minimalPointDistance: 2,
            removeAngleThreshold: 0.1,
            standardDistance: 20,
            selfEdgeOffset: 0.25
        };
    };
    PolylineEdgeRouter.prototype.route = function (edge) {
        var source = edge.source;
        var target = edge.target;
        if (source === undefined || target === undefined) {
            return [];
        }
        var sourceAnchor;
        var targetAnchor;
        var options = this.getOptions(edge);
        var routingPoints = edge.routingPoints.length > 0
            ? edge.routingPoints
            : [];
        this.cleanupRoutingPoints(edge, routingPoints, false, false);
        var rpCount = routingPoints !== undefined ? routingPoints.length : 0;
        if (rpCount === 0) {
            // Use the target center as start anchor reference
            var startRef = geometry_1.center(target.bounds);
            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);
            // Use the source center as end anchor reference
            var endRef = geometry_1.center(source.bounds);
            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);
        }
        else {
            // Use the first routing point as start anchor reference
            var p0 = routingPoints[0];
            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);
            // Use the last routing point as end anchor reference
            var pn = routingPoints[rpCount - 1];
            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);
        }
        var result = [];
        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });
        for (var i = 0; i < rpCount; i++) {
            var p = routingPoints[i];
            if (i > 0 && i < rpCount - 1
                || i === 0 && geometry_1.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)
                || i === rpCount - 1 && geometry_1.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {
                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });
            }
        }
        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });
        return this.filterEditModeHandles(result, edge, options);
    };
    /**
     * Remove routed points that are in edit mode and for which the angle between the preceding and
     * following points falls below a threshold.
     */
    PolylineEdgeRouter.prototype.filterEditModeHandles = function (route, edge, options) {
        if (edge.children.length === 0)
            return route;
        var i = 0;
        var _loop_1 = function () {
            var curr = route[i];
            if (curr.pointIndex !== undefined) {
                var handle = edge.children.find(function (child) {
                    return child instanceof model_1.SRoutingHandle && child.kind === 'junction' && child.pointIndex === curr.pointIndex;
                });
                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {
                    var prev = route[i - 1], next = route[i + 1];
                    var prevDiff = { x: prev.x - curr.x, y: prev.y - curr.y };
                    var nextDiff = { x: next.x - curr.x, y: next.y - curr.y };
                    var angle = geometry_1.angleBetweenPoints(prevDiff, nextDiff);
                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {
                        route.splice(i, 1);
                        return "continue";
                    }
                }
            }
            i++;
        };
        while (i < route.length) {
            _loop_1();
        }
        return route;
    };
    PolylineEdgeRouter.prototype.createRoutingHandles = function (edge) {
        var rpCount = edge.routingPoints.length;
        this.addHandle(edge, 'source', 'routing-point', -2);
        this.addHandle(edge, 'line', 'volatile-routing-point', -1);
        for (var i = 0; i < rpCount; i++) {
            this.addHandle(edge, 'junction', 'routing-point', i);
            this.addHandle(edge, 'line', 'volatile-routing-point', i);
        }
        this.addHandle(edge, 'target', 'routing-point', rpCount);
    };
    PolylineEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        if (handle.kind === 'line') {
            var _a = this.findRouteSegment(edge, route, handle.pointIndex), start = _a.start, end = _a.end;
            if (start !== undefined && end !== undefined)
                return geometry_1.centerOfLine(start, end);
        }
        return undefined;
    };
    PolylineEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        var _this = this;
        moves.forEach(function (move) {
            var handle = move.handle;
            var points = edge.routingPoints;
            var index = handle.pointIndex;
            if (handle.kind === 'line') {
                // Upgrade to a proper routing point
                handle.kind = 'junction';
                handle.type = 'routing-point';
                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);
                edge.children.forEach(function (child) {
                    if (child instanceof model_1.SRoutingHandle && (child === handle || child.pointIndex > index))
                        child.pointIndex++;
                });
                _this.addHandle(edge, 'line', 'volatile-routing-point', index);
                _this.addHandle(edge, 'line', 'volatile-routing-point', index + 1);
                index++;
            }
            if (index >= 0 && index < points.length) {
                points[index] = move.toPosition;
            }
        });
    };
    var PolylineEdgeRouter_1;
    PolylineEdgeRouter.KIND = 'polyline';
    __decorate([
        inversify_1.inject(anchor_1.AnchorComputerRegistry),
        __metadata("design:type", anchor_1.AnchorComputerRegistry)
    ], PolylineEdgeRouter.prototype, "anchorRegistry", void 0);
    PolylineEdgeRouter = PolylineEdgeRouter_1 = __decorate([
        inversify_1.injectable()
    ], PolylineEdgeRouter);
    return PolylineEdgeRouter;
}(linear_edge_router_1.LinearEdgeRouter));
exports.PolylineEdgeRouter = PolylineEdgeRouter;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/routing.js":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/routing.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "../../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var EdgeRouterRegistry = /** @class */ (function (_super) {
    __extends(EdgeRouterRegistry, _super);
    function EdgeRouterRegistry(edgeRouters) {
        var _this = _super.call(this) || this;
        edgeRouters.forEach(function (router) { return _this.register(router.kind, router); });
        return _this;
    }
    Object.defineProperty(EdgeRouterRegistry.prototype, "defaultKind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND;
        },
        enumerable: true,
        configurable: true
    });
    EdgeRouterRegistry.prototype.get = function (kind) {
        return _super.prototype.get.call(this, kind || this.defaultKind);
    };
    EdgeRouterRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.multiInject(types_1.TYPES.IEdgeRouter)),
        __metadata("design:paramtypes", [Array])
    ], EdgeRouterRegistry);
    return EdgeRouterRegistry;
}(registry_1.InstanceRegistry));
exports.EdgeRouterRegistry = EdgeRouterRegistry;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/routing/views.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/routing/views.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var RoutableView = /** @class */ (function () {
    function RoutableView() {
    }
    /**
     * Check whether the given model element is in the current viewport. Use this method
     * in your `render` implementation to skip rendering in case the element is not visible.
     * This can greatly enhance performance for large models.
     */
    RoutableView.prototype.isVisible = function (model, route, context) {
        if (context.targetKind === 'hidden') {
            // Don't hide any element for hidden rendering
            return true;
        }
        if (route.length === 0) {
            // We should hide only if we know the element's route
            return true;
        }
        var ab = model_1.getAbsoluteRouteBounds(model, route);
        var canvasBounds = model.root.canvasBounds;
        return ab.x <= canvasBounds.width
            && ab.x + ab.width >= 0
            && ab.y <= canvasBounds.height
            && ab.y + ab.height >= 0;
    };
    RoutableView = __decorate([
        inversify_1.injectable()
    ], RoutableView);
    return RoutableView;
}());
exports.RoutableView = RoutableView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/select/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/select/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var select_1 = __webpack_require__(/*! ./select */ "../../../node_modules/sprotty/lib/features/select/select.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var selectModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, select_1.SelectCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, select_1.SelectAllCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, select_1.GetSelectionCommand);
    bind(types_1.TYPES.KeyListener).to(select_1.SelectKeyboardListener);
    bind(types_1.TYPES.MouseListener).to(select_1.SelectMouseListener);
});
exports.default = selectModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/select/model.js":
/*!******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/select/model.js ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectFeature = Symbol('selectFeature');
function isSelectable(element) {
    return element.hasFeature(exports.selectFeature);
}
exports.isSelectable = isSelectable;
function isSelected(element) {
    return element !== undefined && isSelectable(element) && element.selected;
}
exports.isSelected = isSelected;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/select/select.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/select/select.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "../../../node_modules/sprotty/lib/base/commands/request-command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../../node_modules/sprotty/lib/utils/browser.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var button_handler_1 = __webpack_require__(/*! ../button/button-handler */ "../../../node_modules/sprotty/lib/features/button/button-handler.js");
var model_1 = __webpack_require__(/*! ../button/model */ "../../../node_modules/sprotty/lib/features/button/model.js");
var edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "../../../node_modules/sprotty/lib/features/edit/edit-routing.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var zorder_1 = __webpack_require__(/*! ../zorder/zorder */ "../../../node_modules/sprotty/lib/features/zorder/zorder.js");
var model_4 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/select/model.js");
/**
 * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting
 * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.
 * This action is also forwarded to the diagram server, if present, so it may react on the selection change.
 * Furthermore, the server can send such an action to the client in order to change the selection programmatically.
 */
var SelectAction = /** @class */ (function () {
    function SelectAction(selectedElementsIDs, deselectedElementsIDs) {
        if (selectedElementsIDs === void 0) { selectedElementsIDs = []; }
        if (deselectedElementsIDs === void 0) { deselectedElementsIDs = []; }
        this.selectedElementsIDs = selectedElementsIDs;
        this.deselectedElementsIDs = deselectedElementsIDs;
        this.kind = SelectAction.KIND;
    }
    SelectAction.KIND = 'elementSelected';
    return SelectAction;
}());
exports.SelectAction = SelectAction;
/**
 * Programmatic action for selecting or deselecting all elements.
 */
var SelectAllAction = /** @class */ (function () {
    /**
     * If `select` is true, all elements are selected, othewise they are deselected.
     */
    function SelectAllAction(select) {
        if (select === void 0) { select = true; }
        this.select = select;
        this.kind = SelectAllAction.KIND;
    }
    SelectAllAction.KIND = 'allSelected';
    return SelectAllAction;
}());
exports.SelectAllAction = SelectAllAction;
/**
 * Request action for retrieving the current selection.
 */
var GetSelectionAction = /** @class */ (function () {
    function GetSelectionAction(requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.requestId = requestId;
        this.kind = GetSelectionAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    GetSelectionAction.create = function () {
        return new GetSelectionAction(action_1.generateRequestId());
    };
    GetSelectionAction.KIND = 'getSelection';
    return GetSelectionAction;
}());
exports.GetSelectionAction = GetSelectionAction;
var SelectionResult = /** @class */ (function () {
    function SelectionResult(selectedElementsIDs, responseId) {
        if (selectedElementsIDs === void 0) { selectedElementsIDs = []; }
        this.selectedElementsIDs = selectedElementsIDs;
        this.responseId = responseId;
        this.kind = SelectionResult.KIND;
    }
    SelectionResult.KIND = 'selectionResult';
    return SelectionResult;
}());
exports.SelectionResult = SelectionResult;
var SelectCommand = /** @class */ (function (_super) {
    __extends(SelectCommand, _super);
    function SelectCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selected = [];
        _this.deselected = [];
        return _this;
    }
    SelectCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.selectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElement && model_4.isSelectable(element)) {
                _this.selected.push(element);
            }
        });
        this.action.deselectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElement && model_4.isSelectable(element)) {
                _this.deselected.push(element);
            }
        });
        return this.redo(context);
    };
    SelectCommand.prototype.undo = function (context) {
        for (var _i = 0, _a = this.selected; _i < _a.length; _i++) {
            var element = _a[_i];
            element.selected = false;
        }
        for (var _b = 0, _c = this.deselected; _b < _c.length; _b++) {
            var element = _c[_b];
            element.selected = true;
        }
        return context.root;
    };
    SelectCommand.prototype.redo = function (context) {
        for (var _i = 0, _a = this.deselected; _i < _a.length; _i++) {
            var element = _a[_i];
            element.selected = false;
        }
        for (var _b = 0, _c = this.selected; _b < _c.length; _b++) {
            var element = _c[_b];
            element.selected = true;
        }
        return context.root;
    };
    SelectCommand.KIND = SelectAction.KIND;
    SelectCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SelectAction])
    ], SelectCommand);
    return SelectCommand;
}(command_1.Command));
exports.SelectCommand = SelectCommand;
var SelectAllCommand = /** @class */ (function (_super) {
    __extends(SelectAllCommand, _super);
    function SelectAllCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.previousSelection = {};
        return _this;
    }
    SelectAllCommand.prototype.execute = function (context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    };
    SelectAllCommand.prototype.selectAll = function (element, newState) {
        if (model_4.isSelectable(element)) {
            this.previousSelection[element.id] = element.selected;
            element.selected = newState;
        }
        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
            var child = _a[_i];
            this.selectAll(child, newState);
        }
    };
    SelectAllCommand.prototype.undo = function (context) {
        var index = context.root.index;
        for (var id in this.previousSelection) {
            if (this.previousSelection.hasOwnProperty(id)) {
                var element = index.getById(id);
                if (element !== undefined && model_4.isSelectable(element))
                    element.selected = this.previousSelection[id];
            }
        }
        return context.root;
    };
    SelectAllCommand.prototype.redo = function (context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    };
    SelectAllCommand.KIND = SelectAllAction.KIND;
    SelectAllCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SelectAllAction])
    ], SelectAllCommand);
    return SelectAllCommand;
}(command_1.Command));
exports.SelectAllCommand = SelectAllCommand;
var SelectMouseListener = /** @class */ (function (_super) {
    __extends(SelectMouseListener, _super);
    function SelectMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wasSelected = false;
        _this.hasDragged = false;
        return _this;
    }
    SelectMouseListener.prototype.mouseDown = function (target, event) {
        var result = [];
        if (event.button === 0) {
            if (this.buttonHandlerRegistry !== undefined && target instanceof model_1.SButton && target.enabled) {
                var buttonHandler = this.buttonHandlerRegistry.get(target.type);
                if (buttonHandler !== undefined)
                    return buttonHandler.buttonPressed(target);
            }
            var selectableTarget_1 = smodel_utils_1.findParentByFeature(target, model_4.isSelectable);
            if (selectableTarget_1 !== undefined || target instanceof smodel_1.SModelRoot) {
                this.hasDragged = false;
                var deselect = [];
                // multi-selection?
                if (!browser_1.isCtrlOrCmd(event)) {
                    deselect = iterable_1.toArray(target.root.index.all()
                        .filter(function (element) { return model_4.isSelectable(element) && element.selected
                        && !(selectableTarget_1 instanceof model_2.SRoutingHandle && element === selectableTarget_1.parent); }));
                }
                if (selectableTarget_1 !== undefined) {
                    if (!selectableTarget_1.selected) {
                        this.wasSelected = false;
                        result.push(new SelectAction([selectableTarget_1.id], deselect.map(function (e) { return e.id; })));
                        result.push(new zorder_1.BringToFrontAction([selectableTarget_1.id]));
                        var routableDeselect = deselect.filter(function (e) { return e instanceof model_3.SRoutableElement; }).map(function (e) { return e.id; });
                        if (selectableTarget_1 instanceof model_3.SRoutableElement)
                            result.push(new edit_routing_1.SwitchEditModeAction([selectableTarget_1.id], routableDeselect));
                        else if (routableDeselect.length > 0)
                            result.push(new edit_routing_1.SwitchEditModeAction([], routableDeselect));
                    }
                    else if (browser_1.isCtrlOrCmd(event)) {
                        this.wasSelected = false;
                        result.push(new SelectAction([], [selectableTarget_1.id]));
                        if (selectableTarget_1 instanceof model_3.SRoutableElement)
                            result.push(new edit_routing_1.SwitchEditModeAction([], [selectableTarget_1.id]));
                    }
                    else {
                        this.wasSelected = true;
                    }
                }
                else {
                    result.push(new SelectAction([], deselect.map(function (e) { return e.id; })));
                    var routableDeselect = deselect.filter(function (e) { return e instanceof model_3.SRoutableElement; }).map(function (e) { return e.id; });
                    if (routableDeselect.length > 0)
                        result.push(new edit_routing_1.SwitchEditModeAction([], routableDeselect));
                }
            }
        }
        return result;
    };
    SelectMouseListener.prototype.mouseMove = function (target, event) {
        this.hasDragged = true;
        return [];
    };
    SelectMouseListener.prototype.mouseUp = function (target, event) {
        if (event.button === 0) {
            if (!this.hasDragged) {
                var selectableTarget = smodel_utils_1.findParentByFeature(target, model_4.isSelectable);
                if (selectableTarget !== undefined && this.wasSelected) {
                    return [new SelectAction([selectableTarget.id], [])];
                }
            }
        }
        this.hasDragged = false;
        return [];
    };
    SelectMouseListener.prototype.decorate = function (vnode, element) {
        var selectableTarget = smodel_utils_1.findParentByFeature(element, model_4.isSelectable);
        if (selectableTarget !== undefined)
            vnode_utils_1.setClass(vnode, 'selected', selectableTarget.selected);
        return vnode;
    };
    __decorate([
        inversify_1.inject(button_handler_1.ButtonHandlerRegistry), inversify_1.optional(),
        __metadata("design:type", button_handler_1.ButtonHandlerRegistry)
    ], SelectMouseListener.prototype, "buttonHandlerRegistry", void 0);
    return SelectMouseListener;
}(mouse_tool_1.MouseListener));
exports.SelectMouseListener = SelectMouseListener;
var GetSelectionCommand = /** @class */ (function (_super) {
    __extends(GetSelectionCommand, _super);
    function GetSelectionCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.previousSelection = {};
        return _this;
    }
    GetSelectionCommand.prototype.retrieveResult = function (context) {
        var selection = context.root.index.all()
            .filter(function (e) { return model_4.isSelectable(e) && e.selected; })
            .map(function (e) { return e.id; });
        return new SelectionResult(iterable_1.toArray(selection), this.action.requestId);
    };
    GetSelectionCommand.KIND = GetSelectionAction.KIND;
    GetSelectionCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [GetSelectionAction])
    ], GetSelectionCommand);
    return GetSelectionCommand;
}(request_command_1.ModelRequestCommand));
exports.GetSelectionCommand = GetSelectionCommand;
var SelectKeyboardListener = /** @class */ (function (_super) {
    __extends(SelectKeyboardListener, _super);
    function SelectKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectKeyboardListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyA', 'ctrlCmd')) {
            return [new SelectAllAction()];
        }
        return [];
    };
    return SelectKeyboardListener;
}(key_tool_1.KeyListener));
exports.SelectKeyboardListener = SelectKeyboardListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/undo-redo/di.config.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/undo-redo/di.config.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var undo_redo_1 = __webpack_require__(/*! ./undo-redo */ "../../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
var undoRedoModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.KeyListener).to(undo_redo_1.UndoRedoKeyListener);
});
exports.default = undoRedoModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/undo-redo/undo-redo.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var UndoAction = /** @class */ (function () {
    function UndoAction() {
        this.kind = UndoAction.KIND;
    }
    UndoAction.KIND = 'undo';
    return UndoAction;
}());
exports.UndoAction = UndoAction;
var RedoAction = /** @class */ (function () {
    function RedoAction() {
        this.kind = RedoAction.KIND;
    }
    RedoAction.KIND = 'redo';
    return RedoAction;
}());
exports.RedoAction = RedoAction;
var UndoRedoKeyListener = /** @class */ (function (_super) {
    __extends(UndoRedoKeyListener, _super);
    function UndoRedoKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UndoRedoKeyListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyZ', 'ctrlCmd'))
            return [new UndoAction];
        if (keyboard_1.matchesKeystroke(event, 'KeyZ', 'ctrlCmd', 'shift'))
            return [new RedoAction];
        return [];
    };
    return UndoRedoKeyListener;
}(key_tool_1.KeyListener));
exports.UndoRedoKeyListener = UndoRedoKeyListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/update/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/update/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var update_model_1 = __webpack_require__(/*! ./update-model */ "../../../node_modules/sprotty/lib/features/update/update-model.js");
var updateModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, update_model_1.UpdateModelCommand);
});
exports.default = updateModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/update/model-matching.js":
/*!***************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/update/model-matching.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
function forEachMatch(matchResult, callback) {
    for (var id in matchResult) {
        if (matchResult.hasOwnProperty(id))
            callback(id, matchResult[id]);
    }
}
exports.forEachMatch = forEachMatch;
var ModelMatcher = /** @class */ (function () {
    function ModelMatcher() {
    }
    ModelMatcher.prototype.match = function (left, right) {
        var result = {};
        this.matchLeft(left, result);
        this.matchRight(right, result);
        return result;
    };
    ModelMatcher.prototype.matchLeft = function (element, result, parentId) {
        var match = result[element.id];
        if (match !== undefined) {
            match.left = element;
            match.leftParentId = parentId;
        }
        else {
            match = {
                left: element,
                leftParentId: parentId
            };
            result[element.id] = match;
        }
        if (smodel_1.isParent(element)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.matchLeft(child, result, element.id);
            }
        }
    };
    ModelMatcher.prototype.matchRight = function (element, result, parentId) {
        var match = result[element.id];
        if (match !== undefined) {
            match.right = element;
            match.rightParentId = parentId;
        }
        else {
            match = {
                right: element,
                rightParentId: parentId
            };
            result[element.id] = match;
        }
        if (smodel_1.isParent(element)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.matchRight(child, result, element.id);
            }
        }
    };
    return ModelMatcher;
}());
exports.ModelMatcher = ModelMatcher;
function applyMatches(root, matches) {
    var index;
    if (root instanceof smodel_1.SModelRoot) {
        index = root.index;
    }
    else {
        index = new smodel_1.SModelIndex();
        index.add(root);
    }
    for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
        var match = matches_1[_i];
        var newElementInserted = false;
        if (match.left !== undefined && match.leftParentId !== undefined) {
            var parent_1 = index.getById(match.leftParentId);
            if (parent_1 !== undefined && parent_1.children !== undefined) {
                var i = parent_1.children.indexOf(match.left);
                if (i >= 0) {
                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {
                        parent_1.children.splice(i, 1, match.right);
                        newElementInserted = true;
                    }
                    else {
                        parent_1.children.splice(i, 1);
                    }
                }
                index.remove(match.left);
            }
        }
        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {
            var parent_2 = index.getById(match.rightParentId);
            if (parent_2 !== undefined) {
                if (parent_2.children === undefined)
                    parent_2.children = [];
                parent_2.children.push(match.right);
            }
        }
    }
}
exports.applyMatches = applyMatches;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/update/update-model.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/update/update-model.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../../node_modules/sprotty/lib/base/animations/animation.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var fade_1 = __webpack_require__(/*! ../fade/fade */ "../../../node_modules/sprotty/lib/features/fade/fade.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var move_1 = __webpack_require__(/*! ../move/move */ "../../../node_modules/sprotty/lib/features/move/move.js");
var model_1 = __webpack_require__(/*! ../fade/model */ "../../../node_modules/sprotty/lib/features/fade/model.js");
var model_2 = __webpack_require__(/*! ../move/model */ "../../../node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var viewport_root_1 = __webpack_require__(/*! ../viewport/viewport-root */ "../../../node_modules/sprotty/lib/features/viewport/viewport-root.js");
var model_4 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var model_matching_1 = __webpack_require__(/*! ./model-matching */ "../../../node_modules/sprotty/lib/features/update/model-matching.js");
var resize_1 = __webpack_require__(/*! ../bounds/resize */ "../../../node_modules/sprotty/lib/features/bounds/resize.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var model_5 = __webpack_require__(/*! ../viewport/model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var model_6 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
/**
 * Sent from the model source to the client in order to update the model. If no model is present yet,
 * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.
 */
var UpdateModelAction = /** @class */ (function () {
    function UpdateModelAction(input, animate, cause) {
        if (animate === void 0) { animate = true; }
        this.animate = animate;
        this.cause = cause;
        this.kind = UpdateModelAction.KIND;
        if (input.id !== undefined)
            this.newRoot = input;
        else
            this.matches = input;
    }
    UpdateModelAction.KIND = 'updateModel';
    return UpdateModelAction;
}());
exports.UpdateModelAction = UpdateModelAction;
var UpdateModelCommand = /** @class */ (function (_super) {
    __extends(UpdateModelCommand, _super);
    function UpdateModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    UpdateModelCommand.prototype.execute = function (context) {
        var newRoot;
        if (this.action.newRoot !== undefined) {
            newRoot = context.modelFactory.createRoot(this.action.newRoot);
        }
        else {
            newRoot = context.modelFactory.createRoot(context.root);
            if (this.action.matches !== undefined)
                this.applyMatches(newRoot, this.action.matches, context);
        }
        this.oldRoot = context.root;
        this.newRoot = newRoot;
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    };
    UpdateModelCommand.prototype.performUpdate = function (oldRoot, newRoot, context) {
        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {
            var matchResult = void 0;
            if (this.action.matches === undefined) {
                var matcher = new model_matching_1.ModelMatcher();
                matchResult = matcher.match(oldRoot, newRoot);
            }
            else {
                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);
            }
            var animationOrRoot = this.computeAnimation(newRoot, matchResult, context);
            if (animationOrRoot instanceof animation_1.Animation)
                return animationOrRoot.start();
            else
                return animationOrRoot;
        }
        else {
            if (oldRoot.type === newRoot.type && geometry_1.isValidDimension(oldRoot.canvasBounds))
                newRoot.canvasBounds = oldRoot.canvasBounds;
            if (model_5.isViewport(oldRoot) && model_5.isViewport(newRoot)) {
                newRoot.zoom = oldRoot.zoom;
                newRoot.scroll = oldRoot.scroll;
            }
            return newRoot;
        }
    };
    UpdateModelCommand.prototype.applyMatches = function (root, matches, context) {
        var index = root.index;
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            if (match.left !== undefined) {
                var element = index.getById(match.left.id);
                if (element instanceof smodel_1.SChildElement)
                    element.parent.remove(element);
            }
            if (match.right !== undefined) {
                var element = context.modelFactory.createElement(match.right);
                var parent_1 = void 0;
                if (match.rightParentId !== undefined)
                    parent_1 = index.getById(match.rightParentId);
                if (parent_1 instanceof smodel_1.SParentElement)
                    parent_1.add(element);
                else
                    root.add(element);
            }
        }
    };
    UpdateModelCommand.prototype.convertToMatchResult = function (matches, leftRoot, rightRoot) {
        var result = {};
        for (var _i = 0, matches_2 = matches; _i < matches_2.length; _i++) {
            var match = matches_2[_i];
            var converted = {};
            var id = undefined;
            if (match.left !== undefined) {
                id = match.left.id;
                converted.left = leftRoot.index.getById(id);
                converted.leftParentId = match.leftParentId;
            }
            if (match.right !== undefined) {
                id = match.right.id;
                converted.right = rightRoot.index.getById(id);
                converted.rightParentId = match.rightParentId;
            }
            if (id !== undefined)
                result[id] = converted;
        }
        return result;
    };
    UpdateModelCommand.prototype.computeAnimation = function (newRoot, matchResult, context) {
        var _this = this;
        var animationData = {
            fades: []
        };
        model_matching_1.forEachMatch(matchResult, function (id, match) {
            if (match.left !== undefined && match.right !== undefined) {
                // The element is still there, but may have been moved
                _this.updateElement(match.left, match.right, animationData);
            }
            else if (match.right !== undefined) {
                // An element has been added
                var right = match.right;
                if (model_1.isFadeable(right)) {
                    right.opacity = 0;
                    animationData.fades.push({
                        element: right,
                        type: 'in'
                    });
                }
            }
            else if (match.left instanceof smodel_1.SChildElement) {
                // An element has been removed
                var left = match.left;
                if (model_1.isFadeable(left) && match.leftParentId !== undefined) {
                    if (newRoot.index.getById(left.id) === undefined) {
                        var parent_2 = newRoot.index.getById(match.leftParentId);
                        if (parent_2 instanceof smodel_1.SParentElement) {
                            var leftCopy = context.modelFactory.createElement(left);
                            parent_2.add(leftCopy);
                            animationData.fades.push({
                                element: leftCopy,
                                type: 'out'
                            });
                        }
                    }
                }
            }
        });
        var animations = this.createAnimations(animationData, newRoot, context);
        if (animations.length >= 2) {
            return new animation_1.CompoundAnimation(newRoot, context, animations);
        }
        else if (animations.length === 1) {
            return animations[0];
        }
        else {
            return newRoot;
        }
    };
    UpdateModelCommand.prototype.updateElement = function (left, right, animationData) {
        if (model_2.isLocateable(left) && model_2.isLocateable(right)) {
            var leftPos = left.position;
            var rightPos = right.position;
            if (!geometry_1.almostEquals(leftPos.x, rightPos.x) || !geometry_1.almostEquals(leftPos.y, rightPos.y)) {
                if (animationData.moves === undefined)
                    animationData.moves = [];
                animationData.moves.push({
                    element: right,
                    fromPosition: leftPos,
                    toPosition: rightPos
                });
                right.position = leftPos;
            }
        }
        if (model_3.isSizeable(left) && model_3.isSizeable(right)) {
            if (!geometry_1.isValidDimension(right.bounds)) {
                right.bounds = {
                    x: right.bounds.x,
                    y: right.bounds.y,
                    width: left.bounds.width,
                    height: left.bounds.height
                };
            }
            else if (!geometry_1.almostEquals(left.bounds.width, right.bounds.width)
                || !geometry_1.almostEquals(left.bounds.height, right.bounds.height)) {
                if (animationData.resizes === undefined)
                    animationData.resizes = [];
                animationData.resizes.push({
                    element: right,
                    fromDimension: {
                        width: left.bounds.width,
                        height: left.bounds.height,
                    },
                    toDimension: {
                        width: right.bounds.width,
                        height: right.bounds.height,
                    }
                });
            }
        }
        if (left instanceof model_6.SRoutableElement && right instanceof model_6.SRoutableElement && this.edgeRouterRegistry) {
            if (animationData.edgeMementi === undefined)
                animationData.edgeMementi = [];
            animationData.edgeMementi.push({
                edge: right,
                before: this.takeSnapshot(left),
                after: this.takeSnapshot(right),
            });
        }
        if (model_4.isSelectable(left) && model_4.isSelectable(right)) {
            right.selected = left.selected;
        }
        if (left instanceof smodel_1.SModelRoot && right instanceof smodel_1.SModelRoot) {
            right.canvasBounds = left.canvasBounds;
        }
        if (left instanceof viewport_root_1.ViewportRootElement && right instanceof viewport_root_1.ViewportRootElement) {
            right.scroll = left.scroll;
            right.zoom = left.zoom;
        }
    };
    UpdateModelCommand.prototype.takeSnapshot = function (edge) {
        var router = this.edgeRouterRegistry.get(edge.routerKind);
        return router.takeSnapshot(edge);
    };
    UpdateModelCommand.prototype.createAnimations = function (data, root, context) {
        var animations = [];
        if (data.fades.length > 0) {
            animations.push(new fade_1.FadeAnimation(root, data.fades, context, true));
        }
        if (data.moves !== undefined && data.moves.length > 0) {
            var movesMap = new Map;
            for (var _i = 0, _a = data.moves; _i < _a.length; _i++) {
                var move = _a[_i];
                movesMap.set(move.element.id, move);
            }
            animations.push(new move_1.MoveAnimation(root, movesMap, context, false));
        }
        if (data.resizes !== undefined && data.resizes.length > 0) {
            var resizesMap = new Map;
            for (var _b = 0, _c = data.resizes; _b < _c.length; _b++) {
                var resize = _c[_b];
                resizesMap.set(resize.element.id, resize);
            }
            animations.push(new resize_1.ResizeAnimation(root, resizesMap, context, false));
        }
        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {
            animations.push(new move_1.MorphEdgesAnimation(root, data.edgeMementi, context, false));
        }
        return animations;
    };
    UpdateModelCommand.prototype.undo = function (context) {
        return this.performUpdate(this.newRoot, this.oldRoot, context);
    };
    UpdateModelCommand.prototype.redo = function (context) {
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    };
    UpdateModelCommand.KIND = UpdateModelAction.KIND;
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry), inversify_1.optional(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], UpdateModelCommand.prototype, "edgeRouterRegistry", void 0);
    UpdateModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [UpdateModelAction])
    ], UpdateModelCommand);
    return UpdateModelCommand;
}(command_1.Command));
exports.UpdateModelCommand = UpdateModelCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/center-fit.js":
/*!*************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/center-fit.js ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "../../../node_modules/sprotty/lib/utils/keyboard.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js");
var model_3 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
/**
 * Triggered when the user requests the viewer to center on the current model. The resulting
 * CenterCommand changes the scroll setting of the viewport accordingly.
 * It also resets the zoom to its default if retainZoom is false.
 * This action can also be sent from the model source to the client in order to perform such a
 * viewport change programmatically.
 */
var CenterAction = /** @class */ (function () {
    function CenterAction(elementIds, animate, retainZoom) {
        if (animate === void 0) { animate = true; }
        if (retainZoom === void 0) { retainZoom = false; }
        this.elementIds = elementIds;
        this.animate = animate;
        this.retainZoom = retainZoom;
        this.kind = CenterAction.KIND;
    }
    CenterAction.KIND = 'center';
    return CenterAction;
}());
exports.CenterAction = CenterAction;
/**
 * Triggered when the user requests the viewer to fit its content to the available drawing area.
 * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model
 * can be shown completely. This action can also be sent from the model source to the client in order
 * to perform such a viewport change programmatically.
 */
var FitToScreenAction = /** @class */ (function () {
    function FitToScreenAction(elementIds, padding, maxZoom, animate) {
        if (animate === void 0) { animate = true; }
        this.elementIds = elementIds;
        this.padding = padding;
        this.maxZoom = maxZoom;
        this.animate = animate;
        this.kind = FitToScreenAction.KIND;
    }
    FitToScreenAction.KIND = 'fit';
    return FitToScreenAction;
}());
exports.FitToScreenAction = FitToScreenAction;
var BoundsAwareViewportCommand = /** @class */ (function (_super) {
    __extends(BoundsAwareViewportCommand, _super);
    function BoundsAwareViewportCommand(animate) {
        var _this = _super.call(this) || this;
        _this.animate = animate;
        return _this;
    }
    BoundsAwareViewportCommand.prototype.initialize = function (model) {
        var _this = this;
        if (model_3.isViewport(model)) {
            this.oldViewport = {
                scroll: model.scroll,
                zoom: model.zoom
            };
            var allBounds_1 = [];
            this.getElementIds().forEach(function (id) {
                var element = model.index.getById(id);
                if (element && model_1.isBoundsAware(element))
                    allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
            });
            if (allBounds_1.length === 0) {
                model.index.all().forEach(function (element) {
                    if (model_2.isSelectable(element) && element.selected && model_1.isBoundsAware(element))
                        allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
                });
            }
            if (allBounds_1.length === 0) {
                model.index.all().forEach(function (element) {
                    if (model_1.isBoundsAware(element))
                        allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
                });
            }
            if (allBounds_1.length !== 0) {
                var bounds = allBounds_1.reduce(function (b0, b1) { return geometry_1.combine(b0, b1); });
                if (geometry_1.isValidDimension(bounds))
                    this.newViewport = this.getNewViewport(bounds, model);
            }
        }
    };
    BoundsAwareViewportCommand.prototype.boundsInViewport = function (element, bounds, viewport) {
        if (element instanceof smodel_1.SChildElement && element.parent !== viewport)
            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds), viewport);
        else
            return bounds;
    };
    BoundsAwareViewportCommand.prototype.execute = function (context) {
        this.initialize(context.root);
        return this.redo(context);
    };
    BoundsAwareViewportCommand.prototype.undo = function (context) {
        var model = context.root;
        if (model_3.isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate)
                return new viewport_1.ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();
            else {
                model.scroll = this.oldViewport.scroll;
                model.zoom = this.oldViewport.zoom;
            }
        }
        return model;
    };
    BoundsAwareViewportCommand.prototype.redo = function (context) {
        var model = context.root;
        if (model_3.isViewport(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate) {
                return new viewport_1.ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();
            }
            else {
                model.scroll = this.newViewport.scroll;
                model.zoom = this.newViewport.zoom;
            }
        }
        return model;
    };
    BoundsAwareViewportCommand.prototype.equal = function (vp1, vp2) {
        return vp1.zoom === vp2.zoom && vp1.scroll.x === vp2.scroll.x && vp1.scroll.y === vp2.scroll.y;
    };
    BoundsAwareViewportCommand = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [Boolean])
    ], BoundsAwareViewportCommand);
    return BoundsAwareViewportCommand;
}(command_1.Command));
exports.BoundsAwareViewportCommand = BoundsAwareViewportCommand;
var CenterCommand = /** @class */ (function (_super) {
    __extends(CenterCommand, _super);
    function CenterCommand(action) {
        var _this = _super.call(this, action.animate) || this;
        _this.action = action;
        return _this;
    }
    CenterCommand.prototype.getElementIds = function () {
        return this.action.elementIds;
    };
    CenterCommand.prototype.getNewViewport = function (bounds, model) {
        if (!geometry_1.isValidDimension(model.canvasBounds)) {
            return undefined;
        }
        var zoom = (this.action.retainZoom && model_3.isViewport(model)) ? model.zoom : 1;
        var c = geometry_1.center(bounds);
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    };
    CenterCommand.KIND = CenterAction.KIND;
    CenterCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [CenterAction])
    ], CenterCommand);
    return CenterCommand;
}(BoundsAwareViewportCommand));
exports.CenterCommand = CenterCommand;
var FitToScreenCommand = /** @class */ (function (_super) {
    __extends(FitToScreenCommand, _super);
    function FitToScreenCommand(action) {
        var _this = _super.call(this, action.animate) || this;
        _this.action = action;
        return _this;
    }
    FitToScreenCommand.prototype.getElementIds = function () {
        return this.action.elementIds;
    };
    FitToScreenCommand.prototype.getNewViewport = function (bounds, model) {
        if (!geometry_1.isValidDimension(model.canvasBounds)) {
            return undefined;
        }
        var c = geometry_1.center(bounds);
        var delta = this.action.padding === undefined
            ? 0
            : 2 * this.action.padding;
        var zoom = Math.min(model.canvasBounds.width / (bounds.width + delta), model.canvasBounds.height / (bounds.height + delta));
        if (this.action.maxZoom !== undefined)
            zoom = Math.min(zoom, this.action.maxZoom);
        if (zoom === Infinity) {
            zoom = 1;
        }
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    };
    FitToScreenCommand.KIND = FitToScreenAction.KIND;
    FitToScreenCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [FitToScreenAction])
    ], FitToScreenCommand);
    return FitToScreenCommand;
}(BoundsAwareViewportCommand));
exports.FitToScreenCommand = FitToScreenCommand;
var CenterKeyboardListener = /** @class */ (function (_super) {
    __extends(CenterKeyboardListener, _super);
    function CenterKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CenterKeyboardListener.prototype.keyDown = function (element, event) {
        if (keyboard_1.matchesKeystroke(event, 'KeyC', 'ctrlCmd', 'shift'))
            return [new CenterAction([])];
        if (keyboard_1.matchesKeystroke(event, 'KeyF', 'ctrlCmd', 'shift'))
            return [new FitToScreenAction([])];
        return [];
    };
    return CenterKeyboardListener;
}(key_tool_1.KeyListener));
exports.CenterKeyboardListener = CenterKeyboardListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/di.config.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/di.config.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var center_fit_1 = __webpack_require__(/*! ./center-fit */ "../../../node_modules/sprotty/lib/features/viewport/center-fit.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js");
var scroll_1 = __webpack_require__(/*! ./scroll */ "../../../node_modules/sprotty/lib/features/viewport/scroll.js");
var zoom_1 = __webpack_require__(/*! ./zoom */ "../../../node_modules/sprotty/lib/features/viewport/zoom.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var viewportModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, center_fit_1.CenterCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, center_fit_1.FitToScreenCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, viewport_1.SetViewportCommand);
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, viewport_1.GetViewportCommand);
    bind(types_1.TYPES.KeyListener).to(center_fit_1.CenterKeyboardListener);
    bind(types_1.TYPES.MouseListener).to(scroll_1.ScrollMouseListener);
    bind(types_1.TYPES.MouseListener).to(zoom_1.ZoomMouseListener);
});
exports.default = viewportModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/model.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/model.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
exports.viewportFeature = Symbol('viewportFeature');
function isViewport(element) {
    return element instanceof smodel_1.SModelRoot
        && element.hasFeature(exports.viewportFeature)
        && 'zoom' in element
        && 'scroll' in element;
}
exports.isViewport = isViewport;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/scroll.js":
/*!*********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/scroll.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var model_2 = __webpack_require__(/*! ../move/model */ "../../../node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
function isScrollable(element) {
    return 'scroll' in element;
}
exports.isScrollable = isScrollable;
var ScrollMouseListener = /** @class */ (function (_super) {
    __extends(ScrollMouseListener, _super);
    function ScrollMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScrollMouseListener.prototype.mouseDown = function (target, event) {
        var moveable = smodel_utils_1.findParentByFeature(target, model_2.isMoveable);
        if (moveable === undefined && !(target instanceof model_3.SRoutingHandle)) {
            var viewport = smodel_utils_1.findParentByFeature(target, model_1.isViewport);
            if (viewport)
                this.lastScrollPosition = { x: event.pageX, y: event.pageY };
            else
                this.lastScrollPosition = undefined;
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseMove = function (target, event) {
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.lastScrollPosition) {
            var viewport = smodel_utils_1.findParentByFeature(target, model_1.isViewport);
            if (viewport) {
                var dx = (event.pageX - this.lastScrollPosition.x) / viewport.zoom;
                var dy = (event.pageY - this.lastScrollPosition.y) / viewport.zoom;
                var newViewport = {
                    scroll: {
                        x: viewport.scroll.x - dx,
                        y: viewport.scroll.y - dy,
                    },
                    zoom: viewport.zoom
                };
                this.lastScrollPosition = { x: event.pageX, y: event.pageY };
                return [new viewport_1.SetViewportAction(viewport.id, newViewport, false)];
            }
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof smodel_1.SModelRoot && event.buttons === 0)
            this.mouseUp(target, event);
        return [];
    };
    ScrollMouseListener.prototype.mouseUp = function (target, event) {
        this.lastScrollPosition = undefined;
        return [];
    };
    return ScrollMouseListener;
}(mouse_tool_1.MouseListener));
exports.ScrollMouseListener = ScrollMouseListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/viewport-root.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/viewport-root.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var model_2 = __webpack_require__(/*! ../export/model */ "../../../node_modules/sprotty/lib/features/export/model.js");
/**
 * Model root element that defines a viewport, so it transforms the coordinate system with
 * a `scroll` translation and a `zoom` scaling.
 */
var ViewportRootElement = /** @class */ (function (_super) {
    __extends(ViewportRootElement, _super);
    function ViewportRootElement(index) {
        var _this = _super.call(this, index) || this;
        _this.scroll = { x: 0, y: 0 };
        _this.zoom = 1;
        return _this;
    }
    ViewportRootElement.prototype.localToParent = function (point) {
        var result = {
            x: (point.x - this.scroll.x) * this.zoom,
            y: (point.y - this.scroll.y) * this.zoom,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point)) {
            result.width = point.width * this.zoom;
            result.height = point.height * this.zoom;
        }
        return result;
    };
    ViewportRootElement.prototype.parentToLocal = function (point) {
        var result = {
            x: (point.x / this.zoom) + this.scroll.x,
            y: (point.y / this.zoom) + this.scroll.y,
            width: -1,
            height: -1
        };
        if (geometry_1.isBounds(point) && geometry_1.isValidDimension(point)) {
            result.width = point.width / this.zoom;
            result.height = point.height / this.zoom;
        }
        return result;
    };
    ViewportRootElement.DEFAULT_FEATURES = [model_1.viewportFeature, model_2.exportFeature];
    return ViewportRootElement;
}(smodel_1.SModelRoot));
exports.ViewportRootElement = ViewportRootElement;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/viewport.js":
/*!***********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/viewport.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "../../../node_modules/sprotty/lib/base/animations/animation.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "../../../node_modules/sprotty/lib/base/commands/request-command.js");
var SetViewportAction = /** @class */ (function () {
    function SetViewportAction(elementId, newViewport, animate) {
        this.elementId = elementId;
        this.newViewport = newViewport;
        this.animate = animate;
        this.kind = SetViewportAction.KIND;
    }
    SetViewportAction.KIND = 'viewport';
    return SetViewportAction;
}());
exports.SetViewportAction = SetViewportAction;
/**
 * Request action for retrieving the current viewport and canvas bounds.
 */
var GetViewportAction = /** @class */ (function () {
    function GetViewportAction(requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.requestId = requestId;
        this.kind = GetViewportAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    GetViewportAction.create = function () {
        return new GetViewportAction(action_1.generateRequestId());
    };
    GetViewportAction.KIND = 'getViewport';
    return GetViewportAction;
}());
exports.GetViewportAction = GetViewportAction;
var ViewportResult = /** @class */ (function () {
    function ViewportResult(viewport, canvasBounds, responseId) {
        this.viewport = viewport;
        this.canvasBounds = canvasBounds;
        this.responseId = responseId;
        this.kind = ViewportResult.KIND;
    }
    ViewportResult.KIND = 'viewportResult';
    return ViewportResult;
}());
exports.ViewportResult = ViewportResult;
var SetViewportCommand = /** @class */ (function (_super) {
    __extends(SetViewportCommand, _super);
    function SetViewportCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.newViewport = action.newViewport;
        return _this;
    }
    SetViewportCommand_1 = SetViewportCommand;
    SetViewportCommand.prototype.execute = function (context) {
        var model = context.root;
        var element = model.index.getById(this.action.elementId);
        if (element && model_1.isViewport(element)) {
            this.element = element;
            this.oldViewport = {
                scroll: this.element.scroll,
                zoom: this.element.zoom,
            };
            if (this.action.animate)
                return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();
            else {
                this.element.scroll = this.newViewport.scroll;
                this.element.zoom = this.newViewport.zoom;
            }
        }
        return model;
    };
    SetViewportCommand.prototype.undo = function (context) {
        return new ViewportAnimation(this.element, this.newViewport, this.oldViewport, context).start();
    };
    SetViewportCommand.prototype.redo = function (context) {
        return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();
    };
    SetViewportCommand.prototype.merge = function (command, context) {
        if (!this.action.animate && command instanceof SetViewportCommand_1 && this.element === command.element) {
            this.newViewport = command.newViewport;
            return true;
        }
        return false;
    };
    var SetViewportCommand_1;
    SetViewportCommand.KIND = SetViewportAction.KIND;
    SetViewportCommand = SetViewportCommand_1 = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [SetViewportAction])
    ], SetViewportCommand);
    return SetViewportCommand;
}(command_1.MergeableCommand));
exports.SetViewportCommand = SetViewportCommand;
var GetViewportCommand = /** @class */ (function (_super) {
    __extends(GetViewportCommand, _super);
    function GetViewportCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    GetViewportCommand.prototype.retrieveResult = function (context) {
        var elem = context.root;
        var viewport;
        if (model_1.isViewport(elem)) {
            viewport = { scroll: elem.scroll, zoom: elem.zoom };
        }
        else {
            viewport = { scroll: geometry_1.ORIGIN_POINT, zoom: 1 };
        }
        return new ViewportResult(viewport, elem.canvasBounds, this.action.requestId);
    };
    GetViewportCommand.KIND = GetViewportAction.KIND;
    GetViewportCommand = __decorate([
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [GetViewportAction])
    ], GetViewportCommand);
    return GetViewportCommand;
}(request_command_1.ModelRequestCommand));
exports.GetViewportCommand = GetViewportCommand;
var ViewportAnimation = /** @class */ (function (_super) {
    __extends(ViewportAnimation, _super);
    function ViewportAnimation(element, oldViewport, newViewport, context) {
        var _this = _super.call(this, context) || this;
        _this.element = element;
        _this.oldViewport = oldViewport;
        _this.newViewport = newViewport;
        _this.context = context;
        _this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);
        return _this;
    }
    ViewportAnimation.prototype.tween = function (t, context) {
        this.element.scroll = {
            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,
            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y
        };
        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);
        return context.root;
    };
    return ViewportAnimation;
}(animation_1.Animation));
exports.ViewportAnimation = ViewportAnimation;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/viewport/zoom.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/viewport/zoom.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "../../../node_modules/sprotty/lib/utils/browser.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/features/viewport/model.js");
function isZoomable(element) {
    return 'zoom' in element;
}
exports.isZoomable = isZoomable;
function getZoom(label) {
    var zoom = 1;
    var viewport = smodel_utils_1.findParentByFeature(label, model_1.isViewport);
    if (viewport) {
        zoom = viewport.zoom;
    }
    return zoom;
}
exports.getZoom = getZoom;
var ZoomMouseListener = /** @class */ (function (_super) {
    __extends(ZoomMouseListener, _super);
    function ZoomMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZoomMouseListener.prototype.wheel = function (target, event) {
        var viewport = smodel_utils_1.findParentByFeature(target, model_1.isViewport);
        if (viewport) {
            var newZoom = this.getZoomFactor(event);
            var viewportOffset = this.getViewportOffset(target.root, event);
            var offsetFactor = 1.0 / (newZoom * viewport.zoom) - 1.0 / viewport.zoom;
            var newViewport = {
                scroll: {
                    x: viewport.scroll.x - offsetFactor * viewportOffset.x,
                    y: viewport.scroll.y - offsetFactor * viewportOffset.y
                },
                zoom: viewport.zoom * newZoom
            };
            return [new viewport_1.SetViewportAction(viewport.id, newViewport, false)];
        }
        return [];
    };
    ZoomMouseListener.prototype.getViewportOffset = function (root, event) {
        var canvasBounds = root.canvasBounds;
        var windowScroll = browser_1.getWindowScroll();
        return {
            x: event.clientX + windowScroll.x - canvasBounds.x,
            y: event.clientY + windowScroll.y - canvasBounds.y
        };
    };
    ZoomMouseListener.prototype.getZoomFactor = function (event) {
        if (event.deltaMode === event.DOM_DELTA_PAGE)
            return Math.exp(-event.deltaY * 0.5);
        else if (event.deltaMode === event.DOM_DELTA_LINE)
            return Math.exp(-event.deltaY * 0.05);
        else // deltaMode === DOM_DELTA_PIXEL
            return Math.exp(-event.deltaY * 0.005);
    };
    return ZoomMouseListener;
}(mouse_tool_1.MouseListener));
exports.ZoomMouseListener = ZoomMouseListener;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/zorder/di.config.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/zorder/di.config.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var zorder_1 = __webpack_require__(/*! ./zorder */ "../../../node_modules/sprotty/lib/features/zorder/zorder.js");
var zorderModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, zorder_1.BringToFrontCommand);
});
exports.default = zorderModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/features/zorder/zorder.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/features/zorder/zorder.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
/**
 * Action to render the selected elements in front of others by manipulating the z-order.
 */
var BringToFrontAction = /** @class */ (function () {
    function BringToFrontAction(elementIDs) {
        this.elementIDs = elementIDs;
        this.kind = BringToFrontAction.KIND;
    }
    BringToFrontAction.KIND = 'bringToFront';
    return BringToFrontAction;
}());
exports.BringToFrontAction = BringToFrontAction;
var BringToFrontCommand = /** @class */ (function (_super) {
    __extends(BringToFrontCommand, _super);
    function BringToFrontCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selected = [];
        return _this;
    }
    BringToFrontCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.elementIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof model_1.SRoutableElement) {
                if (element.source)
                    _this.addToSelection(element.source);
                if (element.target)
                    _this.addToSelection(element.target);
            }
            if (element instanceof smodel_1.SChildElement) {
                _this.addToSelection(element);
            }
            _this.includeConnectedEdges(element);
        });
        return this.redo(context);
    };
    BringToFrontCommand.prototype.includeConnectedEdges = function (element) {
        var _this = this;
        if (element instanceof model_1.SConnectableElement) {
            element.incomingEdges.forEach(function (edge) { return _this.addToSelection(edge); });
            element.outgoingEdges.forEach(function (edge) { return _this.addToSelection(edge); });
        }
        if (element instanceof smodel_1.SParentElement) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.includeConnectedEdges(child);
            }
        }
    };
    BringToFrontCommand.prototype.addToSelection = function (element) {
        this.selected.push({
            element: element,
            index: element.parent.children.indexOf(element)
        });
    };
    BringToFrontCommand.prototype.undo = function (context) {
        for (var i = this.selected.length - 1; i >= 0; i--) {
            var selection = this.selected[i];
            var element = selection.element;
            element.parent.move(element, selection.index);
        }
        return context.root;
    };
    BringToFrontCommand.prototype.redo = function (context) {
        for (var i = 0; i < this.selected.length; i++) {
            this.bringToFront(this.selected[i]);
        }
        return context.root;
    };
    BringToFrontCommand.prototype.bringToFront = function (selection) {
        var element = selection.element;
        var childrenLength = element.parent.children.length;
        element.parent.move(element, childrenLength - 1);
    };
    BringToFrontCommand.KIND = BringToFrontAction.KIND;
    BringToFrontCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [BringToFrontAction])
    ], BringToFrontCommand);
    return BringToFrontCommand;
}(command_1.Command));
exports.BringToFrontCommand = BringToFrontCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/graph/di.config.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/graph/di.config.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var sgraph_factory_1 = __webpack_require__(/*! ./sgraph-factory */ "../../../node_modules/sprotty/lib/graph/sgraph-factory.js");
var graphModule = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    rebind(types_1.TYPES.IModelFactory).to(sgraph_factory_1.SGraphFactory).inSingletonScope();
});
exports.default = graphModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/graph/sgraph-factory.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/graph/sgraph-factory.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var sgraph_1 = __webpack_require__(/*! ./sgraph */ "../../../node_modules/sprotty/lib/graph/sgraph.js");
var model_1 = __webpack_require__(/*! ../features/button/model */ "../../../node_modules/sprotty/lib/features/button/model.js");
/**
 * @deprecated
 * Subclassing SModelFactory is discouraged. Use `registerModelElement`
 * or `configureModelElement` instead.
 */
var SGraphFactory = /** @class */ (function (_super) {
    __extends(SGraphFactory, _super);
    function SGraphFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultGraphFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SGraph.DEFAULT_FEATURES);
        _this.defaultNodeFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SNode.DEFAULT_FEATURES);
        _this.defaultPortFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SPort.DEFAULT_FEATURES);
        _this.defaultEdgeFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SEdge.DEFAULT_FEATURES);
        _this.defaultLabelFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SLabel.DEFAULT_FEATURES);
        _this.defaultCompartmentFeatures = smodel_factory_1.createFeatureSet(sgraph_1.SCompartment.DEFAULT_FEATURES);
        _this.defaultButtonFeatures = smodel_factory_1.createFeatureSet(model_1.SButton.DEFAULT_FEATURES);
        return _this;
    }
    SGraphFactory.prototype.createElement = function (schema, parent) {
        var child;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElement))
                throw new Error("Element with type " + schema.type + " was expected to be an SChildElement.");
            child = regElement;
        }
        else if (this.isNodeSchema(schema)) {
            child = new sgraph_1.SNode();
            child.features = this.defaultNodeFeatures;
        }
        else if (this.isPortSchema(schema)) {
            child = new sgraph_1.SPort();
            child.features = this.defaultPortFeatures;
        }
        else if (this.isEdgeSchema(schema)) {
            child = new sgraph_1.SEdge();
            child.features = this.defaultEdgeFeatures;
        }
        else if (this.isLabelSchema(schema)) {
            child = new sgraph_1.SLabel();
            child.features = this.defaultLabelFeatures;
        }
        else if (this.isCompartmentSchema(schema)) {
            child = new sgraph_1.SCompartment();
            child.features = this.defaultCompartmentFeatures;
        }
        else if (this.isButtonSchema(schema)) {
            child = new model_1.SButton();
            child.features = this.defaultButtonFeatures;
        }
        else {
            child = new smodel_1.SChildElement();
        }
        return this.initializeChild(child, schema, parent);
    };
    SGraphFactory.prototype.createRoot = function (schema) {
        var root;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRoot))
                throw new Error("Element with type " + schema.type + " was expected to be an SModelRoot.");
            root = regElement;
        }
        else if (this.isGraphSchema(schema)) {
            root = new sgraph_1.SGraph();
            root.features = this.defaultGraphFeatures;
        }
        else {
            root = new smodel_1.SModelRoot();
        }
        return this.initializeRoot(root, schema);
    };
    SGraphFactory.prototype.isGraphSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'graph';
    };
    SGraphFactory.prototype.isNodeSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'node';
    };
    SGraphFactory.prototype.isPortSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'port';
    };
    SGraphFactory.prototype.isEdgeSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'edge';
    };
    SGraphFactory.prototype.isLabelSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'label';
    };
    SGraphFactory.prototype.isCompartmentSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'comp';
    };
    SGraphFactory.prototype.isButtonSchema = function (schema) {
        return smodel_utils_1.getBasicType(schema) === 'button';
    };
    SGraphFactory = __decorate([
        inversify_1.injectable()
    ], SGraphFactory);
    return SGraphFactory;
}(smodel_factory_1.SModelFactory));
exports.SGraphFactory = SGraphFactory;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/graph/sgraph.js":
/*!*********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/graph/sgraph.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../features/bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../features/edge-layout/model */ "../../../node_modules/sprotty/lib/features/edge-layout/model.js");
var delete_1 = __webpack_require__(/*! ../features/edit/delete */ "../../../node_modules/sprotty/lib/features/edit/delete.js");
var model_3 = __webpack_require__(/*! ../features/edit/model */ "../../../node_modules/sprotty/lib/features/edit/model.js");
var model_4 = __webpack_require__(/*! ../features/fade/model */ "../../../node_modules/sprotty/lib/features/fade/model.js");
var model_5 = __webpack_require__(/*! ../features/hover/model */ "../../../node_modules/sprotty/lib/features/hover/model.js");
var model_6 = __webpack_require__(/*! ../features/move/model */ "../../../node_modules/sprotty/lib/features/move/model.js");
var model_7 = __webpack_require__(/*! ../features/routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var model_8 = __webpack_require__(/*! ../features/select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var viewport_root_1 = __webpack_require__(/*! ../features/viewport/viewport-root */ "../../../node_modules/sprotty/lib/features/viewport/viewport-root.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var iterable_1 = __webpack_require__(/*! ../utils/iterable */ "../../../node_modules/sprotty/lib/utils/iterable.js");
/**
 * Root element for graph-like models.
 */
var SGraph = /** @class */ (function (_super) {
    __extends(SGraph, _super);
    function SGraph(index) {
        if (index === void 0) { index = new SGraphIndex(); }
        return _super.call(this, index) || this;
    }
    return SGraph;
}(viewport_root_1.ViewportRootElement));
exports.SGraph = SGraph;
/**
 * Model element class for nodes, which are the main entities in a graph. A node can be connected to
 * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of
 * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.
 */
var SNode = /** @class */ (function (_super) {
    __extends(SNode, _super);
    function SNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SNode.prototype.canConnect = function (routable, role) {
        return this.children.find(function (c) { return c instanceof SPort; }) === undefined;
    };
    SNode.DEFAULT_FEATURES = [model_7.connectableFeature, delete_1.deletableFeature, model_8.selectFeature, model_1.boundsFeature,
        model_6.moveFeature, model_1.layoutContainerFeature, model_4.fadeFeature, model_5.hoverFeedbackFeature, model_5.popupFeature];
    return SNode;
}(model_7.SConnectableElement));
exports.SNode = SNode;
/**
 * A port is a connection point for edges. It should always be contained in an SNode.
 */
var SPort = /** @class */ (function (_super) {
    __extends(SPort, _super);
    function SPort() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SPort.DEFAULT_FEATURES = [model_7.connectableFeature, model_8.selectFeature, model_1.boundsFeature, model_4.fadeFeature,
        model_5.hoverFeedbackFeature];
    return SPort;
}(model_7.SConnectableElement));
exports.SPort = SPort;
/**
 * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,
 * each of which can be either a node or a port. The source and target elements are referenced via their
 * ids and can be resolved with the index stored in the root element.
 */
var SEdge = /** @class */ (function (_super) {
    __extends(SEdge, _super);
    function SEdge() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SEdge.DEFAULT_FEATURES = [model_3.editFeature, delete_1.deletableFeature, model_8.selectFeature, model_4.fadeFeature,
        model_5.hoverFeedbackFeature];
    return SEdge;
}(model_7.SRoutableElement));
exports.SEdge = SEdge;
/**
 * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.
 */
var SLabel = /** @class */ (function (_super) {
    __extends(SLabel, _super);
    function SLabel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.alignment = geometry_1.ORIGIN_POINT;
        _this.opacity = 1;
        return _this;
    }
    SLabel.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.alignFeature, model_1.layoutableChildFeature,
        model_2.edgeLayoutFeature, model_4.fadeFeature];
    return SLabel;
}(model_1.SShapeElement));
exports.SLabel = SLabel;
/**
 * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`
 * or `hbox` layout is used to arrange these children.
 */
var SCompartment = /** @class */ (function (_super) {
    __extends(SCompartment, _super);
    function SCompartment() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.opacity = 1;
        return _this;
    }
    SCompartment.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutContainerFeature, model_1.layoutableChildFeature,
        model_4.fadeFeature];
    return SCompartment;
}(model_1.SShapeElement));
exports.SCompartment = SCompartment;
/**
 * A specialized model index that tracks outgoing and incoming edges.
 */
var SGraphIndex = /** @class */ (function (_super) {
    __extends(SGraphIndex, _super);
    function SGraphIndex() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.outgoing = new Map;
        _this.incoming = new Map;
        return _this;
    }
    SGraphIndex.prototype.add = function (element) {
        _super.prototype.add.call(this, element);
        if (element instanceof SEdge) {
            // Register the edge in the outgoing map
            if (element.sourceId) {
                var sourceArr = this.outgoing.get(element.sourceId);
                if (sourceArr === undefined)
                    this.outgoing.set(element.sourceId, [element]);
                else
                    sourceArr.push(element);
            }
            // Register the edge in the incoming map
            if (element.targetId) {
                var targetArr = this.incoming.get(element.targetId);
                if (targetArr === undefined)
                    this.incoming.set(element.targetId, [element]);
                else
                    targetArr.push(element);
            }
        }
    };
    SGraphIndex.prototype.remove = function (element) {
        _super.prototype.remove.call(this, element);
        if (element instanceof SEdge) {
            // Remove the edge from the outgoing map
            var sourceArr = this.outgoing.get(element.sourceId);
            if (sourceArr !== undefined) {
                var index = sourceArr.indexOf(element);
                if (index >= 0) {
                    if (sourceArr.length === 1)
                        this.outgoing.delete(element.sourceId);
                    else
                        sourceArr.splice(index, 1);
                }
            }
            // Remove the edge from the incoming map
            var targetArr = this.incoming.get(element.targetId);
            if (targetArr !== undefined) {
                var index = targetArr.indexOf(element);
                if (index >= 0) {
                    if (targetArr.length === 1)
                        this.incoming.delete(element.targetId);
                    else
                        targetArr.splice(index, 1);
                }
            }
        }
    };
    SGraphIndex.prototype.getAttachedElements = function (element) {
        var _this = this;
        return new iterable_1.FluentIterableImpl(function () { return ({
            outgoing: _this.outgoing.get(element.id),
            incoming: _this.incoming.get(element.id),
            nextOutgoingIndex: 0,
            nextIncomingIndex: 0
        }); }, function (state) {
            var index = state.nextOutgoingIndex;
            if (state.outgoing !== undefined && index < state.outgoing.length) {
                state.nextOutgoingIndex = index + 1;
                return { done: false, value: state.outgoing[index] };
            }
            index = state.nextIncomingIndex;
            if (state.incoming !== undefined) {
                // Filter out self-loops: edges that are both outgoing and incoming
                while (index < state.incoming.length) {
                    var edge = state.incoming[index];
                    if (edge.sourceId !== edge.targetId) {
                        state.nextIncomingIndex = index + 1;
                        return { done: false, value: edge };
                    }
                    index++;
                }
            }
            return { done: true, value: undefined };
        });
    };
    SGraphIndex.prototype.getIncomingEdges = function (element) {
        return this.incoming.get(element.id) || [];
    };
    SGraphIndex.prototype.getOutgoingEdges = function (element) {
        return this.outgoing.get(element.id) || [];
    };
    return SGraphIndex;
}(smodel_1.SModelIndex));
exports.SGraphIndex = SGraphIndex;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/graph/views.js":
/*!********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/graph/views.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var smodel_utils_1 = __webpack_require__(/*! ../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var views_1 = __webpack_require__(/*! ../features/bounds/views */ "../../../node_modules/sprotty/lib/features/bounds/views.js");
var model_1 = __webpack_require__(/*! ../features/edge-layout/model */ "../../../node_modules/sprotty/lib/features/edge-layout/model.js");
var model_2 = __webpack_require__(/*! ../features/routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../features/routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js");
var views_2 = __webpack_require__(/*! ../features/routing/views */ "../../../node_modules/sprotty/lib/features/routing/views.js");
/**
 * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.
 */
var SGraphView = /** @class */ (function () {
    function SGraphView() {
    }
    SGraphView.prototype.render = function (model, context) {
        var transform = "scale(" + model.zoom + ") translate(" + -model.scroll.x + "," + -model.scroll.y + ")";
        return snabbdom_jsx_1.svg("svg", { "class-sprotty-graph": true },
            snabbdom_jsx_1.svg("g", { transform: transform }, context.renderChildren(model)));
    };
    SGraphView = __decorate([
        inversify_1.injectable()
    ], SGraphView);
    return SGraphView;
}());
exports.SGraphView = SGraphView;
var PolylineEdgeView = /** @class */ (function (_super) {
    __extends(PolylineEdgeView, _super);
    function PolylineEdgeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PolylineEdgeView.prototype.render = function (edge, context) {
        var router = this.edgeRouterRegistry.get(edge.routerKind);
        var route = router.route(edge);
        if (route.length === 0) {
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        }
        if (!this.isVisible(edge, route, context)) {
            if (edge.children.length === 0) {
                return undefined;
            }
            // The children of an edge are not necessarily inside the bounding box of the route,
            // so we need to render a group to ensure the children have a chance to be rendered.
            return snabbdom_jsx_1.svg("g", null, context.renderChildren(edge, { route: route }));
        }
        return snabbdom_jsx_1.svg("g", { "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route: route }));
    };
    PolylineEdgeView.prototype.renderLine = function (edge, segments, context) {
        var firstPoint = segments[0];
        var path = "M " + firstPoint.x + "," + firstPoint.y;
        for (var i = 1; i < segments.length; i++) {
            var p = segments[i];
            path += " L " + p.x + "," + p.y;
        }
        return snabbdom_jsx_1.svg("path", { d: path });
    };
    PolylineEdgeView.prototype.renderAdditionals = function (edge, segments, context) {
        return [];
    };
    PolylineEdgeView.prototype.renderDanglingEdge = function (message, edge, context) {
        return snabbdom_jsx_1.svg("text", { "class-sprotty-edge-dangling": true, title: message }, "?");
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], PolylineEdgeView.prototype, "edgeRouterRegistry", void 0);
    PolylineEdgeView = __decorate([
        inversify_1.injectable()
    ], PolylineEdgeView);
    return PolylineEdgeView;
}(views_2.RoutableView));
exports.PolylineEdgeView = PolylineEdgeView;
var SRoutingHandleView = /** @class */ (function () {
    function SRoutingHandleView() {
        this.minimalPointDistance = 10;
    }
    SRoutingHandleView.prototype.render = function (handle, context, args) {
        if (args && args.route) {
            if (handle.parent instanceof model_2.SRoutableElement) {
                var router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                var theRoute = args.route === undefined ? router.route(handle.parent) : args.route;
                var position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    var node = snabbdom_jsx_1.svg("circle", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
                    vnode_utils_1.setAttr(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return snabbdom_jsx_1.svg("g", null);
    };
    SRoutingHandleView.prototype.getRadius = function () {
        return 7;
    };
    __decorate([
        inversify_1.inject(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SRoutingHandleView.prototype, "edgeRouterRegistry", void 0);
    SRoutingHandleView = __decorate([
        inversify_1.injectable()
    ], SRoutingHandleView);
    return SRoutingHandleView;
}());
exports.SRoutingHandleView = SRoutingHandleView;
var SLabelView = /** @class */ (function (_super) {
    __extends(SLabelView, _super);
    function SLabelView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SLabelView.prototype.render = function (label, context) {
        if (!model_1.isEdgeLayoutable(label) && !this.isVisible(label, context)) {
            return undefined;
        }
        var vnode = snabbdom_jsx_1.svg("text", { "class-sprotty-label": true }, label.text);
        var subType = smodel_utils_1.getSubType(label);
        if (subType) {
            vnode_utils_1.setAttr(vnode, 'class', subType);
        }
        return vnode;
    };
    SLabelView = __decorate([
        inversify_1.injectable()
    ], SLabelView);
    return SLabelView;
}(views_1.ShapeView));
exports.SLabelView = SLabelView;
var SCompartmentView = /** @class */ (function () {
    function SCompartmentView() {
    }
    SCompartmentView.prototype.render = function (compartment, context) {
        var translate = "translate(" + compartment.bounds.x + ", " + compartment.bounds.y + ")";
        var vnode = snabbdom_jsx_1.svg("g", { transform: translate, "class-sprotty-comp": "{true}" }, context.renderChildren(compartment));
        var subType = smodel_utils_1.getSubType(compartment);
        if (subType)
            vnode_utils_1.setAttr(vnode, 'class', subType);
        return vnode;
    };
    SCompartmentView = __decorate([
        inversify_1.injectable()
    ], SCompartmentView);
    return SCompartmentView;
}());
exports.SCompartmentView = SCompartmentView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/index.js":
/*!**************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/index.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
// ------------------ Base ------------------
__export(__webpack_require__(/*! ./base/actions/action */ "../../../node_modules/sprotty/lib/base/actions/action.js"));
__export(__webpack_require__(/*! ./base/actions/action-dispatcher */ "../../../node_modules/sprotty/lib/base/actions/action-dispatcher.js"));
__export(__webpack_require__(/*! ./base/actions/action-handler */ "../../../node_modules/sprotty/lib/base/actions/action-handler.js"));
__export(__webpack_require__(/*! ./base/actions/diagram-locker */ "../../../node_modules/sprotty/lib/base/actions/diagram-locker.js"));
__export(__webpack_require__(/*! ./base/animations/animation-frame-syncer */ "../../../node_modules/sprotty/lib/base/animations/animation-frame-syncer.js"));
__export(__webpack_require__(/*! ./base/animations/animation */ "../../../node_modules/sprotty/lib/base/animations/animation.js"));
__export(__webpack_require__(/*! ./base/animations/easing */ "../../../node_modules/sprotty/lib/base/animations/easing.js"));
__export(__webpack_require__(/*! ./base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js"));
__export(__webpack_require__(/*! ./base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js"));
__export(__webpack_require__(/*! ./base/commands/command-stack-options */ "../../../node_modules/sprotty/lib/base/commands/command-stack-options.js"));
__export(__webpack_require__(/*! ./base/commands/command-stack */ "../../../node_modules/sprotty/lib/base/commands/command-stack.js"));
__export(__webpack_require__(/*! ./base/features/initialize-canvas */ "../../../node_modules/sprotty/lib/base/features/initialize-canvas.js"));
__export(__webpack_require__(/*! ./base/features/set-model */ "../../../node_modules/sprotty/lib/base/features/set-model.js"));
__export(__webpack_require__(/*! ./base/model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js"));
__export(__webpack_require__(/*! ./base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js"));
__export(__webpack_require__(/*! ./base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js"));
__export(__webpack_require__(/*! ./base/tool-manager/tool-manager */ "../../../node_modules/sprotty/lib/base/tool-manager/tool-manager.js"));
__export(__webpack_require__(/*! ./base/tool-manager/tool */ "../../../node_modules/sprotty/lib/base/tool-manager/tool.js"));
__export(__webpack_require__(/*! ./base/ui-extensions/ui-extension-registry */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js"));
__export(__webpack_require__(/*! ./base/ui-extensions/ui-extension */ "../../../node_modules/sprotty/lib/base/ui-extensions/ui-extension.js"));
__export(__webpack_require__(/*! ./base/views/key-tool */ "../../../node_modules/sprotty/lib/base/views/key-tool.js"));
__export(__webpack_require__(/*! ./base/views/mouse-tool */ "../../../node_modules/sprotty/lib/base/views/mouse-tool.js"));
__export(__webpack_require__(/*! ./base/views/thunk-view */ "../../../node_modules/sprotty/lib/base/views/thunk-view.js"));
__export(__webpack_require__(/*! ./base/views/view */ "../../../node_modules/sprotty/lib/base/views/view.js"));
__export(__webpack_require__(/*! ./base/views/viewer-cache */ "../../../node_modules/sprotty/lib/base/views/viewer-cache.js"));
__export(__webpack_require__(/*! ./base/views/viewer-options */ "../../../node_modules/sprotty/lib/base/views/viewer-options.js"));
__export(__webpack_require__(/*! ./base/views/viewer */ "../../../node_modules/sprotty/lib/base/views/viewer.js"));
__export(__webpack_require__(/*! ./base/views/vnode-postprocessor */ "../../../node_modules/sprotty/lib/base/views/vnode-postprocessor.js"));
__export(__webpack_require__(/*! ./base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js"));
__export(__webpack_require__(/*! ./base/types */ "../../../node_modules/sprotty/lib/base/types.js"));
var di_config_1 = __webpack_require__(/*! ./base/di.config */ "../../../node_modules/sprotty/lib/base/di.config.js");
exports.defaultModule = di_config_1.default;
// ------------------ Features ------------------
__export(__webpack_require__(/*! ./features/bounds/bounds-manipulation */ "../../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js"));
__export(__webpack_require__(/*! ./features/bounds/hidden-bounds-updater */ "../../../node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js"));
__export(__webpack_require__(/*! ./features/bounds/layout */ "../../../node_modules/sprotty/lib/features/bounds/layout.js"));
__export(__webpack_require__(/*! ./features/bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js"));
__export(__webpack_require__(/*! ./features/bounds/vbox-layout */ "../../../node_modules/sprotty/lib/features/bounds/vbox-layout.js"));
__export(__webpack_require__(/*! ./features/bounds/hbox-layout */ "../../../node_modules/sprotty/lib/features/bounds/hbox-layout.js"));
__export(__webpack_require__(/*! ./features/bounds/stack-layout */ "../../../node_modules/sprotty/lib/features/bounds/stack-layout.js"));
__export(__webpack_require__(/*! ./features/bounds/views */ "../../../node_modules/sprotty/lib/features/bounds/views.js"));
__export(__webpack_require__(/*! ./features/button/button-handler */ "../../../node_modules/sprotty/lib/features/button/button-handler.js"));
__export(__webpack_require__(/*! ./features/button/model */ "../../../node_modules/sprotty/lib/features/button/model.js"));
__export(__webpack_require__(/*! ./features/command-palette/action-providers */ "../../../node_modules/sprotty/lib/features/command-palette/action-providers.js"));
__export(__webpack_require__(/*! ./features/command-palette/command-palette */ "../../../node_modules/sprotty/lib/features/command-palette/command-palette.js"));
__export(__webpack_require__(/*! ./features/context-menu/context-menu-service */ "../../../node_modules/sprotty/lib/features/context-menu/context-menu-service.js"));
__export(__webpack_require__(/*! ./features/context-menu/menu-providers */ "../../../node_modules/sprotty/lib/features/context-menu/menu-providers.js"));
__export(__webpack_require__(/*! ./features/context-menu/mouse-listener */ "../../../node_modules/sprotty/lib/features/context-menu/mouse-listener.js"));
__export(__webpack_require__(/*! ./features/edge-layout/di.config */ "../../../node_modules/sprotty/lib/features/edge-layout/di.config.js"));
__export(__webpack_require__(/*! ./features/edge-layout/edge-layout */ "../../../node_modules/sprotty/lib/features/edge-layout/edge-layout.js"));
__export(__webpack_require__(/*! ./features/edge-layout/model */ "../../../node_modules/sprotty/lib/features/edge-layout/model.js"));
__export(__webpack_require__(/*! ./features/edit/create */ "../../../node_modules/sprotty/lib/features/edit/create.js"));
__export(__webpack_require__(/*! ./features/edit/create-on-drag */ "../../../node_modules/sprotty/lib/features/edit/create-on-drag.js"));
__export(__webpack_require__(/*! ./features/edit/di.config */ "../../../node_modules/sprotty/lib/features/edit/di.config.js"));
__export(__webpack_require__(/*! ./features/edit/delete */ "../../../node_modules/sprotty/lib/features/edit/delete.js"));
__export(__webpack_require__(/*! ./features/edit/edit-label */ "../../../node_modules/sprotty/lib/features/edit/edit-label.js"));
__export(__webpack_require__(/*! ./features/edit/edit-label-ui */ "../../../node_modules/sprotty/lib/features/edit/edit-label-ui.js"));
__export(__webpack_require__(/*! ./features/edit/edit-routing */ "../../../node_modules/sprotty/lib/features/edit/edit-routing.js"));
__export(__webpack_require__(/*! ./features/edit/model */ "../../../node_modules/sprotty/lib/features/edit/model.js"));
__export(__webpack_require__(/*! ./features/edit/reconnect */ "../../../node_modules/sprotty/lib/features/edit/reconnect.js"));
__export(__webpack_require__(/*! ./features/expand/expand */ "../../../node_modules/sprotty/lib/features/expand/expand.js"));
__export(__webpack_require__(/*! ./features/expand/model */ "../../../node_modules/sprotty/lib/features/expand/model.js"));
__export(__webpack_require__(/*! ./features/expand/views */ "../../../node_modules/sprotty/lib/features/expand/views.js"));
__export(__webpack_require__(/*! ./features/export/export */ "../../../node_modules/sprotty/lib/features/export/export.js"));
__export(__webpack_require__(/*! ./features/export/model */ "../../../node_modules/sprotty/lib/features/export/model.js"));
__export(__webpack_require__(/*! ./features/export/svg-exporter */ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js"));
__export(__webpack_require__(/*! ./features/fade/fade */ "../../../node_modules/sprotty/lib/features/fade/fade.js"));
__export(__webpack_require__(/*! ./features/fade/model */ "../../../node_modules/sprotty/lib/features/fade/model.js"));
__export(__webpack_require__(/*! ./features/hover/hover */ "../../../node_modules/sprotty/lib/features/hover/hover.js"));
__export(__webpack_require__(/*! ./features/hover/model */ "../../../node_modules/sprotty/lib/features/hover/model.js"));
__export(__webpack_require__(/*! ./features/decoration/model */ "../../../node_modules/sprotty/lib/features/decoration/model.js"));
__export(__webpack_require__(/*! ./features/decoration/views */ "../../../node_modules/sprotty/lib/features/decoration/views.js"));
__export(__webpack_require__(/*! ./features/decoration/decoration-placer */ "../../../node_modules/sprotty/lib/features/decoration/decoration-placer.js"));
__export(__webpack_require__(/*! ./features/move/model */ "../../../node_modules/sprotty/lib/features/move/model.js"));
__export(__webpack_require__(/*! ./features/move/move */ "../../../node_modules/sprotty/lib/features/move/move.js"));
__export(__webpack_require__(/*! ./features/move/snap */ "../../../node_modules/sprotty/lib/features/move/snap.js"));
__export(__webpack_require__(/*! ./features/nameable/model */ "../../../node_modules/sprotty/lib/features/nameable/model.js"));
__export(__webpack_require__(/*! ./features/open/open */ "../../../node_modules/sprotty/lib/features/open/open.js"));
__export(__webpack_require__(/*! ./features/open/model */ "../../../node_modules/sprotty/lib/features/open/model.js"));
__export(__webpack_require__(/*! ./features/routing/anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js"));
__export(__webpack_require__(/*! ./features/routing/linear-edge-router */ "../../../node_modules/sprotty/lib/features/routing/linear-edge-router.js"));
__export(__webpack_require__(/*! ./features/routing/manhattan-anchors */ "../../../node_modules/sprotty/lib/features/routing/manhattan-anchors.js"));
__export(__webpack_require__(/*! ./features/routing/manhattan-edge-router */ "../../../node_modules/sprotty/lib/features/routing/manhattan-edge-router.js"));
__export(__webpack_require__(/*! ./features/routing/model */ "../../../node_modules/sprotty/lib/features/routing/model.js"));
__export(__webpack_require__(/*! ./features/routing/polyline-anchors */ "../../../node_modules/sprotty/lib/features/routing/polyline-anchors.js"));
__export(__webpack_require__(/*! ./features/routing/polyline-edge-router */ "../../../node_modules/sprotty/lib/features/routing/polyline-edge-router.js"));
__export(__webpack_require__(/*! ./features/routing/routing */ "../../../node_modules/sprotty/lib/features/routing/routing.js"));
__export(__webpack_require__(/*! ./features/routing/views */ "../../../node_modules/sprotty/lib/features/routing/views.js"));
__export(__webpack_require__(/*! ./features/select/model */ "../../../node_modules/sprotty/lib/features/select/model.js"));
__export(__webpack_require__(/*! ./features/select/select */ "../../../node_modules/sprotty/lib/features/select/select.js"));
__export(__webpack_require__(/*! ./features/undo-redo/undo-redo */ "../../../node_modules/sprotty/lib/features/undo-redo/undo-redo.js"));
__export(__webpack_require__(/*! ./features/update/model-matching */ "../../../node_modules/sprotty/lib/features/update/model-matching.js"));
__export(__webpack_require__(/*! ./features/update/update-model */ "../../../node_modules/sprotty/lib/features/update/update-model.js"));
__export(__webpack_require__(/*! ./features/viewport/center-fit */ "../../../node_modules/sprotty/lib/features/viewport/center-fit.js"));
__export(__webpack_require__(/*! ./features/viewport/model */ "../../../node_modules/sprotty/lib/features/viewport/model.js"));
__export(__webpack_require__(/*! ./features/viewport/scroll */ "../../../node_modules/sprotty/lib/features/viewport/scroll.js"));
__export(__webpack_require__(/*! ./features/viewport/viewport-root */ "../../../node_modules/sprotty/lib/features/viewport/viewport-root.js"));
__export(__webpack_require__(/*! ./features/viewport/viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js"));
__export(__webpack_require__(/*! ./features/viewport/zoom */ "../../../node_modules/sprotty/lib/features/viewport/zoom.js"));
__export(__webpack_require__(/*! ./features/zorder/zorder */ "../../../node_modules/sprotty/lib/features/zorder/zorder.js"));
var di_config_2 = __webpack_require__(/*! ./graph/di.config */ "../../../node_modules/sprotty/lib/graph/di.config.js");
exports.graphModule = di_config_2.default;
var di_config_3 = __webpack_require__(/*! ./features/bounds/di.config */ "../../../node_modules/sprotty/lib/features/bounds/di.config.js");
exports.boundsModule = di_config_3.default;
var di_config_4 = __webpack_require__(/*! ./features/button/di.config */ "../../../node_modules/sprotty/lib/features/button/di.config.js");
exports.buttonModule = di_config_4.default;
var di_config_5 = __webpack_require__(/*! ./features/command-palette/di.config */ "../../../node_modules/sprotty/lib/features/command-palette/di.config.js");
exports.commandPaletteModule = di_config_5.default;
var di_config_6 = __webpack_require__(/*! ./features/context-menu/di.config */ "../../../node_modules/sprotty/lib/features/context-menu/di.config.js");
exports.contextMenuModule = di_config_6.default;
var di_config_7 = __webpack_require__(/*! ./features/decoration/di.config */ "../../../node_modules/sprotty/lib/features/decoration/di.config.js");
exports.decorationModule = di_config_7.default;
var di_config_8 = __webpack_require__(/*! ./features/edge-layout/di.config */ "../../../node_modules/sprotty/lib/features/edge-layout/di.config.js");
exports.edgeLayoutModule = di_config_8.default;
var di_config_9 = __webpack_require__(/*! ./features/expand/di.config */ "../../../node_modules/sprotty/lib/features/expand/di.config.js");
exports.expandModule = di_config_9.default;
var di_config_10 = __webpack_require__(/*! ./features/export/di.config */ "../../../node_modules/sprotty/lib/features/export/di.config.js");
exports.exportModule = di_config_10.default;
var di_config_11 = __webpack_require__(/*! ./features/fade/di.config */ "../../../node_modules/sprotty/lib/features/fade/di.config.js");
exports.fadeModule = di_config_11.default;
var di_config_12 = __webpack_require__(/*! ./features/hover/di.config */ "../../../node_modules/sprotty/lib/features/hover/di.config.js");
exports.hoverModule = di_config_12.default;
var di_config_13 = __webpack_require__(/*! ./features/move/di.config */ "../../../node_modules/sprotty/lib/features/move/di.config.js");
exports.moveModule = di_config_13.default;
var di_config_14 = __webpack_require__(/*! ./features/open/di.config */ "../../../node_modules/sprotty/lib/features/open/di.config.js");
exports.openModule = di_config_14.default;
var di_config_15 = __webpack_require__(/*! ./features/routing/di.config */ "../../../node_modules/sprotty/lib/features/routing/di.config.js");
exports.routingModule = di_config_15.default;
var di_config_16 = __webpack_require__(/*! ./features/select/di.config */ "../../../node_modules/sprotty/lib/features/select/di.config.js");
exports.selectModule = di_config_16.default;
var di_config_17 = __webpack_require__(/*! ./features/undo-redo/di.config */ "../../../node_modules/sprotty/lib/features/undo-redo/di.config.js");
exports.undoRedoModule = di_config_17.default;
var di_config_18 = __webpack_require__(/*! ./features/update/di.config */ "../../../node_modules/sprotty/lib/features/update/di.config.js");
exports.updateModule = di_config_18.default;
var di_config_19 = __webpack_require__(/*! ./features/viewport/di.config */ "../../../node_modules/sprotty/lib/features/viewport/di.config.js");
exports.viewportModule = di_config_19.default;
var di_config_20 = __webpack_require__(/*! ./features/zorder/di.config */ "../../../node_modules/sprotty/lib/features/zorder/di.config.js");
exports.zorderModule = di_config_20.default;
// ------------------ Graph ------------------
__export(__webpack_require__(/*! ./graph/sgraph-factory */ "../../../node_modules/sprotty/lib/graph/sgraph-factory.js"));
__export(__webpack_require__(/*! ./graph/sgraph */ "../../../node_modules/sprotty/lib/graph/sgraph.js"));
__export(__webpack_require__(/*! ./graph/views */ "../../../node_modules/sprotty/lib/graph/views.js"));
// ------------------ Library ------------------
__export(__webpack_require__(/*! ./lib/modules */ "../../../node_modules/sprotty/lib/lib/modules.js"));
__export(__webpack_require__(/*! ./lib/generic-views */ "../../../node_modules/sprotty/lib/lib/generic-views.js"));
__export(__webpack_require__(/*! ./lib/html-views */ "../../../node_modules/sprotty/lib/lib/html-views.js"));
__export(__webpack_require__(/*! ./lib/model */ "../../../node_modules/sprotty/lib/lib/model.js"));
__export(__webpack_require__(/*! ./lib/svg-views */ "../../../node_modules/sprotty/lib/lib/svg-views.js"));
// ------------------ Model Source ------------------
__export(__webpack_require__(/*! ./model-source/commit-model */ "../../../node_modules/sprotty/lib/model-source/commit-model.js"));
__export(__webpack_require__(/*! ./model-source/diagram-server */ "../../../node_modules/sprotty/lib/model-source/diagram-server.js"));
__export(__webpack_require__(/*! ./model-source/local-model-source */ "../../../node_modules/sprotty/lib/model-source/local-model-source.js"));
__export(__webpack_require__(/*! ./model-source/logging */ "../../../node_modules/sprotty/lib/model-source/logging.js"));
__export(__webpack_require__(/*! ./model-source/model-source */ "../../../node_modules/sprotty/lib/model-source/model-source.js"));
__export(__webpack_require__(/*! ./model-source/websocket */ "../../../node_modules/sprotty/lib/model-source/websocket.js"));
var di_config_21 = __webpack_require__(/*! ./model-source/di.config */ "../../../node_modules/sprotty/lib/model-source/di.config.js");
exports.modelSourceModule = di_config_21.default;
// ------------------ Utilities ------------------
__export(__webpack_require__(/*! ./utils/browser */ "../../../node_modules/sprotty/lib/utils/browser.js"));
__export(__webpack_require__(/*! ./utils/color */ "../../../node_modules/sprotty/lib/utils/color.js"));
__export(__webpack_require__(/*! ./utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js"));
__export(__webpack_require__(/*! ./utils/inversify */ "../../../node_modules/sprotty/lib/utils/inversify.js"));
__export(__webpack_require__(/*! ./utils/logging */ "../../../node_modules/sprotty/lib/utils/logging.js"));
__export(__webpack_require__(/*! ./utils/registry */ "../../../node_modules/sprotty/lib/utils/registry.js"));


/***/ }),

/***/ "../../../node_modules/sprotty/lib/lib/generic-views.js":
/*!**************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/lib/generic-views.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var strings_1 = __webpack_require__(/*! snabbdom-virtualize/strings */ "../../../node_modules/snabbdom-virtualize/strings.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var views_1 = __webpack_require__(/*! ../features/bounds/views */ "../../../node_modules/sprotty/lib/features/bounds/views.js");
var model_1 = __webpack_require__(/*! ./model */ "../../../node_modules/sprotty/lib/lib/model.js");
var PreRenderedView = /** @class */ (function (_super) {
    __extends(PreRenderedView, _super);
    function PreRenderedView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreRenderedView.prototype.render = function (model, context) {
        if (model instanceof model_1.ShapedPreRenderedElement && !this.isVisible(model, context)) {
            return undefined;
        }
        var node = strings_1.default(model.code);
        this.correctNamespace(node);
        return node;
    };
    PreRenderedView.prototype.correctNamespace = function (node) {
        if (node.sel === 'svg' || node.sel === 'g')
            vnode_utils_1.setNamespace(node, 'http://www.w3.org/2000/svg');
    };
    PreRenderedView = __decorate([
        inversify_1.injectable()
    ], PreRenderedView);
    return PreRenderedView;
}(views_1.ShapeView));
exports.PreRenderedView = PreRenderedView;
/**
 * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.
 * Note that `foreignObject` may not be supported by all browsers or SVG viewers.
 */
var ForeignObjectView = /** @class */ (function () {
    function ForeignObjectView() {
    }
    ForeignObjectView.prototype.render = function (model, context) {
        var foreignObjectContents = strings_1.default(model.code);
        var node = snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("foreignObject", { requiredFeatures: 'http://www.w3.org/TR/SVG11/feature#Extensibility', height: model.bounds.height, width: model.bounds.width, x: 0, y: 0 }, foreignObjectContents),
            context.renderChildren(model));
        vnode_utils_1.setAttr(node, 'class', model.type);
        vnode_utils_1.setNamespace(foreignObjectContents, model.namespace);
        return node;
    };
    ForeignObjectView = __decorate([
        inversify_1.injectable()
    ], ForeignObjectView);
    return ForeignObjectView;
}());
exports.ForeignObjectView = ForeignObjectView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/lib/html-views.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/lib/html-views.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx html */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "../../../node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var HtmlRootView = /** @class */ (function () {
    function HtmlRootView() {
    }
    HtmlRootView.prototype.render = function (model, context) {
        var root = snabbdom_jsx_1.html("div", null, context.renderChildren(model));
        for (var _i = 0, _a = model.classes; _i < _a.length; _i++) {
            var c = _a[_i];
            vnode_utils_1.setClass(root, c, true);
        }
        return root;
    };
    HtmlRootView = __decorate([
        inversify_1.injectable()
    ], HtmlRootView);
    return HtmlRootView;
}());
exports.HtmlRootView = HtmlRootView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/lib/model.js":
/*!******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/lib/model.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../features/bounds/model */ "../../../node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../features/move/model */ "../../../node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../features/select/model */ "../../../node_modules/sprotty/lib/features/select/model.js");
var sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "../../../node_modules/sprotty/lib/graph/sgraph.js");
var anchor_1 = __webpack_require__(/*! ../features/routing/anchor */ "../../../node_modules/sprotty/lib/features/routing/anchor.js");
/**
 * A node that is represented by a circle.
 */
var CircularNode = /** @class */ (function (_super) {
    __extends(CircularNode, _super);
    function CircularNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CircularNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return CircularNode;
}(sgraph_1.SNode));
exports.CircularNode = CircularNode;
/**
 * A node that is represented by a rectangle.
 */
var RectangularNode = /** @class */ (function (_super) {
    __extends(RectangularNode, _super);
    function RectangularNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RectangularNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return RectangularNode;
}(sgraph_1.SNode));
exports.RectangularNode = RectangularNode;
/**
 * A node that is represented by a diamond.
 */
var DiamondNode = /** @class */ (function (_super) {
    __extends(DiamondNode, _super);
    function DiamondNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DiamondNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return DiamondNode;
}(sgraph_1.SNode));
exports.DiamondNode = DiamondNode;
/**
 * A port that is represented by a circle.
 */
var CircularPort = /** @class */ (function (_super) {
    __extends(CircularPort, _super);
    function CircularPort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CircularPort.prototype, "anchorKind", {
        get: function () {
            return anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return CircularPort;
}(sgraph_1.SPort));
exports.CircularPort = CircularPort;
/**
 * A port that is represented by a rectangle.
 */
var RectangularPort = /** @class */ (function (_super) {
    __extends(RectangularPort, _super);
    function RectangularPort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RectangularPort.prototype, "anchorKind", {
        get: function () {
            return anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: true,
        configurable: true
    });
    return RectangularPort;
}(sgraph_1.SPort));
exports.RectangularPort = RectangularPort;
/**
 * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.
 */
var HtmlRoot = /** @class */ (function (_super) {
    __extends(HtmlRoot, _super);
    function HtmlRoot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.classes = [];
        return _this;
    }
    return HtmlRoot;
}(smodel_1.SModelRoot));
exports.HtmlRoot = HtmlRoot;
/**
 * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to
 * render complex figures or to compute the view on the server instead of the client code.
 */
var PreRenderedElement = /** @class */ (function (_super) {
    __extends(PreRenderedElement, _super);
    function PreRenderedElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PreRenderedElement;
}(smodel_1.SChildElement));
exports.PreRenderedElement = PreRenderedElement;
/**
 * Same as PreRenderedElement, but with a position and a size.
 */
var ShapedPreRenderedElement = /** @class */ (function (_super) {
    __extends(ShapedPreRenderedElement, _super);
    function ShapedPreRenderedElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.position = geometry_1.ORIGIN_POINT;
        _this.size = geometry_1.EMPTY_DIMENSION;
        _this.selected = false;
        _this.alignment = geometry_1.ORIGIN_POINT;
        return _this;
    }
    Object.defineProperty(ShapedPreRenderedElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: true,
        configurable: true
    });
    ShapedPreRenderedElement.DEFAULT_FEATURES = [model_2.moveFeature, model_1.boundsFeature, model_3.selectFeature, model_1.alignFeature];
    return ShapedPreRenderedElement;
}(PreRenderedElement));
exports.ShapedPreRenderedElement = ShapedPreRenderedElement;
/**
 * A `foreignObject` element to be transferred to the DOM within the SVG.
 *
 * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of
 * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not
 * support rendering the `foreignObject` content.
 *
 * If no dimensions are specified in the schema element, this element will obtain the dimension of
 * its parent to fill the entire available room. Thus, this element requires specified bounds itself
 * or bounds to be available for its parent.
 */
var ForeignObjectElement = /** @class */ (function (_super) {
    __extends(ForeignObjectElement, _super);
    function ForeignObjectElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ForeignObjectElement.prototype, "bounds", {
        get: function () {
            if (geometry_1.isValidDimension(this.size)) {
                return {
                    x: this.position.x,
                    y: this.position.y,
                    width: this.size.width,
                    height: this.size.height
                };
            }
            else if (model_1.isBoundsAware(this.parent)) {
                return {
                    x: this.position.x,
                    y: this.position.y,
                    width: this.parent.bounds.width,
                    height: this.parent.bounds.height
                };
            }
            return geometry_1.EMPTY_BOUNDS;
        },
        enumerable: true,
        configurable: true
    });
    return ForeignObjectElement;
}(ShapedPreRenderedElement));
exports.ForeignObjectElement = ForeignObjectElement;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/lib/modules.js":
/*!********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/lib/modules.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var di_config_1 = __webpack_require__(/*! ../base/di.config */ "../../../node_modules/sprotty/lib/base/di.config.js");
var di_config_2 = __webpack_require__(/*! ../model-source/di.config */ "../../../node_modules/sprotty/lib/model-source/di.config.js");
var di_config_3 = __webpack_require__(/*! ../features/bounds/di.config */ "../../../node_modules/sprotty/lib/features/bounds/di.config.js");
var di_config_4 = __webpack_require__(/*! ../features/button/di.config */ "../../../node_modules/sprotty/lib/features/button/di.config.js");
var di_config_5 = __webpack_require__(/*! ../features/command-palette/di.config */ "../../../node_modules/sprotty/lib/features/command-palette/di.config.js");
var di_config_6 = __webpack_require__(/*! ../features/context-menu/di.config */ "../../../node_modules/sprotty/lib/features/context-menu/di.config.js");
var di_config_7 = __webpack_require__(/*! ../features/decoration/di.config */ "../../../node_modules/sprotty/lib/features/decoration/di.config.js");
var di_config_8 = __webpack_require__(/*! ../features/edge-layout/di.config */ "../../../node_modules/sprotty/lib/features/edge-layout/di.config.js");
var di_config_9 = __webpack_require__(/*! ../features/edit/di.config */ "../../../node_modules/sprotty/lib/features/edit/di.config.js");
var di_config_10 = __webpack_require__(/*! ../features/expand/di.config */ "../../../node_modules/sprotty/lib/features/expand/di.config.js");
var di_config_11 = __webpack_require__(/*! ../features/export/di.config */ "../../../node_modules/sprotty/lib/features/export/di.config.js");
var di_config_12 = __webpack_require__(/*! ../features/fade/di.config */ "../../../node_modules/sprotty/lib/features/fade/di.config.js");
var di_config_13 = __webpack_require__(/*! ../features/hover/di.config */ "../../../node_modules/sprotty/lib/features/hover/di.config.js");
var di_config_14 = __webpack_require__(/*! ../features/move/di.config */ "../../../node_modules/sprotty/lib/features/move/di.config.js");
var di_config_15 = __webpack_require__(/*! ../features/open/di.config */ "../../../node_modules/sprotty/lib/features/open/di.config.js");
var di_config_16 = __webpack_require__(/*! ../features/routing/di.config */ "../../../node_modules/sprotty/lib/features/routing/di.config.js");
var di_config_17 = __webpack_require__(/*! ../features/select/di.config */ "../../../node_modules/sprotty/lib/features/select/di.config.js");
var di_config_18 = __webpack_require__(/*! ../features/undo-redo/di.config */ "../../../node_modules/sprotty/lib/features/undo-redo/di.config.js");
var di_config_19 = __webpack_require__(/*! ../features/update/di.config */ "../../../node_modules/sprotty/lib/features/update/di.config.js");
var di_config_20 = __webpack_require__(/*! ../features/viewport/di.config */ "../../../node_modules/sprotty/lib/features/viewport/di.config.js");
var di_config_21 = __webpack_require__(/*! ../features/zorder/di.config */ "../../../node_modules/sprotty/lib/features/zorder/di.config.js");
/**
 * Load the default set of container modules provided by Sprotty.
 */
function loadDefaultModules(container, options) {
    var modules = [
        di_config_1.default, di_config_2.default, di_config_3.default, di_config_4.default,
        di_config_5.default, di_config_6.default, di_config_7.default, di_config_9.edgeEditModule,
        di_config_8.default, di_config_10.default, di_config_11.default, di_config_12.default,
        di_config_13.default, di_config_9.labelEditModule, di_config_9.labelEditUiModule, di_config_14.default,
        di_config_15.default, di_config_16.default, di_config_17.default, di_config_18.default,
        di_config_19.default, di_config_20.default, di_config_21.default
    ];
    if (options && options.exclude) {
        for (var _i = 0, _a = options.exclude; _i < _a.length; _i++) {
            var mod = _a[_i];
            var index = modules.indexOf(mod);
            if (index >= 0)
                modules.splice(index, 1);
        }
    }
    container.load.apply(container, modules);
}
exports.loadDefaultModules = loadDefaultModules;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/lib/svg-views.js":
/*!**********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/lib/svg-views.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx svg */
var snabbdom_jsx_1 = __webpack_require__(/*! snabbdom-jsx */ "../../../node_modules/snabbdom-jsx/snabbdom-jsx.js");
var sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "../../../node_modules/sprotty/lib/graph/sgraph.js");
var views_1 = __webpack_require__(/*! ../features/bounds/views */ "../../../node_modules/sprotty/lib/features/bounds/views.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var SvgViewportView = /** @class */ (function () {
    function SvgViewportView() {
    }
    SvgViewportView.prototype.render = function (model, context) {
        var transform = "scale(" + model.zoom + ") translate(" + -model.scroll.x + "," + -model.scroll.y + ")";
        return snabbdom_jsx_1.svg("svg", null,
            snabbdom_jsx_1.svg("g", { transform: transform }, context.renderChildren(model)));
    };
    SvgViewportView = __decorate([
        inversify_1.injectable()
    ], SvgViewportView);
    return SvgViewportView;
}());
exports.SvgViewportView = SvgViewportView;
var CircularNodeView = /** @class */ (function (_super) {
    __extends(CircularNodeView, _super);
    function CircularNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CircularNodeView.prototype.render = function (node, context) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        var radius = this.getRadius(node);
        return snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("circle", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, r: radius, cx: radius, cy: radius }),
            context.renderChildren(node));
    };
    CircularNodeView.prototype.getRadius = function (node) {
        var d = Math.min(node.size.width, node.size.height);
        return d > 0 ? d / 2 : 0;
    };
    CircularNodeView = __decorate([
        inversify_1.injectable()
    ], CircularNodeView);
    return CircularNodeView;
}(views_1.ShapeView));
exports.CircularNodeView = CircularNodeView;
var RectangularNodeView = /** @class */ (function (_super) {
    __extends(RectangularNodeView, _super);
    function RectangularNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RectangularNodeView.prototype.render = function (node, context) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        return snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("rect", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, x: "0", y: "0", width: Math.max(node.size.width, 0), height: Math.max(node.size.height, 0) }),
            context.renderChildren(node));
    };
    RectangularNodeView = __decorate([
        inversify_1.injectable()
    ], RectangularNodeView);
    return RectangularNodeView;
}(views_1.ShapeView));
exports.RectangularNodeView = RectangularNodeView;
var DiamondNodeView = /** @class */ (function (_super) {
    __extends(DiamondNodeView, _super);
    function DiamondNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DiamondNodeView.prototype.render = function (node, context) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        var diamond = new geometry_1.Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });
        var points = svgStr(diamond.topPoint) + " " + svgStr(diamond.rightPoint) + " " + svgStr(diamond.bottomPoint) + " " + svgStr(diamond.leftPoint);
        return snabbdom_jsx_1.svg("g", null,
            snabbdom_jsx_1.svg("polygon", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, points: points }),
            context.renderChildren(node));
    };
    DiamondNodeView = __decorate([
        inversify_1.injectable()
    ], DiamondNodeView);
    return DiamondNodeView;
}(views_1.ShapeView));
exports.DiamondNodeView = DiamondNodeView;
function svgStr(point) {
    return point.x + "," + point.y;
}
var EmptyGroupView = /** @class */ (function () {
    function EmptyGroupView() {
    }
    EmptyGroupView.prototype.render = function (model, context) {
        return snabbdom_jsx_1.svg("g", null);
    };
    EmptyGroupView = __decorate([
        inversify_1.injectable()
    ], EmptyGroupView);
    return EmptyGroupView;
}());
exports.EmptyGroupView = EmptyGroupView;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/commit-model.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/commit-model.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../base/commands/command */ "../../../node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../../../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * Commit the current SModel back to the model source.
 *
 * The SModel (AKA internal model) contains a lot of dirty/transitional state, such
 * as intermediate move postions or handles. When a user interaction that spans multiple
 * commands finishes, it fires a CommitModelAction to write the final changes back to
 * the model source.
 */
var CommitModelAction = /** @class */ (function () {
    function CommitModelAction() {
        this.kind = CommitModelCommand.KIND;
    }
    return CommitModelAction;
}());
exports.CommitModelAction = CommitModelAction;
var CommitModelCommand = /** @class */ (function (_super) {
    __extends(CommitModelCommand, _super);
    function CommitModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    CommitModelCommand.prototype.execute = function (context) {
        this.newModel = context.modelFactory.createSchema(context.root);
        return this.doCommit(this.newModel, context.root, true);
    };
    CommitModelCommand.prototype.doCommit = function (model, result, doSetOriginal) {
        var _this = this;
        var commitResult = this.modelSource.commitModel(model);
        if (commitResult instanceof Promise) {
            return commitResult.then(function (originalModel) {
                if (doSetOriginal)
                    _this.originalModel = originalModel;
                return result;
            });
        }
        else {
            if (doSetOriginal)
                this.originalModel = commitResult;
            return result;
        }
    };
    CommitModelCommand.prototype.undo = function (context) {
        return this.doCommit(this.originalModel, context.root, false);
    };
    CommitModelCommand.prototype.redo = function (context) {
        return this.doCommit(this.newModel, context.root, false);
    };
    CommitModelCommand.KIND = 'commitModel';
    __decorate([
        inversify_1.inject(types_1.TYPES.ModelSource),
        __metadata("design:type", model_source_1.ModelSource)
    ], CommitModelCommand.prototype, "modelSource", void 0);
    CommitModelCommand = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [CommitModelAction])
    ], CommitModelCommand);
    return CommitModelCommand;
}(command_1.SystemCommand));
exports.CommitModelCommand = CommitModelCommand;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/di.config.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/di.config.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../base/commands/command-registration */ "../../../node_modules/sprotty/lib/base/commands/command-registration.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var commit_model_1 = __webpack_require__(/*! ./commit-model */ "../../../node_modules/sprotty/lib/model-source/commit-model.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../../../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be
 * done according to the needs of the application. You can choose between a local (LocalModelSource)
 * and a remote (e.g. WebSocketDiagramServer) implementation.
 */
var modelSourceModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.ModelSourceProvider).toProvider(function (context) {
        return function () {
            return new Promise(function (resolve) {
                resolve(context.container.get(types_1.TYPES.ModelSource));
            });
        };
    });
    command_registration_1.configureCommand({ bind: bind, isBound: isBound }, commit_model_1.CommitModelCommand);
    bind(types_1.TYPES.IActionHandlerInitializer).toService(types_1.TYPES.ModelSource);
    bind(model_source_1.ComputedBoundsApplicator).toSelf().inSingletonScope();
});
exports.default = modelSourceModule;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/diagram-server.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/diagram-server.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var file_saver_1 = __webpack_require__(/*! file-saver */ "../../../node_modules/file-saver/dist/FileSaver.min.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../../../node_modules/sprotty/lib/base/features/set-model.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ../features/bounds/bounds-manipulation */ "../../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var expand_1 = __webpack_require__(/*! ../features/expand/expand */ "../../../node_modules/sprotty/lib/features/expand/expand.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js");
var hover_1 = __webpack_require__(/*! ../features/hover/hover */ "../../../node_modules/sprotty/lib/features/hover/hover.js");
var open_1 = __webpack_require__(/*! ../features/open/open */ "../../../node_modules/sprotty/lib/features/open/open.js");
var update_model_1 = __webpack_require__(/*! ../features/update/update-model */ "../../../node_modules/sprotty/lib/features/update/update-model.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../../../node_modules/sprotty/lib/model-source/model-source.js");
function isActionMessage(object) {
    return object !== undefined && object.hasOwnProperty('action');
}
exports.isActionMessage = isActionMessage;
/**
 * Sent by the external server when to signal a state change.
 */
var ServerStatusAction = /** @class */ (function () {
    function ServerStatusAction() {
        this.kind = ServerStatusAction.KIND;
    }
    ServerStatusAction.KIND = 'serverStatus';
    return ServerStatusAction;
}());
exports.ServerStatusAction = ServerStatusAction;
var receivedFromServerProperty = '__receivedFromServer';
/**
 * A ModelSource that communicates with an external model provider, e.g.
 * a model editor.
 *
 * This class defines which actions are sent to and received from the
 * external model source.
 */
var DiagramServer = /** @class */ (function (_super) {
    __extends(DiagramServer, _super);
    function DiagramServer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentRoot = {
            type: 'NONE',
            id: 'ROOT'
        };
        return _this;
    }
    DiagramServer.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        // Register this model source
        registry.register(bounds_manipulation_1.ComputedBoundsAction.KIND, this);
        registry.register(bounds_manipulation_1.RequestBoundsCommand.KIND, this);
        registry.register(hover_1.RequestPopupModelAction.KIND, this);
        registry.register(expand_1.CollapseExpandAction.KIND, this);
        registry.register(expand_1.CollapseExpandAllAction.KIND, this);
        registry.register(open_1.OpenAction.KIND, this);
        registry.register(ServerStatusAction.KIND, this);
        if (!this.clientId)
            this.clientId = this.viewerOptions.baseDiv;
    };
    DiagramServer.prototype.handle = function (action) {
        var forwardToServer = this.handleLocally(action);
        if (forwardToServer)
            this.forwardToServer(action);
    };
    DiagramServer.prototype.forwardToServer = function (action) {
        var message = {
            clientId: this.clientId,
            action: action
        };
        this.logger.log(this, 'sending', message);
        this.sendMessage(message);
    };
    DiagramServer.prototype.messageReceived = function (data) {
        var _this = this;
        var object = typeof (data) === 'string' ? JSON.parse(data) : data;
        if (isActionMessage(object) && object.action) {
            if (!object.clientId || object.clientId === this.clientId) {
                object.action[receivedFromServerProperty] = true;
                this.logger.log(this, 'receiving', object);
                this.actionDispatcher.dispatch(object.action).then(function () {
                    _this.storeNewModel(object.action);
                });
            }
        }
        else {
            this.logger.error(this, 'received data is not an action message', object);
        }
    };
    /**
     * Check whether the given action should be handled locally. Returns true if the action should
     * still be sent to the server, and false if it's only handled locally.
     */
    DiagramServer.prototype.handleLocally = function (action) {
        this.storeNewModel(action);
        switch (action.kind) {
            case bounds_manipulation_1.ComputedBoundsAction.KIND:
                return this.handleComputedBounds(action);
            case set_model_1.RequestModelAction.KIND:
                return this.handleRequestModel(action);
            case bounds_manipulation_1.RequestBoundsCommand.KIND:
                return false;
            case svg_exporter_1.ExportSvgAction.KIND:
                return this.handleExportSvgAction(action);
            case ServerStatusAction.KIND:
                return this.handleServerStateAction(action);
        }
        return !action[receivedFromServerProperty];
    };
    /**
     * Put the new model contained in the given action into the model storage, if there is any.
     */
    DiagramServer.prototype.storeNewModel = function (action) {
        if (action.kind === set_model_1.SetModelCommand.KIND
            || action.kind === update_model_1.UpdateModelCommand.KIND
            || action.kind === bounds_manipulation_1.RequestBoundsCommand.KIND) {
            var newRoot = action.newRoot;
            if (newRoot) {
                this.currentRoot = newRoot;
                if (action.kind === set_model_1.SetModelCommand.KIND || action.kind === update_model_1.UpdateModelCommand.KIND) {
                    this.lastSubmittedModelType = newRoot.type;
                }
            }
        }
    };
    DiagramServer.prototype.handleRequestModel = function (action) {
        var newOptions = __assign({ needsClientLayout: this.viewerOptions.needsClientLayout, needsServerLayout: this.viewerOptions.needsServerLayout }, action.options);
        var newAction = __assign(__assign({}, action), { options: newOptions });
        this.forwardToServer(newAction);
        return false;
    };
    /**
     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they
     * are applied to the current model locally and a model update is triggered.
     */
    DiagramServer.prototype.handleComputedBounds = function (action) {
        if (this.viewerOptions.needsServerLayout) {
            return true;
        }
        else {
            var root = this.currentRoot;
            this.computedBoundsApplicator.apply(root, action);
            if (root.type === this.lastSubmittedModelType) {
                this.actionDispatcher.dispatch(new update_model_1.UpdateModelAction(root));
            }
            else {
                this.actionDispatcher.dispatch(new set_model_1.SetModelAction(root));
            }
            this.lastSubmittedModelType = root.type;
            return false;
        }
    };
    DiagramServer.prototype.handleExportSvgAction = function (action) {
        var blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        file_saver_1.saveAs(blob, "diagram.svg");
        return false;
    };
    DiagramServer.prototype.handleServerStateAction = function (action) {
        return false;
    };
    DiagramServer.prototype.commitModel = function (newRoot) {
        var previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], DiagramServer.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(model_source_1.ComputedBoundsApplicator),
        __metadata("design:type", model_source_1.ComputedBoundsApplicator)
    ], DiagramServer.prototype, "computedBoundsApplicator", void 0);
    DiagramServer = __decorate([
        inversify_1.injectable()
    ], DiagramServer);
    return DiagramServer;
}(model_source_1.ModelSource));
exports.DiagramServer = DiagramServer;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/local-model-source.js":
/*!****************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/local-model-source.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var file_saver_1 = __webpack_require__(/*! file-saver */ "../../../node_modules/file-saver/dist/FileSaver.min.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../../../node_modules/sprotty/lib/base/features/set-model.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../base/model/smodel-utils */ "../../../node_modules/sprotty/lib/base/model/smodel-utils.js");
var smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "../../../node_modules/sprotty/lib/base/model/smodel-factory.js");
var bounds_manipulation_1 = __webpack_require__(/*! ../features/bounds/bounds-manipulation */ "../../../node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var viewport_1 = __webpack_require__(/*! ../features/viewport/viewport */ "../../../node_modules/sprotty/lib/features/viewport/viewport.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js");
var hover_1 = __webpack_require__(/*! ../features/hover/hover */ "../../../node_modules/sprotty/lib/features/hover/hover.js");
var model_matching_1 = __webpack_require__(/*! ../features/update/model-matching */ "../../../node_modules/sprotty/lib/features/update/model-matching.js");
var update_model_1 = __webpack_require__(/*! ../features/update/update-model */ "../../../node_modules/sprotty/lib/features/update/update-model.js");
var select_1 = __webpack_require__(/*! ../features/select/select */ "../../../node_modules/sprotty/lib/features/select/select.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "../../../node_modules/sprotty/lib/model-source/model-source.js");
/**
 * A model source that allows to set and modify the model through function calls.
 * This class can be used as a facade over the action-based API of sprotty. It handles
 * actions for bounds calculation and model updates.
 */
var LocalModelSource = /** @class */ (function (_super) {
    __extends(LocalModelSource, _super);
    function LocalModelSource() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentRoot = smodel_factory_1.EMPTY_ROOT;
        return _this;
    }
    Object.defineProperty(LocalModelSource.prototype, "model", {
        get: function () {
            return this.currentRoot;
        },
        set: function (root) {
            this.setModel(root);
        },
        enumerable: true,
        configurable: true
    });
    LocalModelSource.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        // Register this model source
        registry.register(bounds_manipulation_1.ComputedBoundsAction.KIND, this);
        registry.register(hover_1.RequestPopupModelAction.KIND, this);
    };
    /**
     * Set the model without incremental update.
     */
    LocalModelSource.prototype.setModel = function (newRoot) {
        this.currentRoot = newRoot;
        return this.submitModel(newRoot, false);
    };
    LocalModelSource.prototype.commitModel = function (newRoot) {
        var previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    };
    /**
     * Apply an incremental update to the model with an animation showing the transition to
     * the new state. If `newRoot` is undefined, the current root is submitted; in that case
     * it is assumed that it has been modified before.
     */
    LocalModelSource.prototype.updateModel = function (newRoot) {
        if (newRoot === undefined) {
            return this.submitModel(this.currentRoot, true);
        }
        else {
            this.currentRoot = newRoot;
            return this.submitModel(newRoot, true);
        }
    };
    /**
     * Get the current selection from the model.
     */
    LocalModelSource.prototype.getSelection = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res, index;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(select_1.GetSelectionAction.create())];
                    case 1:
                        res = _a.sent();
                        index = new smodel_1.SModelIndex();
                        index.add(this.currentRoot);
                        return [2 /*return*/, index.all().filter(function (e) { return res.selectedElementsIDs.indexOf(e.id) >= 0; })];
                }
            });
        });
    };
    /**
     * Get the current viewport from the model.
     */
    LocalModelSource.prototype.getViewport = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(viewport_1.GetViewportAction.create())];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, {
                                scroll: res.viewport.scroll,
                                zoom: res.viewport.zoom,
                                canvasBounds: res.canvasBounds
                            }];
                }
            });
        });
    };
    /**
     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting
     * `ComputedBoundsAction`, otherwise call `doSubmitModel(…)` directly.
     */
    LocalModelSource.prototype.submitModel = function (newRoot, update, cause) {
        return __awaiter(this, void 0, void 0, function () {
            var computedBounds, index;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.viewerOptions.needsClientLayout) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.actionDispatcher.request(bounds_manipulation_1.RequestBoundsAction.create(newRoot))];
                    case 1:
                        computedBounds = _a.sent();
                        index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);
                        return [4 /*yield*/, this.doSubmitModel(newRoot, true, cause, index)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, this.doSubmitModel(newRoot, update, cause)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the
     * `update` argument. If available, the model layout engine is invoked first.
     */
    LocalModelSource.prototype.doSubmitModel = function (newRoot, update, cause, index) {
        return __awaiter(this, void 0, void 0, function () {
            var layoutResult, error_1, lastSubmittedModelType, request, input;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.layoutEngine !== undefined)) return [3 /*break*/, 6];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        layoutResult = this.layoutEngine.layout(newRoot, index);
                        if (!(layoutResult instanceof Promise)) return [3 /*break*/, 3];
                        return [4 /*yield*/, layoutResult];
                    case 2:
                        newRoot = _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        if (layoutResult !== undefined)
                            newRoot = layoutResult;
                        _a.label = 4;
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        error_1 = _a.sent();
                        this.logger.error(this, error_1.toString(), error_1.stack);
                        return [3 /*break*/, 6];
                    case 6:
                        lastSubmittedModelType = this.lastSubmittedModelType;
                        this.lastSubmittedModelType = newRoot.type;
                        if (!(cause && cause.kind === set_model_1.RequestModelAction.KIND && cause.requestId)) return [3 /*break*/, 8];
                        request = cause;
                        return [4 /*yield*/, this.actionDispatcher.dispatch(new set_model_1.SetModelAction(newRoot, request.requestId))];
                    case 7:
                        _a.sent();
                        return [3 /*break*/, 12];
                    case 8:
                        if (!(update && newRoot.type === lastSubmittedModelType)) return [3 /*break*/, 10];
                        input = Array.isArray(update) ? update : newRoot;
                        return [4 /*yield*/, this.actionDispatcher.dispatch(new update_model_1.UpdateModelAction(input, true, cause))];
                    case 9:
                        _a.sent();
                        return [3 /*break*/, 12];
                    case 10: return [4 /*yield*/, this.actionDispatcher.dispatch(new set_model_1.SetModelAction(newRoot))];
                    case 11:
                        _a.sent();
                        _a.label = 12;
                    case 12: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Modify the current model with an array of matches.
     */
    LocalModelSource.prototype.applyMatches = function (matches) {
        var root = this.currentRoot;
        model_matching_1.applyMatches(root, matches);
        return this.submitModel(root, matches);
    };
    /**
     * Modify the current model by adding new elements.
     */
    LocalModelSource.prototype.addElements = function (elements) {
        var matches = [];
        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
            var e = elements_1[_i];
            var anye = e;
            if (anye.element !== undefined && anye.parentId !== undefined) {
                matches.push({
                    right: anye.element,
                    rightParentId: anye.parentId
                });
            }
            else if (anye.id !== undefined) {
                matches.push({
                    right: anye,
                    rightParentId: this.currentRoot.id
                });
            }
        }
        return this.applyMatches(matches);
    };
    /**
     * Modify the current model by removing elements.
     */
    LocalModelSource.prototype.removeElements = function (elements) {
        var matches = [];
        var index = new smodel_1.SModelIndex();
        index.add(this.currentRoot);
        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
            var e = elements_2[_i];
            var anye = e;
            if (anye.elementId !== undefined && anye.parentId !== undefined) {
                var element = index.getById(anye.elementId);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: anye.parentId
                    });
                }
            }
            else {
                var element = index.getById(anye);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: this.currentRoot.id
                    });
                }
            }
        }
        return this.applyMatches(matches);
    };
    // ----- Methods for handling incoming actions ----------------------------
    LocalModelSource.prototype.handle = function (action) {
        switch (action.kind) {
            case set_model_1.RequestModelAction.KIND:
                this.handleRequestModel(action);
                break;
            case bounds_manipulation_1.ComputedBoundsAction.KIND:
                this.computedBoundsApplicator.apply(this.currentRoot, action);
                break;
            case hover_1.RequestPopupModelAction.KIND:
                this.handleRequestPopupModel(action);
                break;
            case svg_exporter_1.ExportSvgAction.KIND:
                this.handleExportSvgAction(action);
                break;
        }
    };
    LocalModelSource.prototype.handleRequestModel = function (action) {
        this.submitModel(this.currentRoot, false, action);
    };
    LocalModelSource.prototype.handleRequestPopupModel = function (action) {
        if (this.popupModelProvider !== undefined) {
            var element = smodel_utils_1.findElement(this.currentRoot, action.elementId);
            var popupRoot = this.popupModelProvider.getPopupModel(action, element);
            if (popupRoot !== undefined) {
                popupRoot.canvasBounds = action.bounds;
                this.actionDispatcher.dispatch(new hover_1.SetPopupModelAction(popupRoot, action.requestId));
            }
        }
    };
    LocalModelSource.prototype.handleExportSvgAction = function (action) {
        var blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        file_saver_1.saveAs(blob, "diagram.svg");
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "logger", void 0);
    __decorate([
        inversify_1.inject(model_source_1.ComputedBoundsApplicator),
        __metadata("design:type", model_source_1.ComputedBoundsApplicator)
    ], LocalModelSource.prototype, "computedBoundsApplicator", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IPopupModelProvider), inversify_1.optional(),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "popupModelProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.IModelLayoutEngine), inversify_1.optional(),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "layoutEngine", void 0);
    LocalModelSource = __decorate([
        inversify_1.injectable()
    ], LocalModelSource);
    return LocalModelSource;
}(model_source_1.ModelSource));
exports.LocalModelSource = LocalModelSource;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/logging.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/logging.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var logging_1 = __webpack_require__(/*! ../utils/logging */ "../../../node_modules/sprotty/lib/utils/logging.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var LoggingAction = /** @class */ (function () {
    function LoggingAction(severity, time, caller, message, params) {
        this.severity = severity;
        this.time = time;
        this.caller = caller;
        this.message = message;
        this.params = params;
        this.kind = LoggingAction.KIND;
    }
    LoggingAction.KIND = 'logging';
    return LoggingAction;
}());
exports.LoggingAction = LoggingAction;
/**
 * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.
 */
var ForwardingLogger = /** @class */ (function () {
    function ForwardingLogger() {
    }
    ForwardingLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.error)
            this.forward(thisArg, message, logging_1.LogLevel.error, params);
    };
    ForwardingLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.warn)
            this.forward(thisArg, message, logging_1.LogLevel.warn, params);
    };
    ForwardingLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.info)
            this.forward(thisArg, message, logging_1.LogLevel.info, params);
    };
    ForwardingLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.log) {
            // We cannot forward 'log' level messages since that would lead to endless loops
            try {
                var caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);
                console.log.apply(thisArg, __spreadArrays([caller + ': ' + message], params));
            }
            catch (error) { }
        }
    };
    ForwardingLogger.prototype.forward = function (thisArg, message, logLevel, params) {
        var date = new Date();
        var action = new LoggingAction(logging_1.LogLevel[logLevel], date.toLocaleTimeString(), typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg), message, params.map(function (p) { return JSON.stringify(p); }));
        this.modelSourceProvider().then(function (modelSource) {
            try {
                modelSource.handle(action);
            }
            catch (error) {
                try {
                    console.log.apply(thisArg, [message, action, error]);
                }
                catch (error) { }
            }
        });
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.ModelSourceProvider),
        __metadata("design:type", Function)
    ], ForwardingLogger.prototype, "modelSourceProvider", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.LogLevel),
        __metadata("design:type", Number)
    ], ForwardingLogger.prototype, "logLevel", void 0);
    ForwardingLogger = __decorate([
        inversify_1.injectable()
    ], ForwardingLogger);
    return ForwardingLogger;
}());
exports.ForwardingLogger = ForwardingLogger;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/model-source.js":
/*!**********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/model-source.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "../../../node_modules/sprotty/lib/base/features/set-model.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "../../../node_modules/sprotty/lib/features/export/svg-exporter.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "../../../node_modules/sprotty/lib/base/model/smodel.js");
/**
 * A model source is serving the model to the event cycle. It represents
 * the entry point to the client for external sources, such as model
 * editors.
 *
 * As an IActionHandler it listens to actions in and reacts to them with
 * commands or actions if necessary. This way, you can implement action
 * protocols between the client and the outside world.
 *
 * There are two default implementations for a ModelSource:
 * <ul>
 * <li>the LocalModelSource handles the actions to calculate bounds and
 * set/update the model</li>
 * <li>the DiagramServer connects via websocket to a remote source. It
 * can be used to connect to a model editor that provides the model,
 * layouts diagrams, transfers selection and answers model queries from
 * the client.</li>
 */
var ModelSource = /** @class */ (function () {
    function ModelSource() {
    }
    ModelSource.prototype.initialize = function (registry) {
        // Register this model source
        registry.register(set_model_1.RequestModelAction.KIND, this);
        registry.register(svg_exporter_1.ExportSvgAction.KIND, this);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelSource.prototype, "actionDispatcher", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ModelSource.prototype, "viewerOptions", void 0);
    ModelSource = __decorate([
        inversify_1.injectable()
    ], ModelSource);
    return ModelSource;
}());
exports.ModelSource = ModelSource;
var ComputedBoundsApplicator = /** @class */ (function () {
    function ComputedBoundsApplicator() {
    }
    ComputedBoundsApplicator.prototype.apply = function (root, action) {
        var index = new smodel_1.SModelIndex();
        index.add(root);
        for (var _i = 0, _a = action.bounds; _i < _a.length; _i++) {
            var b = _a[_i];
            var element = index.getById(b.elementId);
            if (element !== undefined)
                this.applyBounds(element, b.newPosition, b.newSize);
        }
        if (action.alignments !== undefined) {
            for (var _b = 0, _c = action.alignments; _b < _c.length; _b++) {
                var a = _c[_b];
                var element = index.getById(a.elementId);
                if (element !== undefined)
                    this.applyAlignment(element, a.newAlignment);
            }
        }
        return index;
    };
    ComputedBoundsApplicator.prototype.applyAlignment = function (element, newAlignment) {
        var e = element;
        e.alignment = { x: newAlignment.x, y: newAlignment.y };
    };
    ComputedBoundsApplicator.prototype.applyBounds = function (element, newPosition, newSize) {
        var e = element;
        if (newPosition)
            e.position = __assign({}, newPosition);
        e.size = __assign({}, newSize);
    };
    ComputedBoundsApplicator = __decorate([
        inversify_1.injectable()
    ], ComputedBoundsApplicator);
    return ComputedBoundsApplicator;
}());
exports.ComputedBoundsApplicator = ComputedBoundsApplicator;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/model-source/websocket.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/model-source/websocket.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var diagram_server_1 = __webpack_require__(/*! ./diagram-server */ "../../../node_modules/sprotty/lib/model-source/diagram-server.js");
/**
 * An external ModelSource that connects to the model provider using a
 * websocket.
 */
var WebSocketDiagramServer = /** @class */ (function (_super) {
    __extends(WebSocketDiagramServer, _super);
    function WebSocketDiagramServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebSocketDiagramServer.prototype.listen = function (webSocket) {
        var _this = this;
        webSocket.addEventListener('message', function (event) {
            _this.messageReceived(event.data);
        });
        webSocket.addEventListener('error', function (event) {
            _this.logger.error(_this, 'error event received', event);
        });
        this.webSocket = webSocket;
    };
    WebSocketDiagramServer.prototype.disconnect = function () {
        if (this.webSocket) {
            this.webSocket.close();
            this.webSocket = undefined;
        }
    };
    WebSocketDiagramServer.prototype.sendMessage = function (message) {
        if (this.webSocket) {
            this.webSocket.send(JSON.stringify(message));
        }
        else {
            throw new Error('WebSocket is not connected');
        }
    };
    WebSocketDiagramServer = __decorate([
        inversify_1.injectable()
    ], WebSocketDiagramServer);
    return WebSocketDiagramServer;
}(diagram_server_1.DiagramServer));
exports.WebSocketDiagramServer = WebSocketDiagramServer;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/async.js":
/*!********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/async.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Simple implementation of the deferred pattern.
 * An object that exposes a promise and functions to resolve and reject it.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    return Deferred;
}());
exports.Deferred = Deferred;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/browser.js":
/*!**********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/browser.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var geometry_1 = __webpack_require__(/*! ./geometry */ "../../../node_modules/sprotty/lib/utils/geometry.js");
/**
 * Returns whether the mouse or keyboard event includes the CMD key
 * on Mac or CTRL key on Linux / others.
 */
function isCtrlOrCmd(event) {
    if (isMac())
        return event.metaKey;
    else
        return event.ctrlKey;
}
exports.isCtrlOrCmd = isCtrlOrCmd;
function isMac() {
    return window.navigator.userAgent.indexOf("Mac") !== -1;
}
exports.isMac = isMac;
function isCrossSite(url) {
    if (url && typeof window !== 'undefined' && window.location) {
        var baseURL = '';
        if (window.location.protocol)
            baseURL += window.location.protocol + '//';
        if (window.location.host)
            baseURL += window.location.host;
        return baseURL.length > 0 && !url.startsWith(baseURL);
    }
    return false;
}
exports.isCrossSite = isCrossSite;
/**
 * Returns the amount of scroll of the browser window as a point.
 */
function getWindowScroll() {
    if (typeof window === 'undefined') {
        return geometry_1.ORIGIN_POINT;
    }
    return {
        x: window.pageXOffset,
        y: window.pageYOffset
    };
}
exports.getWindowScroll = getWindowScroll;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/color.js":
/*!********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/color.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function rgb(red, green, blue) {
    return {
        red: red,
        green: green,
        blue: blue
    };
}
exports.rgb = rgb;
function toSVG(c) {
    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';
}
exports.toSVG = toSVG;
var ColorMap = /** @class */ (function () {
    function ColorMap(stops) {
        this.stops = stops;
    }
    ColorMap.prototype.getColor = function (t) {
        t = Math.max(0, Math.min(0.99999999, t));
        var i = Math.floor(t * this.stops.length);
        return this.stops[i];
    };
    return ColorMap;
}());
exports.ColorMap = ColorMap;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/geometry.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/geometry.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * (x,y) coordinates of the origin.
 */
exports.ORIGIN_POINT = Object.freeze({
    x: 0,
    y: 0
});
/**
 * Adds two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The sum of the two points
 */
function add(p1, p2) {
    return {
        x: p1.x + p2.x,
        y: p1.y + p2.y
    };
}
exports.add = add;
/**
 * Subtracts two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The difference of the two points
 */
function subtract(p1, p2) {
    return {
        x: p1.x - p2.x,
        y: p1.y - p2.y
    };
}
exports.subtract = subtract;
/**
 * A dimension with both width and height set to a negative value, which is considered as undefined.
 */
exports.EMPTY_DIMENSION = Object.freeze({
    width: -1,
    height: -1
});
/**
 * Checks whether the given dimention is valid, i.e. the width and height are non-zero.
 * @param {Dimension} b - Dimension object
 * @returns {boolean}
 */
function isValidDimension(d) {
    return d.width >= 0 && d.height >= 0;
}
exports.isValidDimension = isValidDimension;
exports.EMPTY_BOUNDS = Object.freeze({
    x: 0,
    y: 0,
    width: -1,
    height: -1
});
function isBounds(element) {
    return 'x' in element
        && 'y' in element
        && 'width' in element
        && 'height' in element;
}
exports.isBounds = isBounds;
/**
 * Combines the bounds of two objects into one, so that the new bounds
 * are the minimum bounds that covers both of the original bounds.
 * @param {Bounds} b0 - First bounds object
 * @param {Bounds} b1 - Second bounds object
 * @returns {Bounds} The combined bounds
 */
function combine(b0, b1) {
    if (!isValidDimension(b0))
        return isValidDimension(b1) ? b1 : exports.EMPTY_BOUNDS;
    if (!isValidDimension(b1))
        return b0;
    var minX = Math.min(b0.x, b1.x);
    var minY = Math.min(b0.y, b1.y);
    var maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));
    var maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));
    return {
        x: minX, y: minY, width: maxX - minX, height: maxY - minY
    };
}
exports.combine = combine;
/**
 * Translates the given bounds.
 * @param {Bounds} b - Bounds object
 * @param {Point} p - Vector by which to translate the bounds
 * @returns {Bounds} The translated bounds
 */
function translate(b, p) {
    return {
        x: b.x + p.x,
        y: b.y + p.y,
        width: b.width,
        height: b.height
    };
}
exports.translate = translate;
/**
 * Returns the center point of the bounds of an object
 * @param {Bounds} b - Bounds object
 * @returns {Point} the center point
 */
function center(b) {
    return {
        x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),
        y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)
    };
}
exports.center = center;
function centerOfLine(s, e) {
    var b = {
        x: s.x > e.x ? e.x : s.x,
        y: s.y > e.y ? e.y : s.y,
        width: Math.abs(e.x - s.x),
        height: Math.abs(e.y - s.y)
    };
    return center(b);
}
exports.centerOfLine = centerOfLine;
/**
 * Checks whether the point p is included in the bounds b.
 */
function includes(b, p) {
    return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;
}
exports.includes = includes;
/**
 * Enumeration of possible directions (left, right, up, down)
 * @deprecated do we use this? We should rather use a string type
 */
var Direction;
(function (Direction) {
    Direction[Direction["left"] = 0] = "left";
    Direction[Direction["right"] = 1] = "right";
    Direction[Direction["up"] = 2] = "up";
    Direction[Direction["down"] = 3] = "down";
})(Direction = exports.Direction || (exports.Direction = {}));
/**
 * Returns the "straight line" distance between two points.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Eucledian distance
 */
function euclideanDistance(a, b) {
    var dx = b.x - a.x;
    var dy = b.y - a.y;
    return Math.sqrt(dx * dx + dy * dy);
}
exports.euclideanDistance = euclideanDistance;
/**
 * Returns the distance between two points in a grid, using a
 * strictly vertical and/or horizontal path (versus straight line).
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Manhattan distance
 */
function manhattanDistance(a, b) {
    return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);
}
exports.manhattanDistance = manhattanDistance;
/**
 * Returns the maximum of the horizontal and the vertical distance.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The maximum distance
 */
function maxDistance(a, b) {
    return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));
}
exports.maxDistance = maxDistance;
/**
 * Computes the angle in radians of the given point to the x-axis of the coordinate system.
 * The result is in the range [-pi, pi].
 * @param {Point} p - A point in the Eucledian plane
 */
function angleOfPoint(p) {
    return Math.atan2(p.y, p.x);
}
exports.angleOfPoint = angleOfPoint;
/**
 * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).
 * The result is in the range [0, pi]. Returns NaN if the points are equal.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 */
function angleBetweenPoints(a, b) {
    var lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));
    if (isNaN(lengthProduct) || lengthProduct === 0)
        return NaN;
    var dotProduct = a.x * b.x + a.y * b.y;
    return Math.acos(dotProduct / lengthProduct);
}
exports.angleBetweenPoints = angleBetweenPoints;
/**
 * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.
 * @param {Point} point - Point to shift
 * @param {Point} refPoint - Point to shift towards
 * @param {Point} distance - Distance to shift
 */
function shiftTowards(point, refPoint, distance) {
    var diff = subtract(refPoint, point);
    var normalized = normalize(diff);
    var shift = { x: normalized.x * distance, y: normalized.y * distance };
    return add(point, shift);
}
exports.shiftTowards = shiftTowards;
/**
 * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.
 * @param {Point} point - Point representing the vector to be normalized
 * @returns {Point} The normalized point
 */
function normalize(point) {
    var mag = magnitude(point);
    if (mag === 0 || mag === 1) {
        return exports.ORIGIN_POINT;
    }
    return {
        x: point.x / mag,
        y: point.y / mag
    };
}
exports.normalize = normalize;
/**
 * Computes the magnitude of the vector given in `point`.
 * @param {Point} point - Point representing the vector to compute the magnitude for
 * @returns {number} The magnitude or also known as length of the `point`
 */
function magnitude(point) {
    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
}
exports.magnitude = magnitude;
/**
 * Converts from radians to degrees
 * @param {number} a - A value in radians
 * @returns {number} The converted value
 */
function toDegrees(a) {
    return a * 180 / Math.PI;
}
exports.toDegrees = toDegrees;
/**
 * Converts from degrees to radians
 * @param {number} a - A value in degrees
 * @returns {number} The converted value
 */
function toRadians(a) {
    return a * Math.PI / 180;
}
exports.toRadians = toRadians;
/**
 * Returns whether two numbers are almost equal, within a small margin (0.001)
 * @param {number} a - First number
 * @param {number} b - Second number
 * @returns {boolean} True if the two numbers are almost equal
 */
function almostEquals(a, b) {
    return Math.abs(a - b) < 1e-3;
}
exports.almostEquals = almostEquals;
/**
 * Calculates a linear combination of p0 and p1 using lambda, i.e.
 *   (1-lambda) * p0 + lambda * p1
 * @param p0
 * @param p1
 * @param lambda
 */
function linear(p0, p1, lambda) {
    return {
        x: (1 - lambda) * p0.x + lambda * p1.x,
        y: (1 - lambda) * p0.y + lambda * p1.y
    };
}
exports.linear = linear;
/**
 * A diamond or rhombus is a quadrilateral whose four sides all have the same length.
 * It consinsts of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,
 * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,
 * and the `bottomLeftSideLine`.
 */
var Diamond = /** @class */ (function () {
    function Diamond(bounds) {
        this.bounds = bounds;
    }
    Object.defineProperty(Diamond.prototype, "topPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width / 2,
                y: this.bounds.y
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "rightPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width,
                y: this.bounds.y + this.bounds.height / 2
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width / 2,
                y: this.bounds.y + this.bounds.height
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "leftPoint", {
        get: function () {
            return {
                x: this.bounds.x,
                y: this.bounds.y + this.bounds.height / 2
            };
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "topRightSideLine", {
        get: function () {
            return new PointToPointLine(this.topPoint, this.rightPoint);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "topLeftSideLine", {
        get: function () {
            return new PointToPointLine(this.topPoint, this.leftPoint);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomRightSideLine", {
        get: function () {
            return new PointToPointLine(this.bottomPoint, this.rightPoint);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomLeftSideLine", {
        get: function () {
            return new PointToPointLine(this.bottomPoint, this.leftPoint);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return the closest side of this diamond to the specified `refPoint`.
     * @param {Point} refPoint a reference point
     * @returns {Line} a line representing the closest side
     */
    Diamond.prototype.closestSideLine = function (refPoint) {
        var c = center(this.bounds);
        if (refPoint.x > c.x) {
            if (refPoint.y > c.y) {
                return this.bottomRightSideLine;
            }
            else {
                return this.topRightSideLine;
            }
        }
        else {
            if (refPoint.y > c.y) {
                return this.bottomLeftSideLine;
            }
            else {
                return this.topLeftSideLine;
            }
        }
    };
    return Diamond;
}());
exports.Diamond = Diamond;
/**
 * A line made up from two points.
 */
var PointToPointLine = /** @class */ (function () {
    function PointToPointLine(p1, p2) {
        this.p1 = p1;
        this.p2 = p2;
    }
    Object.defineProperty(PointToPointLine.prototype, "a", {
        get: function () {
            return this.p1.y - this.p2.y;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "b", {
        get: function () {
            return this.p2.x - this.p1.x;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "c", {
        get: function () {
            return this.p2.x * this.p1.y - this.p1.x * this.p2.y;
        },
        enumerable: true,
        configurable: true
    });
    return PointToPointLine;
}());
exports.PointToPointLine = PointToPointLine;
/**
 * Returns the intersection of two lines `l1` and `l2`
 * @param {Line} l1 - A line
 * @param {Line} l2 - Another line
 * @returns {Point} The intersection point of `l1` and `l2`
 */
function intersection(l1, l2) {
    return {
        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),
        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)
    };
}
exports.intersection = intersection;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/inversify.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/inversify.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
function isInjectable(constr) {
    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;
}
exports.isInjectable = isInjectable;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/iterable.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/iterable.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A helper class that allows to easily create fluent iterables.
 */
var FluentIterableImpl = /** @class */ (function () {
    function FluentIterableImpl(startFn, nextFn) {
        this.startFn = startFn;
        this.nextFn = nextFn;
    }
    FluentIterableImpl.prototype[Symbol.iterator] = function () {
        var _a;
        var _this = this;
        var iterator = (_a = {
                state: this.startFn(),
                next: function () { return _this.nextFn(iterator.state); }
            },
            _a[Symbol.iterator] = function () { return iterator; },
            _a);
        return iterator;
    };
    FluentIterableImpl.prototype.filter = function (callback) {
        return filterIterable(this, callback);
    };
    FluentIterableImpl.prototype.map = function (callback) {
        return mapIterable(this, callback);
    };
    FluentIterableImpl.prototype.forEach = function (callback) {
        var iterator = this[Symbol.iterator]();
        var index = 0;
        var result;
        do {
            result = iterator.next();
            if (result.value !== undefined)
                callback(result.value, index);
            index++;
        } while (!result.done);
    };
    FluentIterableImpl.prototype.indexOf = function (element) {
        var iterator = this[Symbol.iterator]();
        var index = 0;
        var result;
        do {
            result = iterator.next();
            if (result.value === element)
                return index;
            index++;
        } while (!result.done);
        return -1;
    };
    return FluentIterableImpl;
}());
exports.FluentIterableImpl = FluentIterableImpl;
/**
 * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.
 */
function toArray(input) {
    if (input.constructor === Array) {
        return input;
    }
    var result = [];
    input.forEach(function (element) { return result.push(element); });
    return result;
}
exports.toArray = toArray;
exports.DONE_RESULT = Object.freeze({ done: true, value: undefined });
/**
 * Create a fluent iterable that filters the content of the given iterable or array.
 */
function filterIterable(input, callback) {
    return new FluentIterableImpl(function () { return createIterator(input); }, function (iterator) {
        var result;
        do {
            result = iterator.next();
        } while (!result.done && !callback(result.value));
        return result;
    });
}
exports.filterIterable = filterIterable;
/**
 * Create a fluent iterable that maps the content of the given iterable or array.
 */
function mapIterable(input, callback) {
    return new FluentIterableImpl(function () { return createIterator(input); }, function (iterator) {
        var _a = iterator.next(), done = _a.done, value = _a.value;
        if (done)
            return exports.DONE_RESULT;
        else
            return { done: false, value: callback(value) };
    });
}
exports.mapIterable = mapIterable;
/**
 * Create an iterator for the given iterable or array.
 */
function createIterator(collection) {
    var method = collection[Symbol.iterator];
    if (typeof method === 'function') {
        return method.call(collection);
    }
    var length = collection.length;
    if (typeof length === 'number' && length >= 0) {
        return new ArrayIterator(collection);
    }
    return { next: function () { return exports.DONE_RESULT; } };
}
/**
 * Iterator implementation for arrays.
 */
var ArrayIterator = /** @class */ (function () {
    function ArrayIterator(array) {
        this.array = array;
        this.index = 0;
    }
    ArrayIterator.prototype.next = function () {
        if (this.index < this.array.length)
            return { done: false, value: this.array[this.index++] };
        else
            return exports.DONE_RESULT;
    };
    ArrayIterator.prototype[Symbol.iterator] = function () {
        return this;
    };
    return ArrayIterator;
}());


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/keyboard.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/keyboard.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var browser_1 = __webpack_require__(/*! ./browser */ "../../../node_modules/sprotty/lib/utils/browser.js");
/**
 * Returns whether the keyboard event matches the keystroke described by the given
 * code and modifiers. The code must comply to the format of the `code` property
 * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is
 * considered by this function if possible.
 */
function matchesKeystroke(event, code) {
    var modifiers = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        modifiers[_i - 2] = arguments[_i];
    }
    if (getActualCode(event) !== code)
        return false;
    if (browser_1.isMac()) {
        if (event.ctrlKey !== (modifiers.findIndex(function (m) { return m === 'ctrl'; }) >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(function (m) { return m === 'meta' || m === 'ctrlCmd'; }) >= 0))
            return false;
    }
    else {
        if (event.ctrlKey !== (modifiers.findIndex(function (m) { return m === 'ctrl' || m === 'ctrlCmd'; }) >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(function (m) { return m === 'meta'; }) >= 0))
            return false;
    }
    if (event.altKey !== (modifiers.findIndex(function (m) { return m === 'alt'; }) >= 0))
        return false;
    if (event.shiftKey !== (modifiers.findIndex(function (m) { return m === 'shift'; }) >= 0))
        return false;
    return true;
}
exports.matchesKeystroke = matchesKeystroke;
/**
 * Determines a key code from the given event. This is necessary because the `code` property of
 * a KeyboardEvent does not consider keyboard layouts.
 */
function getActualCode(event) {
    if (event.keyCode) {
        var result = STRING_CODE[event.keyCode];
        if (result !== undefined)
            return result;
    }
    return event.code;
}
exports.getActualCode = getActualCode;
var STRING_CODE = new Array(256);
(function () {
    function addKeyCode(stringCode, numericCode) {
        if (STRING_CODE[numericCode] === undefined)
            STRING_CODE[numericCode] = stringCode;
    }
    addKeyCode('Pause', 3);
    addKeyCode('Backspace', 8);
    addKeyCode('Tab', 9);
    addKeyCode('Enter', 13);
    addKeyCode('ShiftLeft', 16);
    addKeyCode('ShiftRight', 16);
    addKeyCode('ControlLeft', 17);
    addKeyCode('ControlRight', 17);
    addKeyCode('AltLeft', 18);
    addKeyCode('AltRight', 18);
    addKeyCode('CapsLock', 20);
    addKeyCode('Escape', 27);
    addKeyCode('Space', 32);
    addKeyCode('PageUp', 33);
    addKeyCode('PageDown', 34);
    addKeyCode('End', 35);
    addKeyCode('Home', 36);
    addKeyCode('ArrowLeft', 37);
    addKeyCode('ArrowUp', 38);
    addKeyCode('ArrowRight', 39);
    addKeyCode('ArrowDown', 40);
    addKeyCode('Insert', 45);
    addKeyCode('Delete', 46);
    addKeyCode('Digit1', 49);
    addKeyCode('Digit2', 50);
    addKeyCode('Digit3', 51);
    addKeyCode('Digit4', 52);
    addKeyCode('Digit5', 53);
    addKeyCode('Digit6', 54);
    addKeyCode('Digit7', 55);
    addKeyCode('Digit8', 56);
    addKeyCode('Digit9', 57);
    addKeyCode('Digit0', 48);
    addKeyCode('KeyA', 65);
    addKeyCode('KeyB', 66);
    addKeyCode('KeyC', 67);
    addKeyCode('KeyD', 68);
    addKeyCode('KeyE', 69);
    addKeyCode('KeyF', 70);
    addKeyCode('KeyG', 71);
    addKeyCode('KeyH', 72);
    addKeyCode('KeyI', 73);
    addKeyCode('KeyJ', 74);
    addKeyCode('KeyK', 75);
    addKeyCode('KeyL', 76);
    addKeyCode('KeyM', 77);
    addKeyCode('KeyN', 78);
    addKeyCode('KeyO', 79);
    addKeyCode('KeyP', 80);
    addKeyCode('KeyQ', 81);
    addKeyCode('KeyR', 82);
    addKeyCode('KeyS', 83);
    addKeyCode('KeyT', 84);
    addKeyCode('KeyU', 85);
    addKeyCode('KeyV', 86);
    addKeyCode('KeyW', 87);
    addKeyCode('KeyX', 88);
    addKeyCode('KeyY', 89);
    addKeyCode('KeyZ', 90);
    addKeyCode('OSLeft', 91);
    addKeyCode('MetaLeft', 91);
    addKeyCode('OSRight', 92);
    addKeyCode('MetaRight', 92);
    addKeyCode('ContextMenu', 93);
    addKeyCode('Numpad0', 96);
    addKeyCode('Numpad1', 97);
    addKeyCode('Numpad2', 98);
    addKeyCode('Numpad3', 99);
    addKeyCode('Numpad4', 100);
    addKeyCode('Numpad5', 101);
    addKeyCode('Numpad6', 102);
    addKeyCode('Numpad7', 103);
    addKeyCode('Numpad8', 104);
    addKeyCode('Numpad9', 105);
    addKeyCode('NumpadMultiply', 106);
    addKeyCode('NumpadAdd', 107);
    addKeyCode('NumpadSeparator', 108);
    addKeyCode('NumpadSubtract', 109);
    addKeyCode('NumpadDecimal', 110);
    addKeyCode('NumpadDivide', 111);
    addKeyCode('F1', 112);
    addKeyCode('F2', 113);
    addKeyCode('F3', 114);
    addKeyCode('F4', 115);
    addKeyCode('F5', 116);
    addKeyCode('F6', 117);
    addKeyCode('F7', 118);
    addKeyCode('F8', 119);
    addKeyCode('F9', 120);
    addKeyCode('F10', 121);
    addKeyCode('F11', 122);
    addKeyCode('F12', 123);
    addKeyCode('F13', 124);
    addKeyCode('F14', 125);
    addKeyCode('F15', 126);
    addKeyCode('F16', 127);
    addKeyCode('F17', 128);
    addKeyCode('F18', 129);
    addKeyCode('F19', 130);
    addKeyCode('F20', 131);
    addKeyCode('F21', 132);
    addKeyCode('F22', 133);
    addKeyCode('F23', 134);
    addKeyCode('F24', 135);
    addKeyCode('NumLock', 144);
    addKeyCode('ScrollLock', 145);
    addKeyCode('Semicolon', 186);
    addKeyCode('Equal', 187);
    addKeyCode('Comma', 188);
    addKeyCode('Minus', 189);
    addKeyCode('Period', 190);
    addKeyCode('Slash', 191);
    addKeyCode('Backquote', 192);
    addKeyCode('IntlRo', 193);
    addKeyCode('BracketLeft', 219);
    addKeyCode('Backslash', 220);
    addKeyCode('BracketRight', 221);
    addKeyCode('Quote', 222);
    addKeyCode('IntlYen', 255);
})();


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/logging.js":
/*!**********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/logging.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "../../../node_modules/sprotty/lib/base/types.js");
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["none"] = 0] = "none";
    LogLevel[LogLevel["error"] = 1] = "error";
    LogLevel[LogLevel["warn"] = 2] = "warn";
    LogLevel[LogLevel["info"] = 3] = "info";
    LogLevel[LogLevel["log"] = 4] = "log";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var NullLogger = /** @class */ (function () {
    function NullLogger() {
        this.logLevel = LogLevel.none;
    }
    NullLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger = __decorate([
        inversify_1.injectable()
    ], NullLogger);
    return NullLogger;
}());
exports.NullLogger = NullLogger;
var ConsoleLogger = /** @class */ (function () {
    function ConsoleLogger() {
        this.logLevel = LogLevel.log;
        this.viewOptions = { baseDiv: '' };
    }
    ConsoleLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.error)
            try {
                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.warn)
            try {
                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.info)
            try {
                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.log)
            try {
                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.consoleArguments = function (thisArg, message, params) {
        var caller;
        if (typeof thisArg === 'object')
            caller = thisArg.constructor.name;
        else
            caller = thisArg;
        var date = new Date();
        return __spreadArrays([date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message], params);
    };
    __decorate([
        inversify_1.inject(types_1.TYPES.LogLevel),
        __metadata("design:type", Number)
    ], ConsoleLogger.prototype, "logLevel", void 0);
    __decorate([
        inversify_1.inject(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ConsoleLogger.prototype, "viewOptions", void 0);
    ConsoleLogger = __decorate([
        inversify_1.injectable()
    ], ConsoleLogger);
    return ConsoleLogger;
}());
exports.ConsoleLogger = ConsoleLogger;


/***/ }),

/***/ "../../../node_modules/sprotty/lib/utils/registry.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/sprotty/lib/utils/registry.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var ProviderRegistry = /** @class */ (function () {
    function ProviderRegistry() {
        this.elements = new Map;
    }
    ProviderRegistry.prototype.register = function (key, cstr) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, cstr);
    };
    ProviderRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    ProviderRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    ProviderRegistry.prototype.get = function (key, arg) {
        var existingCstr = this.elements.get(key);
        if (existingCstr)
            return new existingCstr(arg);
        else
            return this.missing(key, arg);
    };
    ProviderRegistry.prototype.missing = function (key, arg) {
        throw new Error('Unknown registry key: ' + key);
    };
    ProviderRegistry = __decorate([
        inversify_1.injectable()
    ], ProviderRegistry);
    return ProviderRegistry;
}());
exports.ProviderRegistry = ProviderRegistry;
var FactoryRegistry = /** @class */ (function () {
    function FactoryRegistry() {
        this.elements = new Map;
    }
    FactoryRegistry.prototype.register = function (key, factory) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, factory);
    };
    FactoryRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    FactoryRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    FactoryRegistry.prototype.get = function (key, arg) {
        var existingFactory = this.elements.get(key);
        if (existingFactory)
            return existingFactory(arg);
        else
            return this.missing(key, arg);
    };
    FactoryRegistry.prototype.missing = function (key, arg) {
        throw new Error('Unknown registry key: ' + key);
    };
    FactoryRegistry = __decorate([
        inversify_1.injectable()
    ], FactoryRegistry);
    return FactoryRegistry;
}());
exports.FactoryRegistry = FactoryRegistry;
var InstanceRegistry = /** @class */ (function () {
    function InstanceRegistry() {
        this.elements = new Map;
    }
    InstanceRegistry.prototype.register = function (key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, instance);
    };
    InstanceRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    InstanceRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    InstanceRegistry.prototype.get = function (key) {
        var existingInstance = this.elements.get(key);
        if (existingInstance)
            return existingInstance;
        else
            return this.missing(key);
    };
    InstanceRegistry.prototype.missing = function (key) {
        throw new Error('Unknown registry key: ' + key);
    };
    InstanceRegistry = __decorate([
        inversify_1.injectable()
    ], InstanceRegistry);
    return InstanceRegistry;
}());
exports.InstanceRegistry = InstanceRegistry;
var MultiInstanceRegistry = /** @class */ (function () {
    function MultiInstanceRegistry() {
        this.elements = new Map;
    }
    MultiInstanceRegistry.prototype.register = function (key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        var instances = this.elements.get(key);
        if (instances !== undefined)
            instances.push(instance);
        else
            this.elements.set(key, [instance]);
    };
    MultiInstanceRegistry.prototype.deregisterAll = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    MultiInstanceRegistry.prototype.get = function (key) {
        var existingInstances = this.elements.get(key);
        if (existingInstances !== undefined)
            return existingInstances;
        else
            return [];
    };
    MultiInstanceRegistry = __decorate([
        inversify_1.injectable()
    ], MultiInstanceRegistry);
    return MultiInstanceRegistry;
}());
exports.MultiInstanceRegistry = MultiInstanceRegistry;


/***/ }),

/***/ "../../../node_modules/style-loader/lib/addStyles.js":
/*!***********************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/style-loader/lib/addStyles.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "../../../node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "../../../node_modules/style-loader/lib/urls.js":
/*!******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/style-loader/lib/urls.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "../../../node_modules/timers-browserify/main.js":
/*!*******************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/timers-browserify/main.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "../../../node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../../../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../../node_modules/void-elements/index.js":
/*!****************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/void-elements/index.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This file automatically generated from `pre-publish.js`.
 * Do not manually edit.
 */

module.exports = {
  "area": true,
  "base": true,
  "br": true,
  "col": true,
  "embed": true,
  "hr": true,
  "img": true,
  "input": true,
  "keygen": true,
  "link": true,
  "menuitem": true,
  "meta": true,
  "param": true,
  "source": true,
  "track": true,
  "wbr": true
};


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/connection.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/connection.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var socket_1 = __webpack_require__(/*! ./socket */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/index.js");
var logger_1 = __webpack_require__(/*! ./logger */ "../../../node_modules/vscode-ws-jsonrpc/lib/logger.js");
function listen(options) {
    var webSocket = options.webSocket, onConnection = options.onConnection;
    var logger = options.logger || new logger_1.ConsoleLogger();
    webSocket.onopen = function () {
        var socket = toSocket(webSocket);
        var connection = socket_1.createWebSocketConnection(socket, logger);
        onConnection(connection);
    };
}
exports.listen = listen;
function toSocket(webSocket) {
    return {
        send: function (content) { return webSocket.send(content); },
        onMessage: function (cb) { return webSocket.onmessage = function (event) { return cb(event.data); }; },
        onError: function (cb) { return webSocket.onerror = function (event) {
            if ('message' in event) {
                cb(event.message);
            }
        }; },
        onClose: function (cb) { return webSocket.onclose = function (event) { return cb(event.code, event.reason); }; },
        dispose: function () { return webSocket.close(); }
    };
}
exports.toSocket = toSocket;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/disposable.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/disposable.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var events_1 = __webpack_require__(/*! vscode-jsonrpc/lib/events */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js");
exports.Disposable = events_1.Disposable;
var DisposableCollection = /** @class */ (function () {
    function DisposableCollection() {
        this.disposables = [];
    }
    DisposableCollection.prototype.dispose = function () {
        while (this.disposables.length !== 0) {
            this.disposables.pop().dispose();
        }
    };
    DisposableCollection.prototype.push = function (disposable) {
        var disposables = this.disposables;
        disposables.push(disposable);
        return {
            dispose: function () {
                var index = disposables.indexOf(disposable);
                if (index !== -1) {
                    disposables.splice(index, 1);
                }
            }
        };
    };
    return DisposableCollection;
}());
exports.DisposableCollection = DisposableCollection;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/index.js":
/*!************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/index.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
__export(__webpack_require__(/*! vscode-jsonrpc */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/main.js"));
__export(__webpack_require__(/*! vscode-jsonrpc/lib/messages */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messages.js"));
__export(__webpack_require__(/*! ./disposable */ "../../../node_modules/vscode-ws-jsonrpc/lib/disposable.js"));
__export(__webpack_require__(/*! ./socket */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/index.js"));
__export(__webpack_require__(/*! ./logger */ "../../../node_modules/vscode-ws-jsonrpc/lib/logger.js"));
__export(__webpack_require__(/*! ./connection */ "../../../node_modules/vscode-ws-jsonrpc/lib/connection.js"));


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/logger.js":
/*!*************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/logger.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ConsoleLogger = /** @class */ (function () {
    function ConsoleLogger() {
    }
    ConsoleLogger.prototype.error = function (message) {
        console.error(message);
    };
    ConsoleLogger.prototype.warn = function (message) {
        console.warn(message);
    };
    ConsoleLogger.prototype.info = function (message) {
        console.info(message);
    };
    ConsoleLogger.prototype.log = function (message) {
        console.log(message);
    };
    ConsoleLogger.prototype.debug = function (message) {
        console.debug(message);
    };
    return ConsoleLogger;
}());
exports.ConsoleLogger = ConsoleLogger;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/connection.js":
/*!************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/socket/connection.js ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/main.js");
var reader_1 = __webpack_require__(/*! ./reader */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/reader.js");
var writer_1 = __webpack_require__(/*! ./writer */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/writer.js");
function createWebSocketConnection(socket, logger) {
    var messageReader = new reader_1.WebSocketMessageReader(socket);
    var messageWriter = new writer_1.WebSocketMessageWriter(socket);
    var connection = vscode_jsonrpc_1.createMessageConnection(messageReader, messageWriter, logger);
    connection.onClose(function () { return connection.dispose(); });
    return connection;
}
exports.createWebSocketConnection = createWebSocketConnection;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/index.js":
/*!*******************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/socket/index.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(/*! ./reader */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/reader.js"));
__export(__webpack_require__(/*! ./writer */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/writer.js"));
__export(__webpack_require__(/*! ./connection */ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/connection.js"));


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/reader.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/socket/reader.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var messageReader_1 = __webpack_require__(/*! vscode-jsonrpc/lib/messageReader */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageReader.js");
var WebSocketMessageReader = /** @class */ (function (_super) {
    __extends(WebSocketMessageReader, _super);
    function WebSocketMessageReader(socket) {
        var _this = _super.call(this) || this;
        _this.socket = socket;
        _this.state = 'initial';
        _this.events = [];
        _this.socket.onMessage(function (message) {
            return _this.readMessage(message);
        });
        _this.socket.onError(function (error) {
            return _this.fireError(error);
        });
        _this.socket.onClose(function (code, reason) {
            if (code !== 1000) {
                var error = {
                    name: '' + code,
                    message: "Error during socket reconnect: code = " + code + ", reason = " + reason
                };
                _this.fireError(error);
            }
            _this.fireClose();
        });
        return _this;
    }
    WebSocketMessageReader.prototype.listen = function (callback) {
        if (this.state === 'initial') {
            this.state = 'listening';
            this.callback = callback;
            while (this.events.length !== 0) {
                var event_1 = this.events.pop();
                if (event_1.message) {
                    this.readMessage(event_1.message);
                }
                else if (event_1.error) {
                    this.fireError(event_1.error);
                }
                else {
                    this.fireClose();
                }
            }
        }
    };
    WebSocketMessageReader.prototype.readMessage = function (message) {
        if (this.state === 'initial') {
            this.events.splice(0, 0, { message: message });
        }
        else if (this.state === 'listening') {
            var data = JSON.parse(message);
            this.callback(data);
        }
    };
    WebSocketMessageReader.prototype.fireError = function (error) {
        if (this.state === 'initial') {
            this.events.splice(0, 0, { error: error });
        }
        else if (this.state === 'listening') {
            _super.prototype.fireError.call(this, error);
        }
    };
    WebSocketMessageReader.prototype.fireClose = function () {
        if (this.state === 'initial') {
            this.events.splice(0, 0, {});
        }
        else if (this.state === 'listening') {
            _super.prototype.fireClose.call(this);
        }
        this.state = 'closed';
    };
    return WebSocketMessageReader;
}(messageReader_1.AbstractMessageReader));
exports.WebSocketMessageReader = WebSocketMessageReader;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/lib/socket/writer.js":
/*!********************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/lib/socket/writer.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var messageWriter_1 = __webpack_require__(/*! vscode-jsonrpc/lib/messageWriter */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageWriter.js");
var WebSocketMessageWriter = /** @class */ (function (_super) {
    __extends(WebSocketMessageWriter, _super);
    function WebSocketMessageWriter(socket) {
        var _this = _super.call(this) || this;
        _this.socket = socket;
        _this.errorCount = 0;
        return _this;
    }
    WebSocketMessageWriter.prototype.write = function (msg) {
        try {
            var content = JSON.stringify(msg);
            this.socket.send(content);
        }
        catch (e) {
            this.errorCount++;
            this.fireError(e, msg, this.errorCount);
        }
    };
    return WebSocketMessageWriter;
}(messageWriter_1.AbstractMessageWriter));
exports.WebSocketMessageWriter = WebSocketMessageWriter;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/cancellation.js":
/*!***********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/cancellation.js ***!
  \***********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! ./events */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js");
var Is = __webpack_require__(/*! ./is */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js");
var CancellationToken;
(function (CancellationToken) {
    CancellationToken.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: events_1.Event.None
    });
    CancellationToken.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: events_1.Event.None
    });
    function is(value) {
        var candidate = value;
        return candidate && (candidate === CancellationToken.None
            || candidate === CancellationToken.Cancelled
            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));
    }
    CancellationToken.is = is;
})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));
var shortcutEvent = Object.freeze(function (callback, context) {
    var handle = setTimeout(callback.bind(context), 0);
    return { dispose: function () { clearTimeout(handle); } };
});
var MutableToken = /** @class */ (function () {
    function MutableToken() {
        this._isCancelled = false;
    }
    MutableToken.prototype.cancel = function () {
        if (!this._isCancelled) {
            this._isCancelled = true;
            if (this._emitter) {
                this._emitter.fire(undefined);
                this._emitter = undefined;
            }
        }
    };
    Object.defineProperty(MutableToken.prototype, "isCancellationRequested", {
        get: function () {
            return this._isCancelled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MutableToken.prototype, "onCancellationRequested", {
        get: function () {
            if (this._isCancelled) {
                return shortcutEvent;
            }
            if (!this._emitter) {
                this._emitter = new events_1.Emitter();
            }
            return this._emitter.event;
        },
        enumerable: true,
        configurable: true
    });
    return MutableToken;
}());
var CancellationTokenSource = /** @class */ (function () {
    function CancellationTokenSource() {
    }
    Object.defineProperty(CancellationTokenSource.prototype, "token", {
        get: function () {
            if (!this._token) {
                // be lazy and create the token only when
                // actually needed
                this._token = new MutableToken();
            }
            return this._token;
        },
        enumerable: true,
        configurable: true
    });
    CancellationTokenSource.prototype.cancel = function () {
        if (!this._token) {
            // save an object by returning the default
            // cancelled token when cancellation happens
            // before someone asks for the token
            this._token = CancellationToken.Cancelled;
        }
        else {
            this._token.cancel();
        }
    };
    CancellationTokenSource.prototype.dispose = function () {
        this.cancel();
    };
    return CancellationTokenSource;
}());
exports.CancellationTokenSource = CancellationTokenSource;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js":
/*!*****************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", { value: true });
var Disposable;
(function (Disposable) {
    function create(func) {
        return {
            dispose: func
        };
    }
    Disposable.create = create;
})(Disposable = exports.Disposable || (exports.Disposable = {}));
var Event;
(function (Event) {
    var _disposable = { dispose: function () { } };
    Event.None = function () { return _disposable; };
})(Event = exports.Event || (exports.Event = {}));
var CallbackList = /** @class */ (function () {
    function CallbackList() {
    }
    CallbackList.prototype.add = function (callback, context, bucket) {
        var _this = this;
        if (context === void 0) { context = null; }
        if (!this._callbacks) {
            this._callbacks = [];
            this._contexts = [];
        }
        this._callbacks.push(callback);
        this._contexts.push(context);
        if (Array.isArray(bucket)) {
            bucket.push({ dispose: function () { return _this.remove(callback, context); } });
        }
    };
    CallbackList.prototype.remove = function (callback, context) {
        if (context === void 0) { context = null; }
        if (!this._callbacks) {
            return;
        }
        var foundCallbackWithDifferentContext = false;
        for (var i = 0, len = this._callbacks.length; i < len; i++) {
            if (this._callbacks[i] === callback) {
                if (this._contexts[i] === context) {
                    // callback & context match => remove it
                    this._callbacks.splice(i, 1);
                    this._contexts.splice(i, 1);
                    return;
                }
                else {
                    foundCallbackWithDifferentContext = true;
                }
            }
        }
        if (foundCallbackWithDifferentContext) {
            throw new Error('When adding a listener with a context, you should remove it with the same context');
        }
    };
    CallbackList.prototype.invoke = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!this._callbacks) {
            return [];
        }
        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);
        for (var i = 0, len = callbacks.length; i < len; i++) {
            try {
                ret.push(callbacks[i].apply(contexts[i], args));
            }
            catch (e) {
                console.error(e);
            }
        }
        return ret;
    };
    CallbackList.prototype.isEmpty = function () {
        return !this._callbacks || this._callbacks.length === 0;
    };
    CallbackList.prototype.dispose = function () {
        this._callbacks = undefined;
        this._contexts = undefined;
    };
    return CallbackList;
}());
var Emitter = /** @class */ (function () {
    function Emitter(_options) {
        this._options = _options;
    }
    Object.defineProperty(Emitter.prototype, "event", {
        /**
         * For the public to allow to subscribe
         * to events from this Emitter
         */
        get: function () {
            var _this = this;
            if (!this._event) {
                this._event = function (listener, thisArgs, disposables) {
                    if (!_this._callbacks) {
                        _this._callbacks = new CallbackList();
                    }
                    if (_this._options && _this._options.onFirstListenerAdd && _this._callbacks.isEmpty()) {
                        _this._options.onFirstListenerAdd(_this);
                    }
                    _this._callbacks.add(listener, thisArgs);
                    var result;
                    result = {
                        dispose: function () {
                            _this._callbacks.remove(listener, thisArgs);
                            result.dispose = Emitter._noop;
                            if (_this._options && _this._options.onLastListenerRemove && _this._callbacks.isEmpty()) {
                                _this._options.onLastListenerRemove(_this);
                            }
                        }
                    };
                    if (Array.isArray(disposables)) {
                        disposables.push(result);
                    }
                    return result;
                };
            }
            return this._event;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * To be kept private to fire an event to
     * subscribers
     */
    Emitter.prototype.fire = function (event) {
        if (this._callbacks) {
            this._callbacks.invoke.call(this._callbacks, event);
        }
    };
    Emitter.prototype.dispose = function () {
        if (this._callbacks) {
            this._callbacks.dispose();
            this._callbacks = undefined;
        }
    };
    Emitter._noop = function () { };
    return Emitter;
}());
exports.Emitter = Emitter;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js":
/*!*************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js ***!
  \*************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", { value: true });
var toString = Object.prototype.toString;
function boolean(value) {
    return value === true || value === false;
}
exports.boolean = boolean;
function string(value) {
    return toString.call(value) === '[object String]';
}
exports.string = string;
function number(value) {
    return toString.call(value) === '[object Number]';
}
exports.number = number;
function error(value) {
    return toString.call(value) === '[object Error]';
}
exports.error = error;
function func(value) {
    return toString.call(value) === '[object Function]';
}
exports.func = func;
function array(value) {
    return Array.isArray(value);
}
exports.array = array;
function stringArray(value) {
    return array(value) && value.every(function (elem) { return string(elem); });
}
exports.stringArray = stringArray;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/linkedMap.js":
/*!********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/linkedMap.js ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", { value: true });
var Touch;
(function (Touch) {
    Touch.None = 0;
    Touch.First = 1;
    Touch.Last = 2;
})(Touch = exports.Touch || (exports.Touch = {}));
var LinkedMap = /** @class */ (function () {
    function LinkedMap() {
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
    }
    LinkedMap.prototype.clear = function () {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
    };
    LinkedMap.prototype.isEmpty = function () {
        return !this._head && !this._tail;
    };
    Object.defineProperty(LinkedMap.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: true,
        configurable: true
    });
    LinkedMap.prototype.has = function (key) {
        return this._map.has(key);
    };
    LinkedMap.prototype.get = function (key) {
        var item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        return item.value;
    };
    LinkedMap.prototype.set = function (key, value, touch) {
        if (touch === void 0) { touch = Touch.None; }
        var item = this._map.get(key);
        if (item) {
            item.value = value;
            if (touch !== Touch.None) {
                this.touch(item, touch);
            }
        }
        else {
            item = { key: key, value: value, next: undefined, previous: undefined };
            switch (touch) {
                case Touch.None:
                    this.addItemLast(item);
                    break;
                case Touch.First:
                    this.addItemFirst(item);
                    break;
                case Touch.Last:
                    this.addItemLast(item);
                    break;
                default:
                    this.addItemLast(item);
                    break;
            }
            this._map.set(key, item);
            this._size++;
        }
    };
    LinkedMap.prototype.delete = function (key) {
        var item = this._map.get(key);
        if (!item) {
            return false;
        }
        this._map.delete(key);
        this.removeItem(item);
        this._size--;
        return true;
    };
    LinkedMap.prototype.shift = function () {
        if (!this._head && !this._tail) {
            return undefined;
        }
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        var item = this._head;
        this._map.delete(item.key);
        this.removeItem(item);
        this._size--;
        return item.value;
    };
    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {
        var current = this._head;
        while (current) {
            if (thisArg) {
                callbackfn.bind(thisArg)(current.value, current.key, this);
            }
            else {
                callbackfn(current.value, current.key, this);
            }
            current = current.next;
        }
    };
    LinkedMap.prototype.forEachReverse = function (callbackfn, thisArg) {
        var current = this._tail;
        while (current) {
            if (thisArg) {
                callbackfn.bind(thisArg)(current.value, current.key, this);
            }
            else {
                callbackfn(current.value, current.key, this);
            }
            current = current.previous;
        }
    };
    LinkedMap.prototype.values = function () {
        var result = [];
        var current = this._head;
        while (current) {
            result.push(current.value);
            current = current.next;
        }
        return result;
    };
    LinkedMap.prototype.keys = function () {
        var result = [];
        var current = this._head;
        while (current) {
            result.push(current.key);
            current = current.next;
        }
        return result;
    };
    /* JSON RPC run on es5 which has no Symbol.iterator
    public keys(): IterableIterator<K> {
        let current = this._head;
        let iterator: IterableIterator<K> = {
            [Symbol.iterator]() {
                return iterator;
            },
            next():IteratorResult<K> {
                if (current) {
                    let result = { value: current.key, done: false };
                    current = current.next;
                    return result;
                } else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }

    public values(): IterableIterator<V> {
        let current = this._head;
        let iterator: IterableIterator<V> = {
            [Symbol.iterator]() {
                return iterator;
            },
            next():IteratorResult<V> {
                if (current) {
                    let result = { value: current.value, done: false };
                    current = current.next;
                    return result;
                } else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    */
    LinkedMap.prototype.addItemFirst = function (item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._tail = item;
        }
        else if (!this._head) {
            throw new Error('Invalid list');
        }
        else {
            item.next = this._head;
            this._head.previous = item;
        }
        this._head = item;
    };
    LinkedMap.prototype.addItemLast = function (item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._head = item;
        }
        else if (!this._tail) {
            throw new Error('Invalid list');
        }
        else {
            item.previous = this._tail;
            this._tail.next = item;
        }
        this._tail = item;
    };
    LinkedMap.prototype.removeItem = function (item) {
        if (item === this._head && item === this._tail) {
            this._head = undefined;
            this._tail = undefined;
        }
        else if (item === this._head) {
            this._head = item.next;
        }
        else if (item === this._tail) {
            this._tail = item.previous;
        }
        else {
            var next = item.next;
            var previous = item.previous;
            if (!next || !previous) {
                throw new Error('Invalid list');
            }
            next.previous = previous;
            previous.next = next;
        }
    };
    LinkedMap.prototype.touch = function (item, touch) {
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        if ((touch !== Touch.First && touch !== Touch.Last)) {
            return;
        }
        if (touch === Touch.First) {
            if (item === this._head) {
                return;
            }
            var next = item.next;
            var previous = item.previous;
            // Unlink the item
            if (item === this._tail) {
                // previous must be defined since item was not head but is tail
                // So there are more than on item in the map
                previous.next = undefined;
                this._tail = previous;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            // Insert the node at head
            item.previous = undefined;
            item.next = this._head;
            this._head.previous = item;
            this._head = item;
        }
        else if (touch === Touch.Last) {
            if (item === this._tail) {
                return;
            }
            var next = item.next;
            var previous = item.previous;
            // Unlink the item.
            if (item === this._head) {
                // next must be defined since item was not tail but is head
                // So there are more than on item in the map
                next.previous = undefined;
                this._head = next;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            item.next = undefined;
            item.previous = this._tail;
            this._tail.next = item;
            this._tail = item;
        }
    };
    return LinkedMap;
}());
exports.LinkedMap = LinkedMap;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/main.js":
/*!***************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/main.js ***!
  \***************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
/// <reference path="./thenable.ts" />

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var Is = __webpack_require__(/*! ./is */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js");
var messages_1 = __webpack_require__(/*! ./messages */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messages.js");
exports.RequestType = messages_1.RequestType;
exports.RequestType0 = messages_1.RequestType0;
exports.RequestType1 = messages_1.RequestType1;
exports.RequestType2 = messages_1.RequestType2;
exports.RequestType3 = messages_1.RequestType3;
exports.RequestType4 = messages_1.RequestType4;
exports.RequestType5 = messages_1.RequestType5;
exports.RequestType6 = messages_1.RequestType6;
exports.RequestType7 = messages_1.RequestType7;
exports.RequestType8 = messages_1.RequestType8;
exports.RequestType9 = messages_1.RequestType9;
exports.ResponseError = messages_1.ResponseError;
exports.ErrorCodes = messages_1.ErrorCodes;
exports.NotificationType = messages_1.NotificationType;
exports.NotificationType0 = messages_1.NotificationType0;
exports.NotificationType1 = messages_1.NotificationType1;
exports.NotificationType2 = messages_1.NotificationType2;
exports.NotificationType3 = messages_1.NotificationType3;
exports.NotificationType4 = messages_1.NotificationType4;
exports.NotificationType5 = messages_1.NotificationType5;
exports.NotificationType6 = messages_1.NotificationType6;
exports.NotificationType7 = messages_1.NotificationType7;
exports.NotificationType8 = messages_1.NotificationType8;
exports.NotificationType9 = messages_1.NotificationType9;
var messageReader_1 = __webpack_require__(/*! ./messageReader */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageReader.js");
exports.MessageReader = messageReader_1.MessageReader;
exports.StreamMessageReader = messageReader_1.StreamMessageReader;
exports.IPCMessageReader = messageReader_1.IPCMessageReader;
exports.SocketMessageReader = messageReader_1.SocketMessageReader;
var messageWriter_1 = __webpack_require__(/*! ./messageWriter */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageWriter.js");
exports.MessageWriter = messageWriter_1.MessageWriter;
exports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;
exports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;
exports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;
var events_1 = __webpack_require__(/*! ./events */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js");
exports.Disposable = events_1.Disposable;
exports.Event = events_1.Event;
exports.Emitter = events_1.Emitter;
var cancellation_1 = __webpack_require__(/*! ./cancellation */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/cancellation.js");
exports.CancellationTokenSource = cancellation_1.CancellationTokenSource;
exports.CancellationToken = cancellation_1.CancellationToken;
var linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/linkedMap.js");
__export(__webpack_require__(/*! ./pipeSupport */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/pipeSupport.js"));
__export(__webpack_require__(/*! ./socketSupport */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/socketSupport.js"));
var CancelNotification;
(function (CancelNotification) {
    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');
})(CancelNotification || (CancelNotification = {}));
exports.NullLogger = Object.freeze({
    error: function () { },
    warn: function () { },
    info: function () { },
    log: function () { }
});
var Trace;
(function (Trace) {
    Trace[Trace["Off"] = 0] = "Off";
    Trace[Trace["Messages"] = 1] = "Messages";
    Trace[Trace["Verbose"] = 2] = "Verbose";
})(Trace = exports.Trace || (exports.Trace = {}));
(function (Trace) {
    function fromString(value) {
        value = value.toLowerCase();
        switch (value) {
            case 'off':
                return Trace.Off;
            case 'messages':
                return Trace.Messages;
            case 'verbose':
                return Trace.Verbose;
            default:
                return Trace.Off;
        }
    }
    Trace.fromString = fromString;
    function toString(value) {
        switch (value) {
            case Trace.Off:
                return 'off';
            case Trace.Messages:
                return 'messages';
            case Trace.Verbose:
                return 'verbose';
            default:
                return 'off';
        }
    }
    Trace.toString = toString;
})(Trace = exports.Trace || (exports.Trace = {}));
var SetTraceNotification;
(function (SetTraceNotification) {
    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');
})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));
var LogTraceNotification;
(function (LogTraceNotification) {
    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');
})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));
var ConnectionErrors;
(function (ConnectionErrors) {
    /**
     * The connection is closed.
     */
    ConnectionErrors[ConnectionErrors["Closed"] = 1] = "Closed";
    /**
     * The connection got disposed.
     */
    ConnectionErrors[ConnectionErrors["Disposed"] = 2] = "Disposed";
    /**
     * The connection is already in listening mode.
     */
    ConnectionErrors[ConnectionErrors["AlreadyListening"] = 3] = "AlreadyListening";
})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));
var ConnectionError = /** @class */ (function (_super) {
    __extends(ConnectionError, _super);
    function ConnectionError(code, message) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        Object.setPrototypeOf(_this, ConnectionError.prototype);
        return _this;
    }
    return ConnectionError;
}(Error));
exports.ConnectionError = ConnectionError;
var ConnectionStrategy;
(function (ConnectionStrategy) {
    function is(value) {
        var candidate = value;
        return candidate && Is.func(candidate.cancelUndispatched);
    }
    ConnectionStrategy.is = is;
})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));
var ConnectionState;
(function (ConnectionState) {
    ConnectionState[ConnectionState["New"] = 1] = "New";
    ConnectionState[ConnectionState["Listening"] = 2] = "Listening";
    ConnectionState[ConnectionState["Closed"] = 3] = "Closed";
    ConnectionState[ConnectionState["Disposed"] = 4] = "Disposed";
})(ConnectionState || (ConnectionState = {}));
function _createMessageConnection(messageReader, messageWriter, logger, strategy) {
    var sequenceNumber = 0;
    var notificationSquenceNumber = 0;
    var unknownResponseSquenceNumber = 0;
    var version = '2.0';
    var starRequestHandler = undefined;
    var requestHandlers = Object.create(null);
    var starNotificationHandler = undefined;
    var notificationHandlers = Object.create(null);
    var timer;
    var messageQueue = new linkedMap_1.LinkedMap();
    var responsePromises = Object.create(null);
    var requestTokens = Object.create(null);
    var trace = Trace.Off;
    var tracer;
    var state = ConnectionState.New;
    var errorEmitter = new events_1.Emitter();
    var closeEmitter = new events_1.Emitter();
    var unhandledNotificationEmitter = new events_1.Emitter();
    var disposeEmitter = new events_1.Emitter();
    function createRequestQueueKey(id) {
        return 'req-' + id.toString();
    }
    function createResponseQueueKey(id) {
        if (id === null) {
            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();
        }
        else {
            return 'res-' + id.toString();
        }
    }
    function createNotificationQueueKey() {
        return 'not-' + (++notificationSquenceNumber).toString();
    }
    function addMessageToQueue(queue, message) {
        if (messages_1.isRequestMessage(message)) {
            queue.set(createRequestQueueKey(message.id), message);
        }
        else if (messages_1.isResponseMessage(message)) {
            queue.set(createResponseQueueKey(message.id), message);
        }
        else {
            queue.set(createNotificationQueueKey(), message);
        }
    }
    function cancelUndispatched(_message) {
        return undefined;
    }
    function isListening() {
        return state === ConnectionState.Listening;
    }
    function isClosed() {
        return state === ConnectionState.Closed;
    }
    function isDisposed() {
        return state === ConnectionState.Disposed;
    }
    function closeHandler() {
        if (state === ConnectionState.New || state === ConnectionState.Listening) {
            state = ConnectionState.Closed;
            closeEmitter.fire(undefined);
        }
        // If the connection is disposed don't sent close events.
    }
    ;
    function readErrorHandler(error) {
        errorEmitter.fire([error, undefined, undefined]);
    }
    function writeErrorHandler(data) {
        errorEmitter.fire(data);
    }
    messageReader.onClose(closeHandler);
    messageReader.onError(readErrorHandler);
    messageWriter.onClose(closeHandler);
    messageWriter.onError(writeErrorHandler);
    function triggerMessageQueue() {
        if (timer || messageQueue.size === 0) {
            return;
        }
        timer = setImmediate(function () {
            timer = undefined;
            processMessageQueue();
        });
    }
    function processMessageQueue() {
        if (messageQueue.size === 0) {
            return;
        }
        var message = messageQueue.shift();
        try {
            if (messages_1.isRequestMessage(message)) {
                handleRequest(message);
            }
            else if (messages_1.isNotificationMessage(message)) {
                handleNotification(message);
            }
            else if (messages_1.isResponseMessage(message)) {
                handleResponse(message);
            }
            else {
                handleInvalidMessage(message);
            }
        }
        finally {
            triggerMessageQueue();
        }
    }
    var callback = function (message) {
        try {
            // We have received a cancellation message. Check if the message is still in the queue
            // and cancel it if allowed to do so.
            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {
                var key = createRequestQueueKey(message.params.id);
                var toCancel = messageQueue.get(key);
                if (messages_1.isRequestMessage(toCancel)) {
                    var response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);
                    if (response && (response.error !== void 0 || response.result !== void 0)) {
                        messageQueue.delete(key);
                        response.id = toCancel.id;
                        traceSendingResponse(response, message.method, Date.now());
                        messageWriter.write(response);
                        return;
                    }
                }
            }
            addMessageToQueue(messageQueue, message);
        }
        finally {
            triggerMessageQueue();
        }
    };
    function handleRequest(requestMessage) {
        if (isDisposed()) {
            // we return here silently since we fired an event when the
            // connection got disposed.
            return;
        }
        function reply(resultOrError, method, startTime) {
            var message = {
                jsonrpc: version,
                id: requestMessage.id
            };
            if (resultOrError instanceof messages_1.ResponseError) {
                message.error = resultOrError.toJson();
            }
            else {
                message.result = resultOrError === void 0 ? null : resultOrError;
            }
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message);
        }
        function replyError(error, method, startTime) {
            var message = {
                jsonrpc: version,
                id: requestMessage.id,
                error: error.toJson()
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message);
        }
        function replySuccess(result, method, startTime) {
            // The JSON RPC defines that a response must either have a result or an error
            // So we can't treat undefined as a valid response result.
            if (result === void 0) {
                result = null;
            }
            var message = {
                jsonrpc: version,
                id: requestMessage.id,
                result: result
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message);
        }
        traceReceivedRequest(requestMessage);
        var element = requestHandlers[requestMessage.method];
        var type;
        var requestHandler;
        if (element) {
            type = element.type;
            requestHandler = element.handler;
        }
        var startTime = Date.now();
        if (requestHandler || starRequestHandler) {
            var cancellationSource = new cancellation_1.CancellationTokenSource();
            var tokenKey_1 = String(requestMessage.id);
            requestTokens[tokenKey_1] = cancellationSource;
            try {
                var handlerResult = void 0;
                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {
                    handlerResult = requestHandler
                        ? requestHandler(cancellationSource.token)
                        : starRequestHandler(requestMessage.method, cancellationSource.token);
                }
                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {
                    handlerResult = requestHandler
                        ? requestHandler.apply(void 0, requestMessage.params.concat([cancellationSource.token])) : starRequestHandler.apply(void 0, [requestMessage.method].concat(requestMessage.params, [cancellationSource.token]));
                }
                else {
                    handlerResult = requestHandler
                        ? requestHandler(requestMessage.params, cancellationSource.token)
                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);
                }
                var promise = handlerResult;
                if (!handlerResult) {
                    delete requestTokens[tokenKey_1];
                    replySuccess(handlerResult, requestMessage.method, startTime);
                }
                else if (promise.then) {
                    promise.then(function (resultOrError) {
                        delete requestTokens[tokenKey_1];
                        reply(resultOrError, requestMessage.method, startTime);
                    }, function (error) {
                        delete requestTokens[tokenKey_1];
                        if (error instanceof messages_1.ResponseError) {
                            replyError(error, requestMessage.method, startTime);
                        }
                        else if (error && Is.string(error.message)) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, "Request " + requestMessage.method + " failed with message: " + error.message), requestMessage.method, startTime);
                        }
                        else {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, "Request " + requestMessage.method + " failed unexpectedly without providing any details."), requestMessage.method, startTime);
                        }
                    });
                }
                else {
                    delete requestTokens[tokenKey_1];
                    reply(handlerResult, requestMessage.method, startTime);
                }
            }
            catch (error) {
                delete requestTokens[tokenKey_1];
                if (error instanceof messages_1.ResponseError) {
                    reply(error, requestMessage.method, startTime);
                }
                else if (error && Is.string(error.message)) {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, "Request " + requestMessage.method + " failed with message: " + error.message), requestMessage.method, startTime);
                }
                else {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, "Request " + requestMessage.method + " failed unexpectedly without providing any details."), requestMessage.method, startTime);
                }
            }
        }
        else {
            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, "Unhandled method " + requestMessage.method), requestMessage.method, startTime);
        }
    }
    function handleResponse(responseMessage) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        if (responseMessage.id === null) {
            if (responseMessage.error) {
                logger.error("Received response message without id: Error is: \n" + JSON.stringify(responseMessage.error, undefined, 4));
            }
            else {
                logger.error("Received response message without id. No further error information provided.");
            }
        }
        else {
            var key = String(responseMessage.id);
            var responsePromise = responsePromises[key];
            traceReceivedResponse(responseMessage, responsePromise);
            if (responsePromise) {
                delete responsePromises[key];
                try {
                    if (responseMessage.error) {
                        var error = responseMessage.error;
                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));
                    }
                    else if (responseMessage.result !== void 0) {
                        responsePromise.resolve(responseMessage.result);
                    }
                    else {
                        throw new Error('Should never happen.');
                    }
                }
                catch (error) {
                    if (error.message) {
                        logger.error("Response handler '" + responsePromise.method + "' failed with message: " + error.message);
                    }
                    else {
                        logger.error("Response handler '" + responsePromise.method + "' failed unexpectedly.");
                    }
                }
            }
        }
    }
    function handleNotification(message) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        var type = undefined;
        var notificationHandler;
        if (message.method === CancelNotification.type.method) {
            notificationHandler = function (params) {
                var id = params.id;
                var source = requestTokens[String(id)];
                if (source) {
                    source.cancel();
                }
            };
        }
        else {
            var element = notificationHandlers[message.method];
            if (element) {
                notificationHandler = element.handler;
                type = element.type;
            }
        }
        if (notificationHandler || starNotificationHandler) {
            try {
                traceReceivedNotification(message);
                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {
                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);
                }
                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {
                    notificationHandler ? notificationHandler.apply(void 0, message.params) : starNotificationHandler.apply(void 0, [message.method].concat(message.params));
                }
                else {
                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);
                }
            }
            catch (error) {
                if (error.message) {
                    logger.error("Notification handler '" + message.method + "' failed with message: " + error.message);
                }
                else {
                    logger.error("Notification handler '" + message.method + "' failed unexpectedly.");
                }
            }
        }
        else {
            unhandledNotificationEmitter.fire(message);
        }
    }
    function handleInvalidMessage(message) {
        if (!message) {
            logger.error('Received empty message.');
            return;
        }
        logger.error("Received message which is neither a response nor a notification message:\n" + JSON.stringify(message, null, 4));
        // Test whether we find an id to reject the promise
        var responseMessage = message;
        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {
            var key = String(responseMessage.id);
            var responseHandler = responsePromises[key];
            if (responseHandler) {
                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));
            }
        }
    }
    function traceSendingRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        var data = undefined;
        if (trace === Trace.Verbose && message.params) {
            data = "Params: " + JSON.stringify(message.params, null, 4) + "\n\n";
        }
        tracer.log("Sending request '" + message.method + " - (" + message.id + ")'.", data);
    }
    function traceSendNotification(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        var data = undefined;
        if (trace === Trace.Verbose) {
            if (message.params) {
                data = "Params: " + JSON.stringify(message.params, null, 4) + "\n\n";
            }
            else {
                data = 'No parameters provided.\n\n';
            }
        }
        tracer.log("Sending notification '" + message.method + "'.", data);
    }
    function traceSendingResponse(message, method, startTime) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        var data = undefined;
        if (trace === Trace.Verbose) {
            if (message.error && message.error.data) {
                data = "Error data: " + JSON.stringify(message.error.data, null, 4) + "\n\n";
            }
            else {
                if (message.result) {
                    data = "Result: " + JSON.stringify(message.result, null, 4) + "\n\n";
                }
                else if (message.error === void 0) {
                    data = 'No result returned.\n\n';
                }
            }
        }
        tracer.log("Sending response '" + method + " - (" + message.id + ")'. Processing request took " + (Date.now() - startTime) + "ms", data);
    }
    function traceReceivedRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        var data = undefined;
        if (trace === Trace.Verbose && message.params) {
            data = "Params: " + JSON.stringify(message.params, null, 4) + "\n\n";
        }
        tracer.log("Received request '" + message.method + " - (" + message.id + ")'.", data);
    }
    function traceReceivedNotification(message) {
        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {
            return;
        }
        var data = undefined;
        if (trace === Trace.Verbose) {
            if (message.params) {
                data = "Params: " + JSON.stringify(message.params, null, 4) + "\n\n";
            }
            else {
                data = 'No parameters provided.\n\n';
            }
        }
        tracer.log("Received notification '" + message.method + "'.", data);
    }
    function traceReceivedResponse(message, responsePromise) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        var data = undefined;
        if (trace === Trace.Verbose) {
            if (message.error && message.error.data) {
                data = "Error data: " + JSON.stringify(message.error.data, null, 4) + "\n\n";
            }
            else {
                if (message.result) {
                    data = "Result: " + JSON.stringify(message.result, null, 4) + "\n\n";
                }
                else if (message.error === void 0) {
                    data = 'No result returned.\n\n';
                }
            }
        }
        if (responsePromise) {
            var error = message.error ? " Request failed: " + message.error.message + " (" + message.error.code + ")." : '';
            tracer.log("Received response '" + responsePromise.method + " - (" + message.id + ")' in " + (Date.now() - responsePromise.timerStart) + "ms." + error, data);
        }
        else {
            tracer.log("Received response " + message.id + " without active response promise.", data);
        }
    }
    function throwIfClosedOrDisposed() {
        if (isClosed()) {
            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');
        }
        if (isDisposed()) {
            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');
        }
    }
    function throwIfListening() {
        if (isListening()) {
            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');
        }
    }
    function throwIfNotListening() {
        if (!isListening()) {
            throw new Error('Call listen() first.');
        }
    }
    function undefinedToNull(param) {
        if (param === void 0) {
            return null;
        }
        else {
            return param;
        }
    }
    function computeMessageParams(type, params) {
        var result;
        var numberOfParams = type.numberOfParams;
        switch (numberOfParams) {
            case 0:
                result = null;
                break;
            case 1:
                result = undefinedToNull(params[0]);
                break;
            default:
                result = [];
                for (var i = 0; i < params.length && i < numberOfParams; i++) {
                    result.push(undefinedToNull(params[i]));
                }
                if (params.length < numberOfParams) {
                    for (var i = params.length; i < numberOfParams; i++) {
                        result.push(null);
                    }
                }
                break;
        }
        return result;
    }
    var connection = {
        sendNotification: function (type) {
            var params = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                params[_i - 1] = arguments[_i];
            }
            throwIfClosedOrDisposed();
            var method;
            var messageParams;
            if (Is.string(type)) {
                method = type;
                switch (params.length) {
                    case 0:
                        messageParams = null;
                        break;
                    case 1:
                        messageParams = params[0];
                        break;
                    default:
                        messageParams = params;
                        break;
                }
            }
            else {
                method = type.method;
                messageParams = computeMessageParams(type, params);
            }
            var notificationMessage = {
                jsonrpc: version,
                method: method,
                params: messageParams
            };
            traceSendNotification(notificationMessage);
            messageWriter.write(notificationMessage);
        },
        onNotification: function (type, handler) {
            throwIfClosedOrDisposed();
            if (Is.func(type)) {
                starNotificationHandler = type;
            }
            else if (handler) {
                if (Is.string(type)) {
                    notificationHandlers[type] = { type: undefined, handler: handler };
                }
                else {
                    notificationHandlers[type.method] = { type: type, handler: handler };
                }
            }
        },
        sendRequest: function (type) {
            var params = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                params[_i - 1] = arguments[_i];
            }
            throwIfClosedOrDisposed();
            throwIfNotListening();
            var method;
            var messageParams;
            var token = undefined;
            if (Is.string(type)) {
                method = type;
                switch (params.length) {
                    case 0:
                        messageParams = null;
                        break;
                    case 1:
                        // The cancellation token is optional so it can also be undefined.
                        if (cancellation_1.CancellationToken.is(params[0])) {
                            messageParams = null;
                            token = params[0];
                        }
                        else {
                            messageParams = undefinedToNull(params[0]);
                        }
                        break;
                    default:
                        var last = params.length - 1;
                        if (cancellation_1.CancellationToken.is(params[last])) {
                            token = params[last];
                            if (params.length === 2) {
                                messageParams = undefinedToNull(params[0]);
                            }
                            else {
                                messageParams = params.slice(0, last).map(function (value) { return undefinedToNull(value); });
                            }
                        }
                        else {
                            messageParams = params.map(function (value) { return undefinedToNull(value); });
                        }
                        break;
                }
            }
            else {
                method = type.method;
                messageParams = computeMessageParams(type, params);
                var numberOfParams = type.numberOfParams;
                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;
            }
            var id = sequenceNumber++;
            var result = new Promise(function (resolve, reject) {
                var requestMessage = {
                    jsonrpc: version,
                    id: id,
                    method: method,
                    params: messageParams
                };
                var responsePromise = { method: method, timerStart: Date.now(), resolve: resolve, reject: reject };
                traceSendingRequest(requestMessage);
                try {
                    messageWriter.write(requestMessage);
                }
                catch (e) {
                    // Writing the message failed. So we need to reject the promise.
                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));
                    responsePromise = null;
                }
                if (responsePromise) {
                    responsePromises[String(id)] = responsePromise;
                }
            });
            if (token) {
                token.onCancellationRequested(function () {
                    connection.sendNotification(CancelNotification.type, { id: id });
                });
            }
            return result;
        },
        onRequest: function (type, handler) {
            throwIfClosedOrDisposed();
            if (Is.func(type)) {
                starRequestHandler = type;
            }
            else if (handler) {
                if (Is.string(type)) {
                    requestHandlers[type] = { type: undefined, handler: handler };
                }
                else {
                    requestHandlers[type.method] = { type: type, handler: handler };
                }
            }
        },
        trace: function (_value, _tracer, sendNotification) {
            if (sendNotification === void 0) { sendNotification = false; }
            trace = _value;
            if (trace === Trace.Off) {
                tracer = undefined;
            }
            else {
                tracer = _tracer;
            }
            if (sendNotification && !isClosed() && !isDisposed()) {
                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });
            }
        },
        onError: errorEmitter.event,
        onClose: closeEmitter.event,
        onUnhandledNotification: unhandledNotificationEmitter.event,
        onDispose: disposeEmitter.event,
        dispose: function () {
            if (isDisposed()) {
                return;
            }
            state = ConnectionState.Disposed;
            disposeEmitter.fire(undefined);
            var error = new Error('Connection got disposed.');
            Object.keys(responsePromises).forEach(function (key) {
                responsePromises[key].reject(error);
            });
            responsePromises = Object.create(null);
            requestTokens = Object.create(null);
            messageQueue = new linkedMap_1.LinkedMap();
            // Test for backwards compatibility
            if (Is.func(messageWriter.dispose)) {
                messageWriter.dispose();
            }
            if (Is.func(messageReader.dispose)) {
                messageReader.dispose();
            }
        },
        listen: function () {
            throwIfClosedOrDisposed();
            throwIfListening();
            state = ConnectionState.Listening;
            messageReader.listen(callback);
        },
        inspect: function () {
            console.log("inspect");
        }
    };
    connection.onNotification(LogTraceNotification.type, function (params) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);
    });
    return connection;
}
function isMessageReader(value) {
    return value.listen !== void 0 && value.read === void 0;
}
function isMessageWriter(value) {
    return value.write !== void 0 && value.end === void 0;
}
function createMessageConnection(input, output, logger, strategy) {
    if (!logger) {
        logger = exports.NullLogger;
    }
    var reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);
    var writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);
    return _createMessageConnection(reader, writer, logger, strategy);
}
exports.createMessageConnection = createMessageConnection;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../timers-browserify/main.js */ "../../../node_modules/timers-browserify/main.js").setImmediate))

/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageReader.js":
/*!************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageReader.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! ./events */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js");
var Is = __webpack_require__(/*! ./is */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js");
var DefaultSize = 8192;
var CR = new Buffer('\r', 'ascii')[0];
var LF = new Buffer('\n', 'ascii')[0];
var CRLF = '\r\n';
var MessageBuffer = /** @class */ (function () {
    function MessageBuffer(encoding) {
        if (encoding === void 0) { encoding = 'utf8'; }
        this.encoding = encoding;
        this.index = 0;
        this.buffer = new Buffer(DefaultSize);
    }
    MessageBuffer.prototype.append = function (chunk) {
        var toAppend = chunk;
        if (typeof (chunk) === 'string') {
            var str = chunk;
            var bufferLen = Buffer.byteLength(str, this.encoding);
            toAppend = new Buffer(bufferLen);
            toAppend.write(str, 0, bufferLen, this.encoding);
        }
        if (this.buffer.length - this.index >= toAppend.length) {
            toAppend.copy(this.buffer, this.index, 0, toAppend.length);
        }
        else {
            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;
            if (this.index === 0) {
                this.buffer = new Buffer(newSize);
                toAppend.copy(this.buffer, 0, 0, toAppend.length);
            }
            else {
                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);
            }
        }
        this.index += toAppend.length;
    };
    MessageBuffer.prototype.tryReadHeaders = function () {
        var result = undefined;
        var current = 0;
        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {
            current++;
        }
        // No header / body separator found (e.g CRLFCRLF)
        if (current + 3 >= this.index) {
            return result;
        }
        result = Object.create(null);
        var headers = this.buffer.toString('ascii', 0, current).split(CRLF);
        headers.forEach(function (header) {
            var index = header.indexOf(':');
            if (index === -1) {
                throw new Error('Message header must separate key and value using :');
            }
            var key = header.substr(0, index);
            var value = header.substr(index + 1).trim();
            result[key] = value;
        });
        var nextStart = current + 4;
        this.buffer = this.buffer.slice(nextStart);
        this.index = this.index - nextStart;
        return result;
    };
    MessageBuffer.prototype.tryReadContent = function (length) {
        if (this.index < length) {
            return null;
        }
        var result = this.buffer.toString(this.encoding, 0, length);
        var nextStart = length;
        this.buffer.copy(this.buffer, 0, nextStart);
        this.index = this.index - nextStart;
        return result;
    };
    Object.defineProperty(MessageBuffer.prototype, "numberOfBytes", {
        get: function () {
            return this.index;
        },
        enumerable: true,
        configurable: true
    });
    return MessageBuffer;
}());
var MessageReader;
(function (MessageReader) {
    function is(value) {
        var candidate = value;
        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&
            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);
    }
    MessageReader.is = is;
})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));
var AbstractMessageReader = /** @class */ (function () {
    function AbstractMessageReader() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
        this.partialMessageEmitter = new events_1.Emitter();
    }
    AbstractMessageReader.prototype.dispose = function () {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    };
    Object.defineProperty(AbstractMessageReader.prototype, "onError", {
        get: function () {
            return this.errorEmitter.event;
        },
        enumerable: true,
        configurable: true
    });
    AbstractMessageReader.prototype.fireError = function (error) {
        this.errorEmitter.fire(this.asError(error));
    };
    Object.defineProperty(AbstractMessageReader.prototype, "onClose", {
        get: function () {
            return this.closeEmitter.event;
        },
        enumerable: true,
        configurable: true
    });
    AbstractMessageReader.prototype.fireClose = function () {
        this.closeEmitter.fire(undefined);
    };
    Object.defineProperty(AbstractMessageReader.prototype, "onPartialMessage", {
        get: function () {
            return this.partialMessageEmitter.event;
        },
        enumerable: true,
        configurable: true
    });
    AbstractMessageReader.prototype.firePartialMessage = function (info) {
        this.partialMessageEmitter.fire(info);
    };
    AbstractMessageReader.prototype.asError = function (error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error("Reader recevied error. Reason: " + (Is.string(error.message) ? error.message : 'unknown'));
        }
    };
    return AbstractMessageReader;
}());
exports.AbstractMessageReader = AbstractMessageReader;
var StreamMessageReader = /** @class */ (function (_super) {
    __extends(StreamMessageReader, _super);
    function StreamMessageReader(readable, encoding) {
        if (encoding === void 0) { encoding = 'utf8'; }
        var _this = _super.call(this) || this;
        _this.readable = readable;
        _this.buffer = new MessageBuffer(encoding);
        _this._partialMessageTimeout = 10000;
        return _this;
    }
    Object.defineProperty(StreamMessageReader.prototype, "partialMessageTimeout", {
        get: function () {
            return this._partialMessageTimeout;
        },
        set: function (timeout) {
            this._partialMessageTimeout = timeout;
        },
        enumerable: true,
        configurable: true
    });
    StreamMessageReader.prototype.listen = function (callback) {
        var _this = this;
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.partialMessageTimer = undefined;
        this.callback = callback;
        this.readable.on('data', function (data) {
            _this.onData(data);
        });
        this.readable.on('error', function (error) { return _this.fireError(error); });
        this.readable.on('close', function () { return _this.fireClose(); });
    };
    StreamMessageReader.prototype.onData = function (data) {
        this.buffer.append(data);
        while (true) {
            if (this.nextMessageLength === -1) {
                var headers = this.buffer.tryReadHeaders();
                if (!headers) {
                    return;
                }
                var contentLength = headers['Content-Length'];
                if (!contentLength) {
                    throw new Error('Header must provide a Content-Length property.');
                }
                var length = parseInt(contentLength);
                if (isNaN(length)) {
                    throw new Error('Content-Length value must be a number.');
                }
                this.nextMessageLength = length;
                // Take the encoding form the header. For compatibility
                // treat both utf-8 and utf8 as node utf8
            }
            var msg = this.buffer.tryReadContent(this.nextMessageLength);
            if (msg === null) {
                /** We haven't recevied the full message yet. */
                this.setPartialMessageTimer();
                return;
            }
            this.clearPartialMessageTimer();
            this.nextMessageLength = -1;
            this.messageToken++;
            var json = JSON.parse(msg);
            this.callback(json);
        }
    };
    StreamMessageReader.prototype.clearPartialMessageTimer = function () {
        if (this.partialMessageTimer) {
            clearTimeout(this.partialMessageTimer);
            this.partialMessageTimer = undefined;
        }
    };
    StreamMessageReader.prototype.setPartialMessageTimer = function () {
        var _this = this;
        this.clearPartialMessageTimer();
        if (this._partialMessageTimeout <= 0) {
            return;
        }
        this.partialMessageTimer = setTimeout(function (token, timeout) {
            _this.partialMessageTimer = undefined;
            if (token === _this.messageToken) {
                _this.firePartialMessage({ messageToken: token, waitingTime: timeout });
                _this.setPartialMessageTimer();
            }
        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
    };
    return StreamMessageReader;
}(AbstractMessageReader));
exports.StreamMessageReader = StreamMessageReader;
var IPCMessageReader = /** @class */ (function (_super) {
    __extends(IPCMessageReader, _super);
    function IPCMessageReader(process) {
        var _this = _super.call(this) || this;
        _this.process = process;
        var eventEmitter = _this.process;
        eventEmitter.on('error', function (error) { return _this.fireError(error); });
        eventEmitter.on('close', function () { return _this.fireClose(); });
        return _this;
    }
    IPCMessageReader.prototype.listen = function (callback) {
        this.process.on('message', callback);
    };
    return IPCMessageReader;
}(AbstractMessageReader));
exports.IPCMessageReader = IPCMessageReader;
var SocketMessageReader = /** @class */ (function (_super) {
    __extends(SocketMessageReader, _super);
    function SocketMessageReader(socket, encoding) {
        if (encoding === void 0) { encoding = 'utf-8'; }
        return _super.call(this, socket, encoding) || this;
    }
    return SocketMessageReader;
}(StreamMessageReader));
exports.SocketMessageReader = SocketMessageReader;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../buffer/index.js */ "../../../node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageWriter.js":
/*!************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageWriter.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = __webpack_require__(/*! ./events */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/events.js");
var Is = __webpack_require__(/*! ./is */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js");
var ContentLength = 'Content-Length: ';
var CRLF = '\r\n';
var MessageWriter;
(function (MessageWriter) {
    function is(value) {
        var candidate = value;
        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&
            Is.func(candidate.onError) && Is.func(candidate.write);
    }
    MessageWriter.is = is;
})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));
var AbstractMessageWriter = /** @class */ (function () {
    function AbstractMessageWriter() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
    }
    AbstractMessageWriter.prototype.dispose = function () {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    };
    Object.defineProperty(AbstractMessageWriter.prototype, "onError", {
        get: function () {
            return this.errorEmitter.event;
        },
        enumerable: true,
        configurable: true
    });
    AbstractMessageWriter.prototype.fireError = function (error, message, count) {
        this.errorEmitter.fire([this.asError(error), message, count]);
    };
    Object.defineProperty(AbstractMessageWriter.prototype, "onClose", {
        get: function () {
            return this.closeEmitter.event;
        },
        enumerable: true,
        configurable: true
    });
    AbstractMessageWriter.prototype.fireClose = function () {
        this.closeEmitter.fire(undefined);
    };
    AbstractMessageWriter.prototype.asError = function (error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error("Writer recevied error. Reason: " + (Is.string(error.message) ? error.message : 'unknown'));
        }
    };
    return AbstractMessageWriter;
}());
exports.AbstractMessageWriter = AbstractMessageWriter;
var StreamMessageWriter = /** @class */ (function (_super) {
    __extends(StreamMessageWriter, _super);
    function StreamMessageWriter(writable, encoding) {
        if (encoding === void 0) { encoding = 'utf8'; }
        var _this = _super.call(this) || this;
        _this.writable = writable;
        _this.encoding = encoding;
        _this.errorCount = 0;
        _this.writable.on('error', function (error) { return _this.fireError(error); });
        _this.writable.on('close', function () { return _this.fireClose(); });
        return _this;
    }
    StreamMessageWriter.prototype.write = function (msg) {
        var json = JSON.stringify(msg);
        var contentLength = Buffer.byteLength(json, this.encoding);
        var headers = [
            ContentLength, contentLength.toString(), CRLF,
            CRLF
        ];
        try {
            // Header must be written in ASCII encoding
            this.writable.write(headers.join(''), 'ascii');
            // Now write the content. This can be written in any encoding
            this.writable.write(json, this.encoding);
            this.errorCount = 0;
        }
        catch (error) {
            this.errorCount++;
            this.fireError(error, msg, this.errorCount);
        }
    };
    return StreamMessageWriter;
}(AbstractMessageWriter));
exports.StreamMessageWriter = StreamMessageWriter;
var IPCMessageWriter = /** @class */ (function (_super) {
    __extends(IPCMessageWriter, _super);
    function IPCMessageWriter(process) {
        var _this = _super.call(this) || this;
        _this.process = process;
        _this.errorCount = 0;
        _this.queue = [];
        _this.sending = false;
        var eventEmitter = _this.process;
        eventEmitter.on('error', function (error) { return _this.fireError(error); });
        eventEmitter.on('close', function () { return _this.fireClose; });
        return _this;
    }
    IPCMessageWriter.prototype.write = function (msg) {
        if (!this.sending && this.queue.length === 0) {
            // See https://github.com/nodejs/node/issues/7657
            this.doWriteMessage(msg);
        }
        else {
            this.queue.push(msg);
        }
    };
    IPCMessageWriter.prototype.doWriteMessage = function (msg) {
        var _this = this;
        try {
            if (this.process.send) {
                this.sending = true;
                this.process.send(msg, undefined, undefined, function (error) {
                    _this.sending = false;
                    if (error) {
                        _this.errorCount++;
                        _this.fireError(error, msg, _this.errorCount);
                    }
                    else {
                        _this.errorCount = 0;
                    }
                    if (_this.queue.length > 0) {
                        _this.doWriteMessage(_this.queue.shift());
                    }
                });
            }
        }
        catch (error) {
            this.errorCount++;
            this.fireError(error, msg, this.errorCount);
        }
    };
    return IPCMessageWriter;
}(AbstractMessageWriter));
exports.IPCMessageWriter = IPCMessageWriter;
var SocketMessageWriter = /** @class */ (function (_super) {
    __extends(SocketMessageWriter, _super);
    function SocketMessageWriter(socket, encoding) {
        if (encoding === void 0) { encoding = 'utf8'; }
        var _this = _super.call(this) || this;
        _this.socket = socket;
        _this.queue = [];
        _this.sending = false;
        _this.encoding = encoding;
        _this.errorCount = 0;
        _this.socket.on('error', function (error) { return _this.fireError(error); });
        _this.socket.on('close', function () { return _this.fireClose(); });
        return _this;
    }
    SocketMessageWriter.prototype.write = function (msg) {
        if (!this.sending && this.queue.length === 0) {
            // See https://github.com/nodejs/node/issues/7657
            this.doWriteMessage(msg);
        }
        else {
            this.queue.push(msg);
        }
    };
    SocketMessageWriter.prototype.doWriteMessage = function (msg) {
        var _this = this;
        var json = JSON.stringify(msg);
        var contentLength = Buffer.byteLength(json, this.encoding);
        var headers = [
            ContentLength, contentLength.toString(), CRLF,
            CRLF
        ];
        try {
            // Header must be written in ASCII encoding
            this.sending = true;
            this.socket.write(headers.join(''), 'ascii', function (error) {
                if (error) {
                    _this.handleError(error, msg);
                }
                try {
                    // Now write the content. This can be written in any encoding
                    _this.socket.write(json, _this.encoding, function (error) {
                        _this.sending = false;
                        if (error) {
                            _this.handleError(error, msg);
                        }
                        else {
                            _this.errorCount = 0;
                        }
                        if (_this.queue.length > 0) {
                            _this.doWriteMessage(_this.queue.shift());
                        }
                    });
                }
                catch (error) {
                    _this.handleError(error, msg);
                }
            });
        }
        catch (error) {
            this.handleError(error, msg);
        }
    };
    SocketMessageWriter.prototype.handleError = function (error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    };
    return SocketMessageWriter;
}(AbstractMessageWriter));
exports.SocketMessageWriter = SocketMessageWriter;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../buffer/index.js */ "../../../node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messages.js":
/*!*******************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messages.js ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var is = __webpack_require__(/*! ./is */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/is.js");
/**
 * Predefined error codes.
 */
var ErrorCodes;
(function (ErrorCodes) {
    // Defined by JSON RPC
    ErrorCodes.ParseError = -32700;
    ErrorCodes.InvalidRequest = -32600;
    ErrorCodes.MethodNotFound = -32601;
    ErrorCodes.InvalidParams = -32602;
    ErrorCodes.InternalError = -32603;
    ErrorCodes.serverErrorStart = -32099;
    ErrorCodes.serverErrorEnd = -32000;
    ErrorCodes.ServerNotInitialized = -32002;
    ErrorCodes.UnknownErrorCode = -32001;
    // Defined by the protocol.
    ErrorCodes.RequestCancelled = -32800;
    // Defined by VSCode library.
    ErrorCodes.MessageWriteError = 1;
    ErrorCodes.MessageReadError = 2;
})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));
/**
 * An error object return in a response in case a request
 * has failed.
 */
var ResponseError = /** @class */ (function (_super) {
    __extends(ResponseError, _super);
    function ResponseError(code, message, data) {
        var _this = _super.call(this, message) || this;
        _this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;
        _this.data = data;
        Object.setPrototypeOf(_this, ResponseError.prototype);
        return _this;
    }
    ResponseError.prototype.toJson = function () {
        return {
            code: this.code,
            message: this.message,
            data: this.data,
        };
    };
    return ResponseError;
}(Error));
exports.ResponseError = ResponseError;
/**
 * An abstract implementation of a MessageType.
 */
var AbstractMessageType = /** @class */ (function () {
    function AbstractMessageType(_method, _numberOfParams) {
        this._method = _method;
        this._numberOfParams = _numberOfParams;
    }
    Object.defineProperty(AbstractMessageType.prototype, "method", {
        get: function () {
            return this._method;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractMessageType.prototype, "numberOfParams", {
        get: function () {
            return this._numberOfParams;
        },
        enumerable: true,
        configurable: true
    });
    return AbstractMessageType;
}());
exports.AbstractMessageType = AbstractMessageType;
/**
 * Classes to type request response pairs
 */
var RequestType0 = /** @class */ (function (_super) {
    __extends(RequestType0, _super);
    function RequestType0(method) {
        var _this = _super.call(this, method, 0) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType0;
}(AbstractMessageType));
exports.RequestType0 = RequestType0;
var RequestType = /** @class */ (function (_super) {
    __extends(RequestType, _super);
    function RequestType(method) {
        var _this = _super.call(this, method, 1) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType;
}(AbstractMessageType));
exports.RequestType = RequestType;
var RequestType1 = /** @class */ (function (_super) {
    __extends(RequestType1, _super);
    function RequestType1(method) {
        var _this = _super.call(this, method, 1) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType1;
}(AbstractMessageType));
exports.RequestType1 = RequestType1;
var RequestType2 = /** @class */ (function (_super) {
    __extends(RequestType2, _super);
    function RequestType2(method) {
        var _this = _super.call(this, method, 2) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType2;
}(AbstractMessageType));
exports.RequestType2 = RequestType2;
var RequestType3 = /** @class */ (function (_super) {
    __extends(RequestType3, _super);
    function RequestType3(method) {
        var _this = _super.call(this, method, 3) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType3;
}(AbstractMessageType));
exports.RequestType3 = RequestType3;
var RequestType4 = /** @class */ (function (_super) {
    __extends(RequestType4, _super);
    function RequestType4(method) {
        var _this = _super.call(this, method, 4) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType4;
}(AbstractMessageType));
exports.RequestType4 = RequestType4;
var RequestType5 = /** @class */ (function (_super) {
    __extends(RequestType5, _super);
    function RequestType5(method) {
        var _this = _super.call(this, method, 5) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType5;
}(AbstractMessageType));
exports.RequestType5 = RequestType5;
var RequestType6 = /** @class */ (function (_super) {
    __extends(RequestType6, _super);
    function RequestType6(method) {
        var _this = _super.call(this, method, 6) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType6;
}(AbstractMessageType));
exports.RequestType6 = RequestType6;
var RequestType7 = /** @class */ (function (_super) {
    __extends(RequestType7, _super);
    function RequestType7(method) {
        var _this = _super.call(this, method, 7) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType7;
}(AbstractMessageType));
exports.RequestType7 = RequestType7;
var RequestType8 = /** @class */ (function (_super) {
    __extends(RequestType8, _super);
    function RequestType8(method) {
        var _this = _super.call(this, method, 8) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType8;
}(AbstractMessageType));
exports.RequestType8 = RequestType8;
var RequestType9 = /** @class */ (function (_super) {
    __extends(RequestType9, _super);
    function RequestType9(method) {
        var _this = _super.call(this, method, 9) || this;
        _this._ = undefined;
        return _this;
    }
    return RequestType9;
}(AbstractMessageType));
exports.RequestType9 = RequestType9;
var NotificationType = /** @class */ (function (_super) {
    __extends(NotificationType, _super);
    function NotificationType(method) {
        var _this = _super.call(this, method, 1) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType;
}(AbstractMessageType));
exports.NotificationType = NotificationType;
var NotificationType0 = /** @class */ (function (_super) {
    __extends(NotificationType0, _super);
    function NotificationType0(method) {
        var _this = _super.call(this, method, 0) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType0;
}(AbstractMessageType));
exports.NotificationType0 = NotificationType0;
var NotificationType1 = /** @class */ (function (_super) {
    __extends(NotificationType1, _super);
    function NotificationType1(method) {
        var _this = _super.call(this, method, 1) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType1;
}(AbstractMessageType));
exports.NotificationType1 = NotificationType1;
var NotificationType2 = /** @class */ (function (_super) {
    __extends(NotificationType2, _super);
    function NotificationType2(method) {
        var _this = _super.call(this, method, 2) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType2;
}(AbstractMessageType));
exports.NotificationType2 = NotificationType2;
var NotificationType3 = /** @class */ (function (_super) {
    __extends(NotificationType3, _super);
    function NotificationType3(method) {
        var _this = _super.call(this, method, 3) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType3;
}(AbstractMessageType));
exports.NotificationType3 = NotificationType3;
var NotificationType4 = /** @class */ (function (_super) {
    __extends(NotificationType4, _super);
    function NotificationType4(method) {
        var _this = _super.call(this, method, 4) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType4;
}(AbstractMessageType));
exports.NotificationType4 = NotificationType4;
var NotificationType5 = /** @class */ (function (_super) {
    __extends(NotificationType5, _super);
    function NotificationType5(method) {
        var _this = _super.call(this, method, 5) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType5;
}(AbstractMessageType));
exports.NotificationType5 = NotificationType5;
var NotificationType6 = /** @class */ (function (_super) {
    __extends(NotificationType6, _super);
    function NotificationType6(method) {
        var _this = _super.call(this, method, 6) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType6;
}(AbstractMessageType));
exports.NotificationType6 = NotificationType6;
var NotificationType7 = /** @class */ (function (_super) {
    __extends(NotificationType7, _super);
    function NotificationType7(method) {
        var _this = _super.call(this, method, 7) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType7;
}(AbstractMessageType));
exports.NotificationType7 = NotificationType7;
var NotificationType8 = /** @class */ (function (_super) {
    __extends(NotificationType8, _super);
    function NotificationType8(method) {
        var _this = _super.call(this, method, 8) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType8;
}(AbstractMessageType));
exports.NotificationType8 = NotificationType8;
var NotificationType9 = /** @class */ (function (_super) {
    __extends(NotificationType9, _super);
    function NotificationType9(method) {
        var _this = _super.call(this, method, 9) || this;
        _this._ = undefined;
        return _this;
    }
    return NotificationType9;
}(AbstractMessageType));
exports.NotificationType9 = NotificationType9;
/**
 * Tests if the given message is a request message
 */
function isRequestMessage(message) {
    var candidate = message;
    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));
}
exports.isRequestMessage = isRequestMessage;
/**
 * Tests if the given message is a notification message
 */
function isNotificationMessage(message) {
    var candidate = message;
    return candidate && is.string(candidate.method) && message.id === void 0;
}
exports.isNotificationMessage = isNotificationMessage;
/**
 * Tests if the given message is a response message
 */
function isResponseMessage(message) {
    var candidate = message;
    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);
}
exports.isResponseMessage = isResponseMessage;


/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/pipeSupport.js":
/*!**********************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/pipeSupport.js ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", { value: true });
var path_1 = __webpack_require__(/*! path */ "../../../node_modules/path-browserify/index.js");
var os_1 = __webpack_require__(/*! os */ "../../../node_modules/os-browserify/browser.js");
var crypto_1 = __webpack_require__(/*! crypto */ "../../../node_modules/node-libs-browser/mock/empty.js");
var net_1 = __webpack_require__(/*! net */ "../../../node_modules/node-libs-browser/mock/empty.js");
var messageReader_1 = __webpack_require__(/*! ./messageReader */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageReader.js");
var messageWriter_1 = __webpack_require__(/*! ./messageWriter */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageWriter.js");
function generateRandomPipeName() {
    var randomSuffix = crypto_1.randomBytes(21).toString('hex');
    if (process.platform === 'win32') {
        return "\\\\.\\pipe\\vscode-jsonrpc-" + randomSuffix + "-sock";
    }
    else {
        // Mac/Unix: use socket file
        return path_1.join(os_1.tmpdir(), "vscode-" + randomSuffix + ".sock");
    }
}
exports.generateRandomPipeName = generateRandomPipeName;
function createClientPipeTransport(pipeName, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var connectResolve;
    var connected = new Promise(function (resolve, _reject) {
        connectResolve = resolve;
    });
    return new Promise(function (resolve, reject) {
        var server = net_1.createServer(function (socket) {
            server.close();
            connectResolve([
                new messageReader_1.SocketMessageReader(socket, encoding),
                new messageWriter_1.SocketMessageWriter(socket, encoding)
            ]);
        });
        server.on('error', reject);
        server.listen(pipeName, function () {
            server.removeListener('error', reject);
            resolve({
                onConnected: function () { return connected; }
            });
        });
    });
}
exports.createClientPipeTransport = createClientPipeTransport;
function createServerPipeTransport(pipeName, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var socket = net_1.createConnection(pipeName);
    return [
        new messageReader_1.SocketMessageReader(socket, encoding),
        new messageWriter_1.SocketMessageWriter(socket, encoding)
    ];
}
exports.createServerPipeTransport = createServerPipeTransport;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ "../../../node_modules/process/browser.js")))

/***/ }),

/***/ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/socketSupport.js":
/*!************************************************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/socketSupport.js ***!
  \************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */

Object.defineProperty(exports, "__esModule", { value: true });
var net_1 = __webpack_require__(/*! net */ "../../../node_modules/node-libs-browser/mock/empty.js");
var messageReader_1 = __webpack_require__(/*! ./messageReader */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageReader.js");
var messageWriter_1 = __webpack_require__(/*! ./messageWriter */ "../../../node_modules/vscode-ws-jsonrpc/node_modules/vscode-jsonrpc/lib/messageWriter.js");
function createClientSocketTransport(port, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var connectResolve;
    var connected = new Promise(function (resolve, _reject) {
        connectResolve = resolve;
    });
    return new Promise(function (resolve, reject) {
        var server = net_1.createServer(function (socket) {
            server.close();
            connectResolve([
                new messageReader_1.SocketMessageReader(socket, encoding),
                new messageWriter_1.SocketMessageWriter(socket, encoding)
            ]);
        });
        server.on('error', reject);
        server.listen(port, '127.0.0.1', function () {
            server.removeListener('error', reject);
            resolve({
                onConnected: function () { return connected; }
            });
        });
    });
}
exports.createClientSocketTransport = createClientSocketTransport;
function createServerSocketTransport(port, encoding) {
    if (encoding === void 0) { encoding = 'utf-8'; }
    var socket = net_1.createConnection(port, '127.0.0.1');
    return [
        new messageReader_1.SocketMessageReader(socket, encoding),
        new messageWriter_1.SocketMessageWriter(socket, encoding)
    ];
}
exports.createServerSocketTransport = createServerSocketTransport;


/***/ }),

/***/ "../../../node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "../../../vscode-webview/lib/glsp-starter.js":
/*!***************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/vscode-webview/lib/glsp-starter.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLSPStarter = void 0;
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var sprotty_vscode_webview_1 = __webpack_require__(/*! sprotty-vscode-webview */ "../../../node_modules/sprotty-vscode-webview/lib/index.js");
var disabled_keytool_1 = __webpack_require__(/*! sprotty-vscode-webview/lib/disabled-keytool */ "../../../node_modules/sprotty-vscode-webview/lib/disabled-keytool.js");
var glsp_vscode_diagram_widget_1 = __webpack_require__(/*! ./glsp-vscode-diagram-widget */ "../../../vscode-webview/lib/glsp-vscode-diagram-widget.js");
var glsp_vscode_diagramserver_1 = __webpack_require__(/*! ./glsp-vscode-diagramserver */ "../../../vscode-webview/lib/glsp-vscode-diagramserver.js");
var GLSPStarter = /** @class */ (function (_super) {
    __extends(GLSPStarter, _super);
    function GLSPStarter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GLSPStarter.prototype.addVscodeBindings = function (container, diagramIdentifier) {
        container.bind(glsp_vscode_diagram_widget_1.GLSPVscodeDiagramWidget).toSelf().inSingletonScope();
        container.bind(sprotty_vscode_webview_1.VscodeDiagramWidget).toService(glsp_vscode_diagram_widget_1.GLSPVscodeDiagramWidget);
        container.bind(sprotty_vscode_webview_1.VscodeDiagramWidgetFactory).toFactory(function (context) { return function () { return context.container.get(glsp_vscode_diagram_widget_1.GLSPVscodeDiagramWidget); }; });
        container.bind(sprotty_vscode_webview_1.SprottyDiagramIdentifier).toConstantValue(diagramIdentifier);
        container.bind(glsp_vscode_diagramserver_1.GLSPVscodeDiagramServer).toSelf().inSingletonScope();
        container.bind(sprotty_vscode_webview_1.VscodeDiagramServer).toService(glsp_vscode_diagramserver_1.GLSPVscodeDiagramServer);
        container.bind(client_1.TYPES.ModelSource).toService(glsp_vscode_diagramserver_1.GLSPVscodeDiagramServer);
        container.bind(client_1.DiagramServer).toService(glsp_vscode_diagramserver_1.GLSPVscodeDiagramServer);
        container.rebind(client_1.KeyTool).to(disabled_keytool_1.DisabledKeyTool);
    };
    return GLSPStarter;
}(sprotty_vscode_webview_1.SprottyStarter));
exports.GLSPStarter = GLSPStarter;


/***/ }),

/***/ "../../../vscode-webview/lib/glsp-vscode-diagram-widget.js":
/*!*****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/vscode-webview/lib/glsp-vscode-diagram-widget.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLSPVscodeDiagramWidget = void 0;
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var inversify_1 = __webpack_require__(/*! inversify */ "../../../node_modules/inversify/lib/inversify.js");
var sprotty_vscode_webview_1 = __webpack_require__(/*! sprotty-vscode-webview */ "../../../node_modules/sprotty-vscode-webview/lib/index.js");
var GLSPVscodeDiagramWidget = /** @class */ (function (_super) {
    __extends(GLSPVscodeDiagramWidget, _super);
    function GLSPVscodeDiagramWidget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GLSPVscodeDiagramWidget.prototype.initializeSprotty = function () {
        if (this.modelSource instanceof client_1.DiagramServer) {
            this.modelSource.clientId = this.diagramIdentifier.clientId;
        }
        this.actionDispatcher.dispatch(new client_1.RequestModelAction({
            sourceUri: this.diagramIdentifier.uri,
            diagramType: this.diagramIdentifier.diagramType,
            needsClientLayout: "" + this.viewerOptions.needsClientLayout
        }));
        this.actionDispatcher.dispatch(new client_1.RequestTypeHintsAction(this.diagramIdentifier.diagramType));
        this.actionDispatcher.dispatch(new client_1.EnableToolPaletteAction());
    };
    GLSPVscodeDiagramWidget = __decorate([
        inversify_1.injectable()
    ], GLSPVscodeDiagramWidget);
    return GLSPVscodeDiagramWidget;
}(sprotty_vscode_webview_1.VscodeDiagramWidget));
exports.GLSPVscodeDiagramWidget = GLSPVscodeDiagramWidget;


/***/ }),

/***/ "../../../vscode-webview/lib/glsp-vscode-diagramserver.js":
/*!****************************************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/vscode-webview/lib/glsp-vscode-diagramserver.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GLSPVscodeDiagramServer = void 0;
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "../../../node_modules/@eclipse-glsp/client/lib/index.js");
var sprotty_vscode_webview_1 = __webpack_require__(/*! sprotty-vscode-webview */ "../../../node_modules/sprotty-vscode-webview/lib/index.js");
var receivedFromServerProperty = '__receivedFromServer';
var GLSPVscodeDiagramServer = /** @class */ (function (_super) {
    __extends(GLSPVscodeDiagramServer, _super);
    function GLSPVscodeDiagramServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GLSPVscodeDiagramServer.prototype.initialize = function (registry) {
        var _this = this;
        client_1.registerDefaultGLSPServerActions(registry, this);
        this.clientId = this.viewerOptions.baseDiv;
        window.addEventListener('message', function (message) {
            if ('data' in message && sprotty_vscode_webview_1.isActionMessage(message.data)) {
                _this.messageReceived(message.data);
            }
        });
    };
    GLSPVscodeDiagramServer.prototype.handleLocally = function (action) {
        if (client_1.isSetEditModeAction(action)) {
            return this.handleSetEditModeAction(action);
        }
        return _super.prototype.handleLocally.call(this, action);
    };
    GLSPVscodeDiagramServer.prototype.handleComputedBounds = function (action) {
        return true;
    };
    GLSPVscodeDiagramServer.prototype.handleSetEditModeAction = function (action) {
        return action[receivedFromServerProperty] !== true;
    };
    return GLSPVscodeDiagramServer;
}(sprotty_vscode_webview_1.VscodeDiagramServer));
exports.GLSPVscodeDiagramServer = GLSPVscodeDiagramServer;


/***/ }),

/***/ "../../../vscode-webview/lib/index.js":
/*!********************************************************************************************!*\
  !*** /home/tobias/Git/OpenSource/glsp/glsp-vscode-integration/vscode-webview/lib/index.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(/*! ./glsp-starter */ "../../../vscode-webview/lib/glsp-starter.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-vscode-diagramserver */ "../../../vscode-webview/lib/glsp-vscode-diagramserver.js"), exports);


/***/ }),

/***/ "./css/diagram.css":
/*!*************************!*\
  !*** ./css/diagram.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../../../node_modules/css-loader/dist/cjs.js!./diagram.css */ "../../../node_modules/css-loader/dist/cjs.js!./css/diagram.css");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../../../node_modules/style-loader/lib/addStyles.js */ "../../../node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./lib/main.js":
/*!*********************!*\
  !*** ./lib/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowGLSPStarter = void 0;
/********************************************************************************
 * Copyright (c) 2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! ../css/diagram.css */ "./css/diagram.css");
__webpack_require__(/*! reflect-metadata */ "../../../node_modules/reflect-metadata/Reflect.js");
var workflow_sprotty_1 = __webpack_require__(/*! @eclipse-glsp-examples/workflow-sprotty */ "../../../node_modules/@eclipse-glsp-examples/workflow-sprotty/lib/index.js");
var vscode_webview_1 = __webpack_require__(/*! @eclipse-glsp/vscode-webview */ "../../../vscode-webview/lib/index.js");
var WorkflowGLSPStarter = /** @class */ (function (_super) {
    __extends(WorkflowGLSPStarter, _super);
    function WorkflowGLSPStarter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WorkflowGLSPStarter.prototype.createContainer = function (diagramIdentifier) {
        return workflow_sprotty_1.createWorkflowDiagramContainer(diagramIdentifier.clientId);
    };
    return WorkflowGLSPStarter;
}(vscode_webview_1.GLSPStarter));
exports.WorkflowGLSPStarter = WorkflowGLSPStarter;
new WorkflowGLSPStarter();


/***/ })

/******/ });
//# sourceMappingURL=webview.js.map